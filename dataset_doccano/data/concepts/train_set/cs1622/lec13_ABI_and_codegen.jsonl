ABI
Codegen
Application
Binary Interfaces
ABIs
API
backend
machine code
Application Binary Interface
machine code
ABI
ABI
Language ABI
OS ABI
Architectural ABI
Architectural ABI
ISA
ABI
OS
Operating Systems
operating system
OSes
ABI
function calls
architectural ABI
system calls
asynchronous messages
executables
shared libraries
memory
ABIs
compilers
ABI
HLLs
architectural or OS ABIs
exceptions
dynamic method dispatch
compilers
ABIs
ABIs
ABI
method calls
compilers
compiled
Compiler
Compiler
ABIs
compiler
ABI
HLL
ABI
OS
compiler
compiler
ABI
ABI
stack
ISA
stack
Stack
stack
stack pointer
sp
pushing
popping
stack
ABI
stack
stack
stack
alignment
stack
stack
stack
stack overflow
ABI
calling convention
arguments
return
address
calling convention
ABI
code generator
ABI
ABIs
calling conventions
calling convention
system calls
syscalls
ISA
system call
syscall
syscall
calling convention
syscalls
Standard and
Runtime Libraries
standard library
stdlib
standard libraries
standard library
compiler
HLL
ISA
runtime library
runtime
runtime library
codegen
standard library
compiler
compiler
compilers
compiler
runtime libraries
runtime
compiler
runtime library
standard library
compiler's
codegen
compiler
function calls
codegen
Truss's
ABI
Trussâ€™s
ABI
ABI
codegen
ABI
calling convention
Memory regions
.data segment
global
variables
tln_
heap
dynamically
allocated
 hea
 stac
tracing garbage collector
local variables
global variables
globals
Runtime data representation
runtime
Truss
Function calls
caller
calling functions
arguments
stack
stack
arguments
sp
sp
sp
sp
argument
sp
return values
global variable
sp
sp
sp
caller
calling
callee
cleans the stack
Stack Frames
stack frame
arguments
variables
saved registers
stack
stack frame
argument
caller
return address
local variables
Local variables
local variable
stack
sp
sp
sp
stack pointer
locals
arguments
generating code
sp
sp
sp
sp
sp
sp
sp
argument
sp
sp
sp
sp
stack pointer
Frame Pointer
fp
stack frame
locals
fp
fp
sp
stack
locals
local
stack/frame pointers
sp
fp
fp
fp
fp
sp
fp
Function Prologue
function prologue
stack frame
stack frames
caller
callee
fp
sp
caller's
frame pointer
sp
fp
sp
sp
sp
callee's
return address
callee's
frame pointer
argument
callee's
stack
pointer
locals
locals
saved registers
Function Epilogue
epilogue
restores the stack
fp
return address
fp
caller's
frame pointer
sp
sp
cleans the stack
locals
saved regs
arguments
stack frame
generating the code
