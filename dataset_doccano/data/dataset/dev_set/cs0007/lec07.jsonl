{"id": 291, "segment": "dev_set", "course": "cs0007", "lec": "lec07", "text": "CS 0007: Introduction to Java\nLecture 7\nNathan Ong\nUniversity of Pittsburgh\nSeptember 22, 2016\n\n\fFUNCTIONS\n\n\fFunctions\n\u2022 A function is similar to its mathematical\ncounterpart\n\u2022 f(x) = x2, plug in 3, get 9\n\u2022 Contains several more parts\n\n\fJava Functions\n\u2022 Takes in zero or more parameters,\nprocesses them in the function body,\nand returns a result\n\u2022 Imagine going to BestBuyTM and telling\nthem you want your computer fixed.\nYou are telling them to run a fixing\nfunction, with your computer being a\nparameter. What you get back is your\nfixed computer.\n\n\fYou Already Have the Power!\n\u2022 You already know how to call functions!\nStatic:\nClassName.functionName(<parameters\n>);\nNon-static:\nobjectName.functionName(<parameter\ns>);\n\u2022 How do I make my own?\n\n\fFunction Components\n\n1.\n2.\n3.\nFunction 4.\nHeader 5.\n\nFunction\nBody 6.\n\nVisibility type (public/protected/private)\nstatic (For now, required)\nReturn Type\nfunctionName\nParentheses \u201c()\u201d\n\u2013\na)\nb)\nc)\n\nParameters\nType1 parameterName1\nType2 parameterName2\n\u2026\n\nCurly Brackets/Braces \u201c{}\u201d\n\u2013\n\nreturn a value\n\n\fA Simple Unnecessary\nFunction\n\u2022 I want this function to take two doubles\nand return their sum.\n\u2022 Let us go through the list and see what\nneeds to be incorporated for the\nfunction.\n\n\fFunction Components\n1.\n2.\n3.\n4.\n5.\n\nWe\u2019ll just use public for now.\nstatic (For now, required)\nWhat is the Return Type?\nWhat is an appropriate functionName?\nParentheses \u201c()\u201d\n\u2013\n\nWhat are the parameters?\n\n6. Curly Brackets/Braces \u201c{}\u201d\n\u2013\n\u2013\n\nWhat do we do in the Function Body?\nWhat do we return?\n\n\fReturn Type\n\u2022 What kind of thing are we going to give\nback to the function caller?\n\u2022 \u201cI want this function to take two\ndoubles and return their sum.\u201d\n\u2022 The sum of two doubles better be a\ndouble.\n\n\fFunction Name\n\u2022 The function name should easily\ndescribe what the function does.\n\u2022 \u201cI want this function to take two\ndoubles and return their sum.\u201d\n\u2022 \u201csum\u201d? Probably not enough detail,\nsince there are many types that can be\nsummed.\n\u2022 sumDoubles\n\n\fParameters\n\u2022 The required input to the function.\n\u2022 The data that the function needs in\norder to properly execute its duties.\n\u2022 \u201cI want this function to take two\ndoubles and return their sum.\u201d\n\u2022 Two doubles.\n\u2022 Names?\n\n\fFunction Header\n\n//sums two doubles together\npublic static double sumDoubles\n(double addend1, double addend2)\n\n\fFunction Body\n\u2026(Function Header)\n{\n???\n}\n\n\fFunction Body\n\u2026(Function Header)\n{\ndouble sum = addend1 + addend2;\nreturn sum;\n}//end method(double,double)\n\n\fFunction Body\n\u2026(Function Header)\n{\nreturn addend1 + addend2;\n}//end method(double,double)\n\n\fFunction Body\npublic class Functions\n{\n\u2026(Function)\npublic static void main(String[] args)\n{\ndouble sum = sumDoubles(2.5,3.9);\nSystem.out.println(sum);\n}//end method main\n}//End class Functions\n\n\fimport java.util.Scanner;\npublic class AddingMachine\n{\n\u2026(Function)\npublic static void main(String[] args)\n{\nScanner scan = new Scanner(System.in);\nSystem.out.println(\"Please enter a number:\");\ndouble firstNum = scan.nextDouble();\nSystem.out.println(\"Please enter a second\nnumber:\");\ndouble secondNum = scan.nextDouble();\ndouble sum = sumDoubles(firstNum,secondNum);\nSystem.out.println(\"The sum of \" + firstNum +\n\" and \" + secondNum + \" equals \" +\nsum);\n}//end method main\n}//End class AddingMachine\n\n\fScope\n\u2022 Why did we need to submit firstNum\nand secondNum to sumDoubles?\n\u2022 Why can\u2019t sumDoubles just use the\nalready created variables?\n\u2022 This relates to scope.\n\n\fScope\nConfidential\nSecret\nTop Secret\n\n\fScope\npublic class\nAddingMachine\npublic\nstatic void\nmain\n\npublic\nstatic\ndouble\nsumDoubl\nes\n\n\fPassing-in Parameters\n\u2022 The act of providing parameters in a\nfunction call is called Passing-in.\n\u2022 Java has two kinds of passing-in.\n\n\fPass-by-Value\n\u2022 Passing-in a copy of the value of the\nvariable.\n\u2022 Any change made to the variable is not\nreflected when the function returns.\n\u2022 All primitive type parameters are passby-value.\n\n\fPass-by-Reference\n\u2022 Passing-in the actual variable.\n\u2022 Any change made to the variable IS\nreflected when the function returns,\nUNLESS the parameter name is\nREASSIGNED.\n\u2022 All non-primitive type parameters are\npass-by-reference.\n\n\fAnother Simple Function\n\u2022 I want a function that prints a nice\nBritish greeting, complete with the\nperson\u2019s full name.\nSource:\nhttp://www.bbcamerica.com/anglophen\nia/2011/07/five-slang-ways-to-say-hello/\n\n\fFunction Components\n1.\n2.\n3.\n4.\n5.\n\npublic\nstatic\nWhat is the Return Type?\nWhat is an appropriate functionName?\nParentheses \u201c()\u201d\n\u2013\n\nWhat are the parameters?\n\n6. Curly Brackets/Braces \u201c{}\u201d\n\u2013\n\u2013\n\nWhat do we do in the Function Body?\nWhat do we return?\n\n\fReturn Type\n\u2022 Does this function even need to return\nany data or information?\n\u2022 No, so we should use void as our\nreturn type.\n\n\fFunction Header\n\npublic static void britishGreeting\n(String fullName)\n\n\fFunction Body\n\u2026(Function Header)\n{\nSystem.out.println(\"Wotcha \" +\nfullName +\n\". Fancy a cuppa?\");\n}//end method(String)\n//Note no return statement\n\n\f", "Comments": [], "label": [[97, 106, "Concept"], [109, 118, "Concept"], [123, 131, "Concept"], [237, 251, "Concept"], [276, 286, "Concept"], [310, 323, "Concept"], [329, 336, "Concept"], [459, 467, "Concept"], [496, 505, "Concept"], [610, 619, "Concept"], [621, 627, "Concept"], [746, 754, "Concept"], [776, 784, "Concept"], [788, 794, "Concept"], [799, 812, "Concept"], [834, 840, "Concept"], [841, 850, "Concept"], [851, 858, "Concept"], [860, 866, "Concept"], [887, 898, "Concept"], [899, 911, "Concept"], [941, 951, "Concept"], [1027, 1033, "Concept"], [1065, 1073, "Concept"], [1088, 1096, "Concept"], [1214, 1222, "Concept"], [1226, 1234, "Concept"], [1277, 1283, "Concept"], [1293, 1299, "Concept"], [1332, 1343, "Concept"], [1368, 1380, "Concept"], [1415, 1425, "Concept"], [1484, 1497, "Concept"], [1510, 1516, "Concept"], [1520, 1531, "Concept"], [1586, 1601, "Concept"], [1618, 1626, "Concept"], [1717, 1730, "Concept"], [1737, 1750, "Concept"], [1783, 1791, "Concept"], [1813, 1821, "Concept"], [1964, 1974, "Concept"], [2003, 2011, "Concept"], [2033, 2041, "Concept"], [2182, 2197, "Concept"], [2294, 2307, "Concept"], [2310, 2324, "Concept"], [2337, 2350, "Concept"], [2353, 2368, "Concept"], [2447, 2460, "Concept"], [2463, 2478, "Concept"], [2539, 2552, "Concept"], [2553, 2559, "Concept"], [2566, 2575, "Concept"], [2580, 2588, "Concept"], [2590, 2596, "Concept"], [2597, 2603, "Concept"], [2722, 2731, "Concept"], [2791, 2799, "Concept"], [2801, 2807, "Concept"], [2808, 2814, "Concept"], [3235, 3240, "Concept"], [3359, 3368, "Concept"], [3388, 3393, "Concept"], [3397, 3402, "Concept"], [3436, 3441, "Concept"], [3442, 3448, "Concept"], [3469, 3475, "Concept"], [3476, 3482, "Concept"], [3494, 3500, "Concept"], [3501, 3507, "Concept"], [3540, 3550, "Concept"], [3574, 3584, "Concept"], [3590, 3603, "Concept"], [3614, 3624, "Concept"], [3650, 3660, "Concept"], [3664, 3677, "Concept"], [3680, 3690, "Concept"], [3788, 3796, "Concept"], [3797, 3804, "Concept"], [3842, 3854, "Concept"], [3858, 3875, "Concept"], [3878, 3889, "Concept"], [3966, 3974, "Concept"], [3975, 3982, "Concept"], [3995, 4004, "Concept"], [4050, 4060, "Concept"], [4065, 4082, "Concept"], [4101, 4109, "Concept"], [4121, 4129, "Concept"], [4292, 4300, "Concept"], [4328, 4334, "Concept"], [4335, 4341, "Concept"], [4354, 4365, "Concept"], [4390, 4402, "Concept"], [4437, 4447, "Concept"], [4506, 4519, "Concept"], [4532, 4538, "Concept"], [4542, 4553, "Concept"], [4643, 4647, "Concept"], [4655, 4666, "Concept"], [4670, 4685, "Concept"], [4742, 4755, "Concept"], [4758, 4773, "Concept"], [4872, 4878, "Concept"]]}