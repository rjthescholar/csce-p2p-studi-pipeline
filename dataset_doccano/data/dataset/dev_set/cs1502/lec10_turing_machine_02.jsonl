{"id": 295, "segment": "dev_set", "course": "cs1502", "lec": "lec10_turing_machine_02", "text": "Turing Machine 02\nThumrongsak Kosiyatrakul\ntkosiyat@cs.pitt.edu\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nTuring Machine 02\n\n\fTuring Machine Example\n\nDesign a Turing machine that recognizes the language B\nwhere\nB = {w#w | w \u2208 \u03a3\u2217 }\nOn input string w:\n1\n\n2\n\nZig-zag across the tape to corresponding positions on either\nside of the # symbol to check whether those positions contain\nthe same symbol. If they do not, or if no # is found, reject.\nCross off symbols as they are checked to keep track of which\nsymbols correspond.\nWhen all symbols to the left of the # have been crossed off,\ncheck for any remaining symbols to the right of the #. If any\nsymbols remain, reject; otherwise, accept.\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nTuring Machine 02\n\n\fTuring Machine M1\nA Turing machine that decides B = {w#w | w \u2208 \u03a3\u2217 }.\n\n1\n\nx,\nR\n\nq1\n\n0\n\nR\nx,\n\n\u2192\n\n\u2192\n\n#\u2192R\n\n0, 1 \u2192 R\n\nq2\n#\u2192R\n\nx\u2192R\n\nx\u2192R\n\nq8\nt\n\nq4\n\n\u2192R\n\n#\u2192R\n\nqaccept\n\nq5\n\n1\n\nL\nx,\n\n\u2192\n\n\u2192\n\nx,\n\nL\n\n0\n\n0, 1, x \u2192 L\n\nq6\n#\u2192L\nx\u2192R\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nq7\n\n0, 1 \u2192 R\n\nq3\n\n0, 1 \u2192 L\n\nTuring Machine 02\n\nx\u2192R\n\n\fTuring Machine M1\n\u03a3 = {0, 1, #}\n\u0393 = {0, 1, #, x, t}\n1 \u2192 x, R\nRead 1, write x, and move the tape head to the right direction\n\n#\u2192R\nA shorthand notation for # \u2192 #, R\nRead #, write #, and move the tape head to the right direction\n\n0, 1 \u2192 L\nA shorthand notation representing two transitions:\n0 \u2192 L which is 0 \u2192 0, L\n1 \u2192 L which is 1 \u2192 1, L\n\nqreject is omitted\nAll missing exiting arrows go to qreject\nAssume that it moves the tape head to the right direction\nbefore entering qreject without writing a symbol (writing the\nsame symbol it read)\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nTuring Machine 02\n\n\fTuring Machine M1\nComputing 01#01\n\n1\n\nx,\nR\n\nq1\n\n0, 1 \u2192 R\n\nR\n\n0\n\nx,\n\n\u2192\n\n\u2192\n\n#\u2192R\n\nq2\n#\u2192R\n\nx\u2192R\n\nx\u2192R\n\nq8\nt\n\nq4\n\n0, 1 \u2192 R\n\nq3\n\n\u2192R\n\n#\u2192R\n\nqaccept\n\nq5\n\n1\n\nL\nx,\n\n\u2192\n\n\u2192\n\nx,\nL\n\n0\n\n0, 1, x \u2192 L\n\nq6\n#\u2192L\nx\u2192R\n\nq7\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\n0, 1 \u2192 L\n\nTuring Machine 02\n\nx\u2192R\n\nq1 01#01\nxq2 1#01\nx1q2 #01\nx1#q4 01\nx1q6 #x1\nxq7 1#x1\nq7 x1#x1\nxq1 1#x1\nxxq3 #x1\nxx#q5 x1\nxx#xq5 1\nxx#q6 xx\nxxq6 #xx\nxq7 x#xx\nxxq1 #xx\nxx#q8 xx\nxx#xq8 x\nxx#xxq8 t\nxx#xxtqaccept\n\n\fTuring Machine M1\nComputing 01#10\n\n1\n\nx,\nR\n\nq1\n\n0, 1 \u2192 R\n\nR\n\n0\n\nx,\n\n\u2192\n\n\u2192\n\n#\u2192R\n\nq2\n#\u2192R\n\nx\u2192R\n\nx\u2192R\n\nq8\nt\n\nq4\n\n0, 1 \u2192 R\n\nq3\n\n\u2192R\n\n#\u2192R\n\nqaccept\n\nq5\n\n1\n\nL\nx,\n\n\u2192\n\n\u2192\n\nx,\nL\n\n0\n\n0, 1, x \u2192 L\n\nq6\n#\u2192L\nx\u2192R\n\nq7\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\n0, 1 \u2192 L\n\nTuring Machine 02\n\nx\u2192R\n\nq1 01#10\nxq2 1#10\nx1q2 #10\nx1#q4 10\nx1#1qreject 0\n\n\fTuring Machine M1\nComputing 01 (no # symbol)\n\n1\n\nx,\nR\n\nq1\n\n0, 1 \u2192 R\n\nR\n\n0\n\nx,\n\n\u2192\n\n\u2192\n\n#\u2192R\n\nq2\n#\u2192R\n\nx\u2192R\n\nx\u2192R\n\nq8\nt\n\nq4\n\n0, 1 \u2192 R\n\nq3\n\n\u2192R\n\n#\u2192R\n\nqaccept\n\nq5\n\n1\n\nL\nx,\n\n\u2192\n\n\u2192\n\nx,\nL\n\n0\n\n0, 1, x \u2192 L\n\nq6\n#\u2192L\nx\u2192R\n\nq7\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\n0, 1 \u2192 L\n\nTuring Machine 02\n\nx\u2192R\n\nq1 01\nxq2 1\nx1q2 t\nx1tqreject\n\n\fTuring Machine Example\n\nDesign a Turing machine that recognizes the language A\nwhere\nn\nA = {02 | n \u2265 0}\nOn input string w:\n1\n2\n3\n\n4\n5\n\nSweep left to right across the tape, crossing off every other 0\nIf in stage 1 the tape contained a single 0, accept\nIf in stage 1 the tape contained more than a single 0 and the\nnumber of 0s was odd, reject\nReturn the head to the left-hand end of the tape\nGo to stage 1\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nTuring Machine 02\n\n\fMoving the Tape Head Back\nSuppose we want to move the tape head back to the left most\nend of the tape\nNeed a state to do that\n0, 1, x \u2192 L\n\nThis will result in an infinite loop\n\nRecall that if the tape head is at the left-most square and the\ntransition is L, it will stay at the same place\nThere is no signal telling a TM that its tape head is currently\nat the left-most square\n\nThe trick is to mark the left-most symbol (depending on \u0393)\nTurn 0 or 1 to t\nTurn 0 to 0\u0307 or x\nTurn 1 to 1\u0307 or t\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nTuring Machine 02\n\n\fTuring Machine M2\nn\n\nA Turing machine that decides A = {02 | n \u2265 0}.\n0\u2192L\nx\u2192L\n\n\u2192\nt\n\n\u2192R\nx\u2192R\n\n0 \u2192 x, R\n\nt\n\nt\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\n\u2192R\n\nq3\n\n0\u2192R\n\nqaccept\n\nt\n\nx\u2192R\n\nL\n\nq2\n\n0 \u2192 t, R\n\nqreject\n\n\u2192\n\nx\u2192R\nq1\n\nt\n\nR\n\nq5\n\n\u2192R\n\nTuring Machine 02\n\n0 \u2192 x, R\n\nq4\n\nx\u2192R\n\n\fTuring Machine M2\nComputing 0000\nq1 0000\nq2 000\ntxq3 00\ntx0q4 0\ntx0xq3 t\ntx0q5 x\ntxq5 0x\ntq5 x0x\nq5 tx0x\ntq2 x0x\ntxq2 0x\ntxxq3 x\ntxxxq3 t\ntxxq5 x\ntxq5 xx\ntq5 xxx\nq5 txxx\ntq2 xxx\ntxq2 xx\ntxxq2 x\ntxxxq2 t\ntxxxtqaccept\nt\n\n0\u2192L\nx\u2192L\n\n\u2192\nt\n\n\u2192R\nx\u2192R\n\n\u2192R\n\nqaccept\n\nt\n\nq3\n\n0 \u2192 x, R\n\nt\n\nx\u2192R\n\nL\n\nq2\n\n0 \u2192 t, R\n\nt\n\nqreject\n\n\u2192\n\nx\u2192R\nq1\n\nt\n\nR\n\nq5\n\n0\u2192R\n\n0 \u2192 x, R\n\nq4\n\nx\u2192R\n\n\u2192R\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nTuring Machine 02\n\n\fTuring Machine M2\n\nComputing 000\n0\u2192L\nx\u2192L\n\n\u2192\nt\n\n\u2192R\nx\u2192R\n\n\u2192R\n\nqaccept\n\nt\n\nq3\n\n0 \u2192 x, R\n\nt\n\nx\u2192R\n\nL\n\nq2\n\n0 \u2192 t, R\n\nt\n\nqreject\n\n\u2192\n\nx\u2192R\nq1\n\nt\n\nR\n\nq5\n\n0\u2192R\n\n0 \u2192 x, R\n\nq4\n\nx\u2192R\n\n\u2192R\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nq1 000\nq2 00\ntxq3 0\ntx0q4 t\ntx0tqreject\nt\n\nTuring Machine 02\n\n\fDesigning a TM\nDesigning a TM in a form of a state diagram is hard\nNeed to keep in mind out the content of the tape\nNeed to worry about moving tape head\n\nBut for a simple problem, it is not that bad\nLet\u2019s create a TM that shift all symbols on the tape to the\nright by one square by inserting the blank symbol at the\nleft-most square and move the tape head back to the\nleft-most square\nLet \u03a3 = {0, 1} and \u0393 = {0, 1, t}\nHere are some input/output (on the tape)\nInput\nOutput\n01101 t01101\n0\nt0\n111\nt111\n\u03b5\n\u03b5\nNote that this TM always accepts all strings over \u03a3\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nTuring Machine 02\n\n\fDesigning a TM\nSolution\n0\u2192R\n\nq1\n0 \u2192 t, R\n1 \u2192 0, R\n\n0 \u2192 1, R\n\nq0\n\nt\n\n1 \u2192 t, R\n\n\u2192 0, L\n0, 1 \u2192 L\n\nq3\nt\n\n\u2192 1, L\n\nt\n\n\u2192L\nqaccept\n\nq2\n\n1\u2192R\nt\n\n\u2192L\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nTuring Machine 02\n\n\f", "Comments": [], "label": [[0, 14, "Concept"], [112, 126, "Concept"], [165, 179, "Concept"], [185, 195, "Concept"], [200, 208, "Concept"], [281, 285, "Concept"], [439, 445, "Concept"], [667, 673, "Concept"], [686, 692, "Concept"], [742, 756, "Concept"], [762, 776, "Concept"], [782, 796, "Concept"], [802, 809, "Concept"], [912, 919, "Concept"], [1050, 1064, "Concept"], [1075, 1089, "Concept"], [1093, 1094, "Concept"], [1107, 1108, "Concept"], [1166, 1175, "Concept"], [1268, 1277, "Concept"], [1349, 1360, "Concept"], [1411, 1418, "Concept"], [1463, 1470, "Concept"], [1496, 1505, "Concept"], [1545, 1552, "Concept"], [1659, 1673, "Concept"], [1679, 1693, "Concept"], [1809, 1816, "Concept"], [1932, 1946, "Concept"], [2125, 2132, "Concept"], [2135, 2149, "Concept"], [2265, 2272, "Concept"], [2388, 2402, "Concept"], [2452, 2459, "Concept"], [2465, 2478, "Concept"], [2605, 2612, "Concept"], [2728, 2742, "Concept"], [2774, 2781, "Concept"], [2784, 2798, "Concept"], [2817, 2831, "Concept"], [2837, 2847, "Concept"], [2852, 2860, "Concept"], [2950, 2954, "Concept"], [3001, 3005, "Concept"], [3028, 3034, "Concept"], [3053, 3057, "Concept"], [3119, 3125, "Concept"], [3137, 3141, "Concept"], [3170, 3174, "Concept"], [3237, 3251, "Concept"], [3268, 3277, "Concept"], [3311, 3320, "Concept"], [3354, 3358, "Concept"], [3366, 3371, "Concept"], [3453, 3462, "Concept"], [3498, 3508, "Concept"], [3575, 3577, "Concept"], [3587, 3596, "Concept"], [3691, 3692, "Concept"], [3794, 3808, "Concept"], [3813, 3828, "Concept"], [3837, 3851, "Concept"], [3857, 3864, "Concept"], [3981, 3988, "Concept"], [4015, 4022, "Concept"], [4049, 4063, "Concept"], [4089, 4102, "Concept"], [4296, 4303, "Concept"], [4333, 4340, "Concept"], [4387, 4394, "Concept"], [4492, 4506, "Concept"], [4512, 4526, "Concept"], [4572, 4578, "Concept"], [4625, 4632, "Concept"], [4762, 4769, "Concept"], [4805, 4807, "Concept"], [4820, 4822, "Concept"], [4838, 4851, "Concept"], [4904, 4908, "Concept"], [4936, 4945, "Concept"], [5007, 5009, "Concept"], [5040, 5044, "Concept"], [5139, 5148, "Concept"], [5182, 5183, "Concept"], [5197, 5198, "Concept"], [5311, 5313, "Concept"], [5346, 5347, "Concept"], [5395, 5409, "Concept"], [5427, 5429, "Concept"], [5530, 5537, "Concept"], [5601, 5615, "Concept"]]}