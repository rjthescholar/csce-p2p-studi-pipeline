{"id": 290, "segment": "dev_set", "course": "cs1550", "lec": "lec23", "text": "Introduction to Operating Systems\nCS 1550\nSpring 2022\n\nSherif Khattab\nksm73@pitt.edu\n(Some slides are from Silberschatz, Galvin and Gagne \u00a92013)\n\n\fAnnouncements\n\u2022 Upcoming deadlines:\n\u2022 Homework 11: due on 4/18\n\u2022 Project 3: Late due date on 4/13\n\u2022 Late penalty waived\n\n\u2022 Lab 4: due on 4/15\n\u2022 Quiz 3: due on 4/15\n\u2022 Homework 12: due on 4/25\n\u2022 Lab 5: due on 5/2\n\u2022 Project 4 and Quiz 4: due on 5/2\n\u2022 Bonus Homework: due on 5/2\n\u2022 Course Post-Test: due on 5/2\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n2\n\n\fMuddiest Points (1/2)\n\u2022 when is the parity checked to see if there is a bit error\n\u2022 a little confused about parity example\n\u2022 How to flip the correct bits back that were changed with\nparity?\n\u2022 What is parity used for\n\u2022 ECC\n\u2022 What things move how using what in the disk\n\u2022 disk request time delay factors\n\u2022\n\ntransfer time/rotating time/seek time\n\n\u2022 I feel like rotational delay and actual transfer time are\noverlapped. The sector is spending time to rotate to the\nhead, and at the same time, the head is rotating to find\nthat sector. Are they moving towards each other at the\nsame time?\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n3\n\n\fDisk drive structure\nhead\nsector\n\nplatter\ntrack\ncylinder\n\nsurfaces\n\nspindle\n\nactuator\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n4\n\n\fMuddiest Points (2/2)\n\u2022 In the last top hat question, why the page table gets\nsmaller if the page frames are larger. I understand\nthat would mean less entries, but wouldn't each entry\nwould be larger, making the overall table the same\nsize?\n\u2022 What are RAIDs for?\n\n\u2022 Does RAID4 have any advantages over RAID5?\n\u2022 All of it, bro\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n5\n\n\fProblem of the Day \u2013 Part 1\n\u2022 How does a file system handle errors?\n\u2022 Answer: Defense in Depth\n\u2022 multiple layers of error detection/correction\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n6\n\n\fWhen good disks go bad\u2026\nDisks have defects\nIn 3M+ sectors, this isn\u2019t surprising!\n\nECC helps with errors, but sometimes this isn\u2019t enough\n\nDisks keep spare sectors (normally unused) and remap bad\nsectors into these spares\nIf there\u2019s time, the whole track could be reordered\u2026\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n7\n\n\fRAIDs, RAIDs, and more RAIDs\nstrip\n\nstrip\n\nStripe\nRAID 0\n(Redundant Array of Inexpensive Disks\n\nRAID 1\n(Mirrored copies)\n\nRAID 4\n(Striped with parity)\n\nRAID 5\n(Parity rotates through disks)\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n8\n\n\fBacking up a file system\n\u2022 A file system to be dumped\n\u2022 Squares are directories, circles are files\n\u2022 Shaded items, modified since last dump\n\u2022 Each directory & file labeled by i-node number\n\nFile that has\nnot changed\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n9\n\n\fBitmaps used in a file system dump\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n10\n\n\fChecking the file system for consistency\nConsistent\n\nMissing (\u201clost\u201d) block\n\nDuplicate block in free list\n\nDuplicate block in two files\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n11\n\n\fProblem of the Day \u2013 Part 2\n\u2022 How does a file system hide disk access delays?\n\u2022 Answer: Caching\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n12\n\n\fFile block cache data structures\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n13\n\n\fLog-structured file systems\n\u2022 Trends in disk & memory\n\u2022 Faster CPUs\n\u2022 Larger memories\n\n\u2022 Result\n\u2022 More memory -> disk caches can also be larger\n\u2022 Increasing number of read requests can come from cache\n\u2022 Thus, most disk accesses will be writes\n\n\u2022 LFS structures entire disk as a log\n\u2022 All writes initially buffered in memory\n\u2022 Periodically write these to the end of the disk log\n\u2022 When file opened, locate i-node, then find blocks\n\n\u2022 Issue: what happens when blocks are deleted?\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n14\n\n\fLog Structured File System\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n15\n\n\fLog Structured File System\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n16\n\n\fFlash File System\n\nWear Leveling\n\nCount total writes per flash sector and attempt to\nbalance across the whole disk\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n17\n\n\fWear leveling for SSDs\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n18\n\n\fDisk block size\n\u2022 Dark line (left hand scale) gives data rate of a disk\n\n\u2022 Dotted line (right hand scale) gives disk space\nefficiency\n\u2022 All files 2KB\n\nBlock size\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n19\n\n\fProblem of the Day \u2013 Part 3\n\u2022 How do device drivers program I/O devices?\n\u2022 Answer: three methods\n\u2022 polling\n\u2022 Interrupts\n\u2022 DMA\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n20\n\n\fHow are I/O devices connected?\n\u2022 Single-bus\n\u2022 All memory accesses go\nover a shared bus\n\u2022 I/O and RAM accesses\ncompete for bandwidth\n\nCPU\n\nMemory\n\nI/O\n\nCPU\n\nMemory\n\nI/O\n\n\u2022 Dual-bus\n\u2022 RAM access over highspeed bus\n\u2022 I/O access over lower-speed\nbus\n\u2022 Less competition\n\u2022 More hardware (more\nexpensive\u2026)\n\nThis port allows I/O devices\naccess into memory\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n21\n\n\fMemory-Mapped vs. separate I/O Space\n\nMemory\n0xFFF\u2026\n\nI/O ports\n\n0\n\nSeparate\nI/O & memory\nspace\n\nMemory-mapped I/O\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\nHybrid: both\nmemory-mapped &\nseparate spaces\n\n22\n\n\fExample: Dynamic Frequency on XScale\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n23\n\n\fProgrammed I/O example: printing a page\n\nUser\n\nPrinted\npage\n\nKernel\n\nABCD\nEFGH\n\nPrinted\npage\nABCD\nEFGH\n\nA\n\nABCD\nEFGH\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\nPrinted\npage\nABCD\nEFGH\n\nAB\n\nABCD\nEFGH\n\n24\n\n\fPolling\n\ncopy_from_user (buffer, p, count); // copy into kernel buffer\nfor (j = 0; j < count; j++) {\n// loop for each char\nwhile (*printer_status_reg != READY)\n;\n// wait for printer to be ready\n*printer_data_reg = p[j]; // output a single character\n}\nreturn_to_user();\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n25\n\n\fHardware\u2019s view of interrupts\n\nBus\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n26\n\n\fInterrupt-driven I/O\ncopy_from_user (buffer, p, count);\nj = 0;\nenable_interrupts();\nwhile (*printer_status_reg != READY)\n;\n*printer_data_reg = p[0];\nscheduler(); // and block user\nif (count == 0) {\nunblock_user();\n} else {\nj++;\n*printer_data_reg = p[j];\ncount--;\n}\nacknowledge_interrupt();\nreturn_from_interrupt();\n\nCode run by system call\n\nCode run at interrupt time\n(Interrupt handler)\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n27\n\n\f", "Comments": [], "label": [[539, 545, "Concept"], [611, 617, "Concept"], [685, 691, "Concept"], [703, 709, "Concept"], [721, 724, "Concept"], [766, 770, "Concept"], [808, 821, "Concept"], [822, 835, "Concept"], [836, 845, "Concept"], [861, 877, "Concept"], [889, 902, "Concept"], [1137, 1147, "Concept"], [1158, 1162, "Concept"], [1163, 1169, "Concept"], [1171, 1178, "Concept"], [1179, 1184, "Concept"], [1185, 1193, "Concept"], [1195, 1203, "Concept"], [1205, 1212, "Concept"], [1214, 1222, "Concept"], [1336, 1346, "Concept"], [1367, 1378, "Concept"], [1526, 1531, "Concept"], [1545, 1550, "Concept"], [1576, 1581, "Concept"], [1691, 1703, "Concept"], [1767, 1782, "Concept"], [1855, 1860, "Concept"], [1869, 1874, "Concept"], [1895, 1902, "Concept"], [1928, 1931, "Concept"], [1984, 1989, "Concept"], [2001, 2008, "Concept"], [2041, 2048, "Concept"], [2094, 2099, "Concept"], [2171, 2176, "Concept"], [2178, 2183, "Concept"], [2194, 2199, "Concept"], [2200, 2205, "Concept"], [2207, 2212, "Concept"], [2214, 2220, "Concept"], [2221, 2227, "Concept"], [2229, 2265, "Concept"], [2267, 2273, "Concept"], [2293, 2299, "Concept"], [2301, 2308, "Concept"], [2314, 2320, "Concept"], [2323, 2329, "Concept"], [2331, 2337, "Concept"], [2354, 2359, "Concept"], [2425, 2436, "Concept"], [2441, 2452, "Concept"], [2459, 2465, "Concept"], [2480, 2491, "Concept"], [2505, 2510, "Concept"], [2547, 2551, "Concept"], [2559, 2568, "Concept"], [2571, 2575, "Concept"], [2587, 2594, "Concept"], [2602, 2606, "Concept"], [2679, 2686, "Concept"], [2697, 2713, "Concept"], [2780, 2790, "Concept"], [2795, 2806, "Concept"], [2807, 2817, "Concept"], [2836, 2841, "Concept"], [2853, 2858, "Concept"], [2862, 2871, "Concept"], [2883, 2888, "Concept"], [2896, 2901, "Concept"], [2995, 3006, "Concept"], [3012, 3030, "Concept"], [3042, 3049, "Concept"], [3102, 3106, "Concept"], [3107, 3112, "Concept"], [3113, 3118, "Concept"], [3187, 3214, "Concept"], [3300, 3304, "Concept"], [3305, 3311, "Concept"], [3382, 3387, "Concept"], [3433, 3447, "Concept"], [3455, 3459, "Concept"], [3465, 3468, "Concept"], [3556, 3564, "Concept"], [3572, 3576, "Concept"], [3592, 3598, "Concept"], [3610, 3616, "Concept"], [3645, 3651, "Concept"], [3716, 3742, "Concept"], [3795, 3821, "Concept"], [3874, 3891, "Concept"], [3893, 3906, "Concept"], [3931, 3943, "Concept"], [3984, 3988, "Concept"], [4040, 4053, "Concept"], [4058, 4062, "Concept"], [4115, 4119, "Concept"], [4120, 4125, "Concept"], [4182, 4186, "Concept"], [4227, 4231, "Concept"], [4366, 4381, "Concept"], [4389, 4400, "Concept"], [4428, 4435, "Concept"], [4438, 4448, "Concept"], [4451, 4454, "Concept"], [4515, 4526, "Concept"], [4540, 4550, "Concept"], [4590, 4593, "Concept"], [4678, 4686, "Concept"], [4907, 4920, "Concept"], [5003, 5020, "Concept"], [5081, 5094, "Concept"], [5416, 5423, "Concept"], [5756, 5766, "Concept"], [5768, 5771, "Concept"], [5824, 5844, "Concept"], [6152, 6163, "Concept"], [6177, 6186, "Concept"], [6193, 6210, "Concept"]]}