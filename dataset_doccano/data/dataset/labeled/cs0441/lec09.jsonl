{"id": 21, "segment": ["train_set", "labeled"], "course": "cs0441", "lec": "lec09", "text": "Discrete Structures for Computer\nScience\n\nWilliam Garrison\nbill@cs.pitt.edu\n6311 Sennott Square\nLecture #9: Set Identities and Functions\n\nBased on materials developed by Dr. Adam Lee\n\n\fToday\u2019s Topics\nSet identities\nl Methods of proof\nl Relationships to logical equivalences\n\nFunctions\nl Important definitions\nl Relationships to sets, relations\nl Specific functions of particular importance\n\n\fSet identities help us manipulate complex\nexpressions\nRecall from last lecture that set operations bear a\nstriking resemblance to logical operations\nl Disjunction (\u2228) and set union (\u222a)\nl Conjunction (\u2227) and set intersection (\u2229)\nl Negation (\u00ac) and complement ( )\n\nJust as logical equivalences helped us manipulate\nlogical expressions, set identities help us simplify and\nunderstand complex set definitions.\n\n\fSome important set identities\nIdentity\n\nName\n\nA\u222a\u2205=A\nA\u2229U=A\n\nIdentity laws\n\nA\u222aU=U\nA\u2229\u2205=\u2205\n\nDomination laws\n\nA\u222aA=A\nA\u2229A=A\n\nIdempotent laws\nComplementation law\n\nA=A\nA\u222aB=B\u222aA\nA\u2229B=B\u2229A\n\nCommutative laws\n\nA \u222a (B \u222a C) = (A \u222a B) \u222a C\nA \u2229 (B \u2229 C) = (A \u2229 B) \u2229 C\n\nAssociative laws\n\nWe don\u2019t have commutative or associative laws for\nset difference!\n\n\fSome important set identities\nIdentity\n\nName\n\nA \u2229 (B \u222a C) = (A \u2229 B) \u222a (A \u2229 C)\nA \u222a (B \u2229 C) = (A \u222a B) \u2229 (A \u222a C)\n\nDistributive laws\nDeMorgan\u2019s laws\n\nA\u222aB=A\u2229B\nA\u2229B=A\u222aB\nA \u222a (A \u2229 B) = A\nA \u2229 (A \u222a B) = A\n\nAbsorption laws\nComplement laws\n\nA\u222aA=U\nA\u2229A=\u2205\n\n\fThere are many ways to prove set identities\nToday, we\u2019ll discuss four common methods:\n1.\n2.\n3.\n4.\n\nMembership tables\nLogical argument\nUsing set builder notation\nApplying other known set identities\n\n\fMembership tables allow us to write proofs like\nwe did using truth tables!\nThe membership table for an expression has columns\nfor sub-expressions and rows to indicate the ways in\nwhich an arbitrary element may or may not be\nincluded.\n\nExample: A membership table for set intersection\nA\n\nB\n\nA\u2229B\n\n1\n\n1\n\n1\n\n1\n\n0\n\n0\n\n0\n\n1\n\n0\n\n0\n\n0\n\n0\n\nAn element is in A \u2229 B iff it is in both A and B\n\n\fProve that A \u2229 (B \u222a C) = (A \u2229 B) \u222a (A \u2229 C)\nA\n\nB\n\nC\n\nB\u222aC\n\nA \u2229 (B \u222a C)\n\nA\u2229B\n\nA\u2229C\n\n(A \u2229 B) \u222a (A \u2229 C)\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n0\n\n1\n\n1\n\n1\n\n0\n\n1\n\n1\n\n0\n\n1\n\n1\n\n1\n\n0\n\n1\n\n1\n\n1\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n1\n\n1\n\n1\n\n0\n\n0\n\n0\n\n0\n\n0\n\n1\n\n0\n\n1\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n1\n\n1\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\nSince the appropriate columns of the membership table\nare the same, we can conclude that A \u2229 (B \u222a C) = (A \u2229 B)\n\u222a (A \u2229 C). \u274f\n\n\fSometimes, it\u2019s easier to make a logical\nargument about a set identity\nRecall: A = B iff A \u2286 B and B \u2286 A\nAs a result, we can prove a set identity by arguing that\neach side of the equality is a subset of the other.\n\nExample: Prove that A \u2229 B = A \u222a B\n1.First prove that A \u2229 B \u2286 A \u222a B\n2.Then prove that A \u222a B \u2286 A \u2229 B\nLet\u2019s see how this is done\u2026\n\n\fProve that A \u2229 B = A \u222a B\nFirst show A \u2229 B \u2286 A \u222a B\nl Let x be an arbitrary element of A \u2229 B\nl By def'n of complement, x \u2209 A \u2229 B\nl By def'n of \u2209, \u00ac(x \u2208 A \u2229 B)\nl By def'n of intersection, \u00ac(x \u2208 A \u2227 x \u2208 B)\nl By DeMorgan's, \u00ac(x \u2208 A) \u2228 \u00ac(x \u2208 B)\nl By def'n of \u2209, x \u2209 A \u2228 x \u2209 B\nl By def'n of complement, x \u2208 A \u2228 x \u2208 B\nl By def'n of union, x \u2208 A \u222a B\nl Therefore, A \u2229 B \u2286 A \u222a B\n\n\fProve that A \u2229 B = A \u222a B\nNext show A \u222a B \u2286 A \u2229 B\nl Let x be an arbitrary element of A \u222a B\nl By def'n of union, x \u2208 A \u2228 x \u2208 B\nl By def'n of complement, x \u2209 A \u2228 x \u2209 B\nl By def'n of \u2209, \u00ac(x \u2208 A) \u2228 \u00ac(x \u2208 B)\nl By DeMorgan's, \u00ac(x \u2208 A \u2227 x \u2208 B)\nl By def'n of intersection, \u00ac(x \u2208 A \u2229 B)\nl By def'n of \u2209, x \u2209 A \u2229 B\nl By def'n of complement, x \u2208 A \u2229 B\nl Therefore, A \u222a B \u2286 A \u2229 B\nSince we have shown A \u2229 B \u2286 A \u222a B and A \u222a B \u2286 A \u2229 B, we have\nshown that A \u2229 B = A \u222a B\n\n\fWe can use set builder notation and logical\ndefinition to make very precise proofs\nExample: Prove that A \u2229 B = A \u222a B\nProof:\n1. A \u2229 B = {x | x \u2209 A \u2229 B}\n2.\n= {x | \u00ac(x \u2208 (A \u2229 B))}\n3.\n= {x | \u00ac(x \u2208 A \u2227 x \u2208 B)}\n4.\n= {x | \u00ac(x \u2208 A) \u2228 \u00ac(x \u2208 B)}\n5.\n= {x | x \u2209 A \u2228 x \u2209 B}\n6.\n= {x | x \u2208 A \u2228 x \u2208 B}\n7.\n= {x | x \u2208 A \u222a B}\n8.\n=A\u222aB\n\nDef\u2019n of complement\nDef\u2019n of \u2209\nDef\u2019n of \u2229\nDeMorgan\u2019s law\nDef\u2019n of \u2209\nDef\u2019n of complement\nDef\u2019n of \u222a\nSet builder notation\n\n\u274f\n\n\fNote: Differences between \u2286 and \u2208\nRecall that A \u2286 B if A is a subset of B, whereas a \u2208 A means\nthat a is an element of A.\n\nExamples:\nl Is {1} \u2208 {1, 2, 3}?\nl Is {1} \u2286 {1, 2, 3}?\nl Is 1 \u2208 {1, 2, 3}?\nl Is {2, 3} \u2286 {1, {2, 3}, {4, 5}}?\nl Is {2, 3} \u2208 {1, {2, 3}, {4, 5}}?\nl Is \u2205 \u2208 {1, 2, 3}?\nl Is \u2205 \u2286 {1, 2, 3}?\n\nNo!\nYes!\nYes!\nNo! But {{2, 3}} is\u2026\nYes!\nNo!\nYes! \u2205 is a subset of every set\n\n\fBe careful when computing power sets\nQuestion: What is P({1, 2, {1, 2}})?\nNote: The set {1, 2, {1, 2}} has three elements\nl 1\nl 2\nl {1, 2}\n\nSo, we need all combinations of those elements:\nl \u2205\nl {1}\nl {2}\nl {{1,2}}\nl {1, 2}\nl {1, {1,2}}\nl {2, {1,2}}\nl {1, 2, {1, 2}}\n\n\u2234 P({1, 2, {1,2}}) = {\u2205, {1}, {2}, {{1,2}},\n{1, 2}, {1, {1,2}},\n{2, {1,2}},\n{1, 2, {1,2} } }\nThis power set has 23 = 8 elements.\n\n\fWe can also construct proofs by repeatedly\napplying known set identities\nExample: Prove that A \u222a (B \u2229 C) = (C \u222a B) \u2229 A\nProof:\n1. A \u222a (B \u2229 C) = A \u2229 (B \u2229 C)\n2.\n= A \u2229 (B \u222a C)\n3.\n= (B \u222a C) \u2229 A\n4.\n= (C \u222a B) \u2229 A\n\nDeMorgan\u2019s law\nDeMorgan\u2019s law\nCommutative law\nCommutative law\n\n\u274f\nNote how similar this process is to that of proving logical equivalences\nusing known logical equivalences.\n\n\fIn-class exercises\nProblem 1: Prove DeMorgan\u2019s law for complement\nover intersection using a membership table.\nProblem 2: Prove the complementation law using set\nbuilder notation.\n\n\fSets give us a way to formalize the concept of a\nfunction\nDefinition: Let A and B be nonempty sets. A function,\nf, is an assignment of exactly one element of set B to\neach element of set A.\nNote: We write f : A \u2192 B to denote that f is a function\nfrom A to B\nNote: We say that f(a) = b if the element a \u2208 A is\nmapped to the unique element b \u2208 B by the function f\nf\n\nA\na\u25cf\n\nf(a) = b\n\nB\n\u25cfb\n\n\fFunctions can be defined in a number of ways\n1. Explicitly\nl\nl\n\nf:Z\u2192Z\nf(x) = x2 + 2x + 1\n\n2. Using a programming language\nl\n\nint min(int x, int y) = { x < y ? return x : return y; }\n\n3. Using a relation\nl\nl\n\nLet S = {Anna, Brian, Christine}\nLet G = {A, B, C, D, F}\n\nf:S\u2192G\nAnna \u25cf\n\n\u25cfA\n\nBrian \u25cf\n\n\u25cfB\n\nChristine \u25cf\n\n\u25cfC\n\u25cfD\n\u25cfF\n\n\fMore terminology\nThe domain of a function is the set that the function maps from, while\nthe codomain is the set that is mapped to\nIf f(a) = b, b is called the image of a, and a is called the preimage of b\nThe range of a function f : A \u2192 B is the set of all images of elements of A\nDomain = S = {Anna, Brian, Christine}\n\nCodomain = G = {A,\nB, C, D, F}\n\nf:S\u2192G\nAnna \u25cf\n\n\u25cfA\n\nBrian \u25cf\n\n\u25cfB\n\nChristine \u25cf\n\n\u25cfC\n\u25cfD\n\u25cfF\n\nRange = {A, C}\n\n\fWhat are the domain, codomain, and range of\nthe following functions?\n1. f : Z \u2192 Z, f(x) = x3\nl Domain: Integers\nl Codomain: Integers\nl Range: Perfect cubes\n\n2. g : R \u2192 R, g(x) = x - 2\nl Domain: Real numbers\nl Codomain: Real numbers\nl Range: Real numbers\n\n3.\n\nint foo(int x, int y) = { return (x*y)%2; }\nl Domain: All (x, y) \u2208 Z\u00d7Z\nl Codomain: Integers\nl Range: {0, 1}\n\n\fA one-to-one function never assigns the same\nimage to two different elements\nDefinition: A function f : A \u2192 B is one-to-one, or\ninjective, iff \u2200x,y\u2208A [(f(x) = f(y)) \u2192 (x = y)]\nAre the following functions injections?\nl f : R \u2192 R, f(x) = x + 1\nl f : Z \u2192 Z, f(x) = x2\nl f : R+ \u2192 R+, f(x) = \u221ax\nl f:S\u2192G\n\nYes\nNo\nYes\nNo\nf:S\u2192G\n\nAnna \u25cf\nBrian \u25cf\nChristine \u25cf\n\n\u25cfA\n\u25cfB\n\u25cfC\n\u25cfD\n\u25cfE\n\n\fAn onto function \u201cuses\u201d every element of its\ncodomain\nDefinition: We call a function f : A \u2192 B onto, or\n\nsurjective, iff for every element b \u2208 B, there is some\nelement a \u2208 A such that f(a) = b.\nThink about an onto function as \u201ccovering\u201d the entirety of\nits codomain.\n\nThe following function is a surjection:\nf:A\u2192B\na\u25cf\nb\u25cf\nc\u25cf\nd\u25cf\n\n\u25cf1\n\u25cf2\n\u25cf3\n\n\fAre the following functions one-to-one, onto,\nboth, or neither?\nf:A\u2192B\na\u25cf\nb\u25cf\nc\u25cf\nd\u25cf\n\nf:A\u2192B\n\u25cf1\n\u25cf2\n\u25cf3\n\na\u25cf\nb\u25cf\nc\u25cf\nd\u25cf\n\nOne-to-one and onto\n(Aside: Functions that are both one-to-one\nand onto are called bijections)\n\nNeither!\n\nf:A\u2192B\na\u25cf\nb\u25cf\nc\u25cf\nd\u25cf\n\nOne-to-one\n\n\u25cf1\n\u25cf2\n\u25cf3\n\u25cf4\n\n\u25cf1\n\u25cf2\n\u25cf3\n\u25cf4\n\u25cf5\n\nf:A\u2192B\na\u25cf\nb\u25cf\nc\u25cf\nd\u25cf\n\n\u25cf1\n\u25cf2\n\u25cf3\n\nOnto\n\n\fBijections have inverses\nDefinition: If f : A \u2192 B is a bijection, the inverse of\nf is the function f-1 : B \u2192 A that assigns to each b \u2208\nB the unique value a \u2208 A such that f(a) = b. That is,\nf-1(b) = a iff f(a) = b.\nf\n\nGraphically:\n\nA\na\u25cf\n\nf(a) = b\n\nB\n\u25cfb\n\nf-1(b) = a\n\nNote: Only a bijection can have an inverse. (Why?)\n\n\fDo the following functions have inverses?\n1. f : R \u2192 R, f(x) = x2\nl No, since this function is not onto\n\n2. g : Z \u2192 Z, g(x) = x + 1\nl Yes, g-1(x) = x \u2013 1\n\n3. h : A \u2192 B\nl Yes\nh:A\u2192B\na\u25cf\nb\u25cf\nc\u25cf\nd\u25cf\n\nh-1 : B \u2192 A\n\u25cf1\n\u25cf2\n\u25cf3\n\u25cf4\n\n1\u25cf\n2\u25cf\n3\u25cf\n4\u25cf\n\n\u25cfa\n\u25cfb\n\u25cfc\n\u25cfd\n\n\fFunctions can be composed with one another\nGiven functions g : A \u2192 B and f : B \u2192 C, the composition\nof f and g, denoted f\u25e6g, is defined as (f\u25e6g)(x) = f(g(x)).\ng\n\nA\na\u25cf\n\ng(a) = b\n\nf\n\nB\n\u25cf g(a)\n\nf(g(a)) = c\n\nC\n\u25cfc\n\nf\u25e6g\n\nNote: For f\u25e6g to exist, the codomain of g must be a\nsubset of the domain of f.\nDefinition: If g : A \u2192 B and f : D \u2192 C and B \u2286 D, f\u25e6g is\na function A \u2192 C where (f\u25e6g)(x) = f(g(x))\n\n\fCan the following functions be composed? If so,\nwhat is their composition?\nLet f : A \u2192 A such that f(a) = b, f(b) = c, f(c) = a\ng : B \u2192 A such that g(1) = b, g(4) = a\n1. (f \u25e6 g)(x)?\n2. (g \u25e6 f)(x)?\n\nYes! f(g(1)) = c, f(g(4)) = b\nNo! A \u2284 B\n\nLet f : Z \u2192 Z, f(x) = 2x + 1\ng : Z \u2192 Z, g(x) = x2\n1. (f \u25e6 g)(x)?\n2. (g \u25e6 f)(x)?\n\nYes! (f \u25e6 g)(x) = 2x2 + 1\nYes! (g \u25e6 f)(x) = 4x2 + 4x + 1\n\nNote: There is not a guarantee that (f \u25e6 g)(x) = (g \u25e6 f)(x).\n\n\fImportant functions\nDefinition: The floor function maps a real number x\nto the largest integer y that is not greater than x. The\nfloor of x is denoted \u230ax\u230b.\n\nDefinition: The ceiling function maps a real number x\nto the smallest integer y that is not less than x. The\nceiling of x is denoted \u2308x\u2309.\n\nExamples:\nl \u230a1.2\u230b = 1\nl \u230a7.0\u230b = 7\nl \u230a-42.24\u230b = -43\n\nl \u23081.2\u2309 = 2\nl \u23087.0\u2309 = 7\nl \u2308-42.24\u2309 = -42\n\n\fWe actually use floor and ceiling quite a bit in\ncomputer science\u2026\nExample: A byte, which holds 8 bits, is typically the\nsmallest amount of memory that can be allocated on\nmost systems. How many bytes are needed to store\n123 bits of data?\nAnswer: We need \u2308123/8\u2309 = \u230815.375\u2309 = 16 bytes\n\nExample: How many 1400 byte packets can be\ntransmitted over a 14.4 kbps modem in one minute?\nAnswer: A 14.4 kbps modem can transmit 14,400*60 =\n864,000 bits per minute. Therefore, we can transmit\n\u230a864,000/(1400*8)\u230b = \u230a77.1428571\u230b = 77 packets.\n\n\fIn-class exercises\nProblem 3: Find the domain and range of each of the\nfollowing functions.\na. The function that determines the number of zeros in some\nbit string\nb. The function that maps an English word to its two\nrightmost letters\nc. The function that assigns to an integer the sum of its\nindividual digits\n\nProblem 4: On Top Hat\n\n\fFinal thoughts\nn Set identities are useful tools!\nn We can prove set identities in a number of\n(equivalent) ways\nn Sets are the basis of functions, which are used\nthroughout computer science and mathematics\nn Next time:\nl Summations (Section 2.4)\n\n\f", "label": [[108, 122, "Concept"], [127, 136, "Concept"], [200, 214, "Concept"], [275, 284, "Concept"], [392, 406, "Concept"], [726, 740, "Concept"], [815, 829, "Concept"], [859, 872, "Concept"], [887, 902, "Concept"], [917, 932, "Concept"], [933, 952, "Concept"], [975, 991, "Concept"], [1046, 1062, "Concept"], [1147, 1161, "Concept"], [1243, 1260, "Concept"], [1261, 1276, "Concept"], [1327, 1342, "Concept"], [1343, 1358, "Concept"], [1403, 1417, "Concept"], [1473, 1490, "Concept"], [1491, 1507, "Concept"], [1514, 1534, "Concept"], [1556, 1570, "Concept"], [1573, 1590, "Concept"], [1652, 1668, "Concept"], [1819, 1835, "Concept"], [2283, 2299, "Concept"], [2430, 2442, "Concept"], [2505, 2517, "Concept"], [3552, 3572, "Concept"], [3577, 3595, "Concept"], [5377, 5385, "Concept"], [5430, 5438, "Concept"], [5716, 5725, "Concept"], [6058, 6064, "Concept"], [6129, 6137, "Concept"], [6196, 6201, "Concept"], [6228, 6236, "Concept"], [6246, 6251, "Concept"], [6318, 6324, "Concept"], [6357, 6365, "Concept"], [6443, 6448, "Concept"], [6473, 6479, "Concept"], [6481, 6489, "Concept"], [6495, 6500, "Concept"], [6555, 6561, "Concept"], [6574, 6582, "Concept"], [6595, 6600, "Concept"], [6646, 6652, "Concept"], [6669, 6677, "Concept"], [6694, 6699, "Concept"], [6765, 6771, "Concept"], [6792, 6800, "Concept"], [6813, 6818, "Concept"], [6831, 6850, "Concept"], [6874, 6879, "Concept"], [6942, 6952, "Concept"], [7023, 7032, "Concept"], [7033, 7043, "Concept"], [7197, 7201, "Concept"], [7202, 7210, "Concept"], [7239, 7247, "Concept"], [7289, 7293, "Concept"], [7299, 7309, "Concept"], [7403, 7407, "Concept"], [7451, 7459, "Concept"], [7490, 7500, "Concept"], [7839, 7843, "Concept"], [7846, 7856, "Concept"], [7901, 7910, "Concept"], [7936, 7944, "Concept"], [8125, 8134, "Concept"], [8410, 8419, "Concept"], [8427, 8435, "Concept"], [8498, 8509, "Concept"], [8653, 8661, "Concept"], [8691, 8697, "Concept"], [8823, 8832, "Concept"], [8836, 8844, "Concept"], [8867, 8878, "Concept"], [9282, 9287, "Concept"], [9288, 9296, "Concept"], [9419, 9426, "Concept"], [9427, 9435, "Concept"], [9512, 9519, "Concept"], [9653, 9658, "Concept"], [9663, 9670, "Concept"], [10521, 10535, "Concept"], [10569, 10583, "Concept"], [10619, 10623, "Concept"], [10641, 10649, "Concept"]], "Comments": []}