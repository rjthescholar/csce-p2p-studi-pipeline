{"id": 47, "segment": ["train_set", "labeled"], "course": "cs0447", "lec": "lec0C", "text": "#C\nCS 0447\nIntroduction to\nComputer Programming\n\nLogic Basics\nOriginal slides by: Jarrett Billingsley\nModified with bits from: Bruce\nChilders, David Wilkinson\n\nLu\u00eds Oliveira\n\nFall 2020\n\n\fWhat's electricity?\n(EE-ish section)\n\n2\n\n\fIn your orbit\nhere's a proton. it has\na positive charge\n\n+\np\n\nhere's an electron. it has\na negative charge\ne-\n\nit kinda goes\naround\nthe proton\nin an orbit*\n\nprotons sit still while electrons can move around\n\n*it actually doesn\u2019t\u2026 it\u2019s way more complex than that!\nWaves, teleportation and other black magic!\n\n3\n\n\fOpposites attract\u2026\n\ntwo of the same\ncharge repel\n\np+\n\np+\n\ne-\n\nopposite charges\nattract\n\nbut protons are\nkinda stuck, so\u2026\n\nhere's electricity.\nhere it is\n\ne-\n\n4\n\n\fLots of fish electrons in the sea\nhere's a solid piece of metal\nthe atoms are in a fixed structure\nbut some of the electrons are free to move around\n\nright now, the charges are\nbalanced: same number of\npositive and negative\nlet's knock it out of whack\n\n5\n\n\fTwo moles is company, three's a crowd\nlet's shove more electrons in\npacking more\nelectrons in leads\nto two things:\n1. this metal is now\nnegatively charged\n\n2. the electrons are\nnow closer together\nmeaning they're less\nhappy\n\naaa\n\nnoo\n6\n\n\fCarousel of unhappiness\nif we shove some down a wire\n\nwire\nwe'd like to get off\nmister bones wild ride\n\nand then give them a\n(difficult) way out\n\nand then have something which will\nsqueeze them back together again\nwell now you have electricity\n\n7\n\n\fWatch em go\nvoltage measures\nelectron unhappiness\n\ncurrent measures how\nmany electrons per second\nare moving past a point\n\nlow\nlow\n\nhigh\nand that's electricity\n\nhigh\n\n8\n\n\fLogic Basics\n\n9\n\n\fValves (or tubes) \u2013 more fun?\n\u25cf Why is a vacuum tube called like that?\n\u25cf They are also called thermionic valves (or simply valves)\n\nhttps://en.wikipedia.org/wiki/Vacuum_tube\n\n10\n\n\fTransistors\n\u25cf a transistor is like a little valve\n\nThere are multiple\ntypes of transistors\n\ncommon\n\noutput\n\ninput\n\ninput\n\noutput\n\noutput\n\ncommon\n\nMOSFET\n\nBJT\n\ncommon\n\ninput\nCan be used many\ndifferent ways!\n11\n\n\fTransistors\n\u25cf The ones we\u2019ll focus on MOSFET transistors\no Metal-Oxide Semiconductor Field-Effect Transistor\no Commonly used just as switches (digital electronics)\n\nThe positive\nterminal (e.g. 9V)\n\n9V\n\nD\nG\n\nD\nG\n\nS\nThe negative/ground\nterminal (0V)\n\nS\n0V\n12\n\n\fTransistors\n\u25cf Used as an electrically controlled switch\no The input is connected to G (Gate)\n\u25aa controls the switch state\no The output is D (drain) is connected to S (source)\n\u25cf The voltages represent bits! (maybe 9V = 1, 0V = 0)\n\nD\nInput\n\nG\n\nOutput\nS\n13\n\n\fTransistors\n\u25cf MOSFETs come in two varieties:\n\nON\n\nOFF\n\nON\n\nD\n\nS\nG=1 G=0\n\nG\n\nOFF\n\nS\n\nG\nThis means\ninverted\n\nG=0\n\nG=1\n\nD\n\n\u201cN\u201d Type\n\n\u201cP\u201d Type\n\nWork when connected to 0\n\nWork when connected to 1\n\n14\n\n\fTransistors \u2013 Overly simplified\nThe current\nmust flow!!\nD\n0\n1G\nS\n\n\u201cN\u201d Type\n\nS\n0\n1G\n\nD\n\n\u201cP\u201d Type\n\n15\n\n\fTransistors\nNow just put 3 billion\nof them together! who\nsaid EE was hard?\n\n16\n\n\fGates\n\u25cf We can combine transistors in interesting ways to make gates\n\u25cf A gate implements one of the basic boolean logic functions\n\u25cf Let's start with the simplest: the NOT gate\nQ is the output\nA is the input\n\nA\n\nQ\nthis little bubble\nmeans \"invert\"\n\n17\n\n\fTime to bundle up\n\u25cf if we want to, say, NOT a 32-bit value, we can draw it like:\n\n32\n\n32\n\n\u25cf it's a lot nicer than drawing 32 wires with 32 NOT gates\n\u25cf Logisim calls these wire bundles\no it doesn't draw the slashes and numbers though\u2026\n\n18\n\n\fNOT with MOSFETs\nA=0\n\nA=1\n\n1\n\n0\n\nA\n\nQ\n\n\u201cP\u201d Type\n\nA\n\nQ\n\nA Q\n0 1\n1 0\n\n\u201cN\u201d Type\n\n19\n\n\fNAND with MOSFETs\nA\nB\n\nB\n\nA\n\nQ\nA\n\nB\n\nQ\n\nA\n0\n0\n1\n1\n\nB Q\n0 1\n1 1\n0 1\n1 0\n20\n\n\fAND with MOSFETs\nA\nB\n\nB\n\nA\n\nQ\nA\n\nB\n\nQ\n\nA\n0\n0\n1\n1\n\nB Q\n0 0\n1 0\n0 0\n1 1\n21\n\n\fNOR with MOSFETs\nA\nB\n\nA\nB\nQ\nA\n\nQ\n\nB\n\nA\n0\n0\n1\n1\n\nB Q\n0 1\n1 0\n0 0\n1 0\n22\n\n\fOR with MOSFETs\nA\nB\n\nA\nB\n\nQ\nA\n\nQ\n\nB\n\nA\n0\n0\n1\n1\n\nB Q\n0 0\n1 1\n0 1\n1 1\n23\n\n\fAND, OR, and\u2026 XOR?\n\u25cf we know about AND and OR, but what's XOR?\n\nA\n\nQ\n\nB\nAND gate\n\nA\n0\n0\n1\n1\n\nB Q\n0 0\n1 0\n0 0\n1 1\nAB\n\nA\n\nQ\n\nB\n\nA\n\nQ\n\nB\n\nOR gate\n\nXOR gate\n\nA\n0\n0\n1\n1\n\nA\n0\n0\n1\n1\n\nB Q\n0 0\n1 1\n0 1\n1 1\nA+B\n\nB Q\n0 0 eXclusive OR\nmeans \"one or\n1 1 the other, but\n0 1 NOT BOTH.\"\n1 0\nA\u2295B\n\n24\n\n\fAND (multiple inputs)\n\u25cf If you have more than 2 inputs\u2026\nyou can just concatenate:\n\nA\n\nQ\u2019\n\nB\nAND gate\n\nQ\u2019\n\nQ\n\nC\nAND gate\n\nA\n0\n1\n0\n1\n0\n1\n0\n1\n\nB\n0\n0\n1\n1\n0\n0\n1\n1\n\nC\n0\n0\n0\n0\n1\n1\n1\n1\n\nQ\n0\n0\n0\n0\n0\n0\n0\n1\n\n25\n\n\fAND and/or OR\n\u25cf Combining logic is just a matter of\ncombining logic gates:\n\u25cf Look at the truth entries on the truth-table\no when Q is \u201c1\u201d\n\u25cf AND each entry variable\n\u25cf Then, OR each entry:\n\u25cf In English:\n\nABC + ABC\n\nIt\u2019s truth when\n\u201cA is false\u201d and \u201cB is true\u201d and \u201cC is false\u201d\nOR\n\u201cA is false\u201d and \u201cB is true\u201d and \u201cC is true\u201d\n\nA\n0\n1\n0\n1\n0\n1\n0\n1\n\nB\n0\n0\n1\n1\n0\n0\n1\n1\n\nC\n0\n0\n0\n0\n1\n1\n1\n1\n\nQ\n0\n0\n1\n0\n0\n0\n1\n0\n\n26\n\n\fAND and/or OR\n\nABC + ABC\nA\nQ\nB\n\nC\n\nA\n0\n1\n0\n1\n0\n1\n0\n1\n\nB\n0\n0\n1\n1\n0\n0\n1\n1\n\nC\n0\n0\n0\n0\n1\n1\n1\n1\n\nQ\n0\n0\n1\n0\n0\n0\n1\n0\n\n27\n\n\fIf you give an electrical engineer a NAND gate\u2026\n\u25cf if you stick a NOT gate after an AND gate, you get a NAND gate\n\n\u25cf this kind of gate has a cool property: it's universal\no in other words, you can build an entire computer with NANDs\n\u25cf but this isn't how real circuits are designed, at least anymore\n\u25cf digital logic courses use them cause NAND gate chips are cheap\n\u25cf but in Logisim, we have infinite gates for free :D\n\u25cf use the kind of gate you need for the situation at hand\n\n28\n\n\f", "label": [[49, 54, "Concept"], [1816, 1827, "Concept"], [1895, 1906, "Concept"], [2027, 2038, "Concept"], [2065, 2083, "Concept"], [2286, 2297, "Concept"], [2541, 2552, "Concept"], [2555, 2562, "Concept"], [2738, 2749, "Concept"], [2840, 2851, "Concept"], [2921, 2926, "Concept"], [2944, 2955, "Concept"], [2984, 2989, "Concept"], [3087, 3096, "Concept"], [3497, 3501, "Concept"], [3573, 3576, "Concept"], [3648, 3651, "Concept"], [3721, 3723, "Concept"], [3794, 3797, "Concept"], [3799, 3801, "Concept"], [3808, 3811, "Concept"], [3829, 3832, "Concept"], [3837, 3839, "Concept"], [3852, 3855, "Concept"], [3866, 3869, "Concept"], [3929, 3936, "Concept"], [3938, 3946, "Concept"], [4078, 4081, "Concept"], [4170, 4178, "Concept"], [4189, 4197, "Concept"], [4280, 4283, "Concept"], [4291, 4293, "Concept"], [4685, 4688, "Concept"], [4696, 4698, "Concept"], [4838, 4847, "Concept"], [4865, 4874, "Concept"], [4884, 4892, "Concept"], [4903, 4913, "Concept"], [5027, 5031, "Concept"], [5138, 5142, "Concept"], [5199, 5204, "Concept"], [5235, 5239, "Concept"]], "Comments": []}