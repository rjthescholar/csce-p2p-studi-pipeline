{"id": 265, "segment": "self_training_2", "course": "cs1502", "lec": "lec30_final_review", "text": "Review\nThumrongsak Kosiyatrakul\ntkosiyat@cs.pitt.edu\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nReview\n\n\fPSUBSETDFA\n\nQuestion\nProve that\nPSUBSETDFA = {hA, Bi|A and B are DFAs and L(A) \u2282 L(B)}\nis decidable.\nRecall that you need to perform two tasks:\n1\n2\n\nConstruct a TM that you think it decides PSUBSETDFA\nProve that your TM is actually a decider for PSUBSETDFA\n\nRecall L(A) \u2282 L(B) (proper subset)\nL(A) 6= L(B) and L(A) is a subset of L(B)\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nReview\n\n\fPSUBSETDFA is Decidable\n\nSolution: Construct a TM M 0 to decide PSUBSETDFA as follows:\nM 0 =\u201cOn input hA, Bi where A and B are DFAs:\n1\n\nRun TM F on input hA, Bi\n\n2\n\nIf F accepts hA, Bi, reject.\n\n3\n\nConstruct a DFA C such that L(C) = L(A) \u2229 L(B)\n\n4\n\nRun TM T on input hCi\n\n5\n\nIf T accepts hCi, accept. If T rejects hCi, reject.\u201d\n\nNext, we need to prove that the above TM M 0 is a decider for PSUBSETDFA .\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nReview\n\n\fPSUBSETTM is Decidable\nTo show that TM M 0 is a decider for PSUBSETDFA , we need to perform the\nfollowing:\nShow that if hA, Bi \u2208 PSUBSETDFA , M 0 will accept hA, Bi.\nAssume that hA, Bi \u2208 PSUBSETDFA . Since hA, Bi \u2208 PSUBSETDFA , A and B\nare DFAs and L(A) is a proper subset of L(B). In other words, L(A) is not\nequal to L(B) and L(A) is a subset of L(B). Since L(A) is not equal to L(B),\nhA, Bi 6\u2208 EQDFA . Since F is a decider for EQDFA , by running F on input hA, Bi,\nF will reject hA, Bi. Since L(A) is a subset of L(B), L(C) will be empty. Since\nL(C) is empty, hCi \u2208 EDFA . Since T is a decider for EDFA , by running T on\ninput hCi, T will accept hCi. Since T accepts hCi, M 0 accepts hA, Bi.\nShow that if hA, Bi 6\u2208 PSUBSETTM , M 0 will reject hA, Bi.\nAssume that hA, Bi 6\u2208 PSUBSETDFA . Since hA, Bi 6\u2208 PSUBSETDFA , A and B\nare DFAs and L(A) is not a proper subset of L(B). In other words,\nL(A) = L(B) or L(A) is not a subset of L(B).\nSuppose L(A) = L(B). Since L(A) = L(B), hA, Bi \u2208 EQDFA . Since F is a\ndecider for EQDFA , by running F on input hA, Bi, F will accept hA, Bi. Since\nF accepts hA, Bi, M 0 rejects hA, Bi.\nSuppose L(A) is not a subset of L(B). Since L(A) is not a subset of L(B),\nL(C) will not be empty. Since L(C) is not empty, hCi 6\u2208 EDFA . Since T is a\ndecider for EDFA , by running T on input hCi, T will reject hCi. Since T rejects\nhCi, M 0 rejects hA, Bi.\nThis shows that M 0 is a decider for PSUBSETDFA DFA. Therefore, PSUBSETDFA is\ndecidable.\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nReview\n\n\fALLBUTONETM\n\nQuestion\nProve that\nALLBUTONETM = {hM i|M is a TM that accepts all but one string}\n\nis undecidable. Note that if TM M accepts all but one string,\nL(M ) = \u03a3\u2217 \u2212 {w} for a string w.\nRecall that there are two methods:\n1\n2\n\nShow that if ALLBUTONETM is decidable, ATM is decidable\nUse mapping reducibility to show that\nATM \u2264m ALLBUTONETM\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nReview\n\n\fALLBUTONETM is Undecidable (Method 1)\n\nAssume that ALLBUTONETM is decidable. Since ALLBUTONETM is decidable, there\nexists a TM R that decides ALLBUTONETM . Construct a TM S to decide ATM as\nfollows:\nS =\u201cOn input hM, wi where M is a TM and w is a string:\n1\n\nConstruct a TM M 0 as follows:\nM 0 =\u201cOn input x:\n1\n2\n3\n\nIf x == \u03b5, reject.\nRun M on input w.\nIf M accepts w, accept. If M rejects w, reject.\u201d\n\n2\n\nRun TM R on input hM 0 i.\n\n3\n\nIf R accepts hM 0 i, accept. If R rejects hM 0 i, reject.\u201d\n\nNext, we need to show that the above TM S is a decider for ATM .\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nReview\n\n\fALLBUTONETM is Undecidable (Method 1)\nTo show that TM M 0 is a decider for ALLBUTONETM , we need to perform the\nfollowing:\nIf hM, wi \u2208 ATM , S will accept hM, wi.\nAssume that hM, wi \u2208 ATM . Since hM, wi \u2208 ATM , M is a TM that accepts w.\nSince M accepts w, from the description of TM M 0 , L(M 0 ) = \u03a3\u2217 \u2212 {\u03b5}. Since\nL(M 0 ) = \u03a3\u2217 \u2212 {\u03b5}, hM 0 i \u2208 ALLBUTONETM . Since R is a decider for\nALLBUTONETM , by running R on input ALLBUTONETM , R will accept hM 0 i.\nSince R accepts hM 0 i, S accepts hM, wi.\nIf hM, wi 6\u2208 ATM , S will reject hM, wi.\nAssume that hM, wi 6\u2208 ATM . Since hM, wi 6\u2208 ATM , M is a TM that does not\naccept w. Since M does not accept w, from the description of TM M 0 ,\nL(M 0 ) = \u2205. Since L(M 0 ) = \u2205, L(M 0 ) 6= \u03a3\u2217 \u2212 {w} for a string w. In other\nwords, hM 0 i 6\u2208 ALLBUTONETM . Since R is a decider for ALLBUTONETM , by\nrunning R on input ALLBUTONETM , R will reject hM 0 i. Since R rejects hM 0 i,\nS rejects hM, wi.\nThis shows that S is a decider for ATM . In other words ATM is decidable. This\ncontradicts with the fact that ATM is undecidable. Therefore, ALLBUTONETM is\nundecidable.\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nReview\n\n\fALLBUTONETM is Undecidable (Method 2)\nNeed to show that ATM \u2264m ALLBUTONETM . Construct a TM F as follows:\nF =\u201cOn input hM, wi where M is a TM and w is a string:\n1\n\nConstruct a TM M 0 as follows:\nM 0 =\u201cOn input x:\n1\n2\n3\n\n2\n\nIf x == \u03b5, reject.\nRun M on input w.\nIf M accepts w, accept. If M rejects w, reject.\u201d\n\nOutput hM 0 i.\n\nNext, we need to show that the above TM F is a reduction from ATM to\nALLBUTONETM . In other word, we have to show that it satisfies:\nhM, wi \u2208 ATM \u2194 F (hM, wi) \u2208 ALLBUTONETM\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nReview\n\n\fALLBUTONETM is Undecidable (Method 2)\n\nTo show that TM F is a reduction from ATM to ALLBUTONETM , we need to perform\nthe following:\nIf hM, wi \u2208 ATM , F (hM, wi) \u2208 ALLBUTONETM .\nAssume that hM, wi \u2208 ATM . Since hM, wi \u2208 ATM , M is a TM that accepts w.\nSince M accepts w, from the description of TM M 0 , L(M 0 ) = \u03a3\u2217 \u2212 {\u03b5}. Since\nL(M 0 ) = \u03a3\u2217 \u2212 {\u03b5}, hM 0 i \u2208 ALLBUTONETM . Since F (hM, wi) = hM 0 i,\nF (hM, wi) \u2208 ALLBUTONETM .\nIf hM, wi 6\u2208 ATM , F (hM, wi) 6\u2208 ALLBUTONETM .\nAssume that hM, wi 6\u2208 ATM . Since hM, wi 6\u2208 ATM , M is a TM that does not\naccept w. Since M does not accept w, from the description of TM M 0 ,\nL(M 0 ) = \u2205. Since L(M 0 ) = \u2205, L(M 0 ) 6= \u03a3\u2217 \u2212 {w} for a string w. In other\nwords, hM 0 i 6\u2208 ALLBUTONETM . Since F (hM, wi) = hM 0 i,\nF (hM, wi) 6\u2208 ALLBUTONETM .\nThis shows that F is a reduction from ATM to ALLBUTONETM . Since ATM is\nundecidable, ALLBUTONETM is undecidable.\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nReview\n\n\fNOTPRIME\n\nQuestion\nConsider the following language\nNOTPRIME = {hni|n is a natural number and n is not a prime number}\n\nPerform the following:\n1\n\nConstruct a verifier for the language NOTPRIME\n\n2\n\nConstruct an NTM that decides NOTPRIME\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nReview\n\n\fA Verifier of NOTPRIME\nGiven a language A, a verifier V of the language A is a TM\nsatisfying\nA = {w | V accepts hw, ci for some c}\nFrom the above description\nGiven a string w \u2208 A, V must accept hw, ci for some c\nGiven a string w 6\u2208 A, V must reject hw, ci for all c\n\nA verifier for NOTPRIME must satisfies\nNOTPRIME = {hni | V accepts hn, ci for some c}\nAn example of a verifier for the language NOTPRIME:\nV =\u201cOn input hn, ci where n and c are natural numbers:\n1\n2\n\nIf c == 1 or c \u2265 n, reject.\nIf n mod c == 0, accept.\u201d\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nReview\n\n\fAn NTM that decides NOTPRIME\n\nThink about how brute force algorithm should work\nGenerate all possible strings between 2 and n \u2212 1 (inclusive)\nIf n is divisible by one of them, n is not a prime number\n\nAn example of an NTM that decides the language\nNOTPRIME:\nN =\u201cOn input hni where n is a natural numbers:\n1\n\n2\n\nSelect a number c where c is nondeterministically selected\nbetween 2 and n \u2212 1 (inclusive)\nIf n mod c == 0, accept.\u201d\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nReview\n\n\f", "label": [[-2, -1, "Concept"]], "Comments": []}