{"id": 297, "segment": ["train_set", "labeled"], "course": "cs1550", "lec": "lec06", "text": "Introduction to Operating Systems\nCS/COE 1550\nSpring 2022\n\nSherif Khattab\nksm73@pitt.edu\n(Some slides are from Silberschatz, Galvin and Gagne \u00a92013)\n\n\fAnnouncements\n\u2022 Upcoming deadlines\n\u2022 Homework 3 is due next Monday 2/7\n\u2022 Lab 1 is due on 2/4\n\u2022 Project 1 due on 2/18\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fPrevious lecture \u2026\n\u2022 How processes (threads) are created and terminated\n\n\u2022 Tracing programs with fork() calls\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fMuddiest Points (fork)\n\u2022 can you clarify copy-and-write? does the memory\nautomatically get \u201cpassed\u201d down or not?\n\u2022 I was confused how fork can be assigned to variable\nand whether its the child or parent that gets assigned\n\u2022 Fork tracing example\n\u2022 fork tracing!!$\n\u2022 How can a child process run a different program than\ntheir parent?\n\u2022 what is exec()\n\u2022 What data should you track when fork tracing\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fMuddiest Points (wait())\n\u2022\n\nWhy can a child process become a zombie for a parent process, but\nnot the other way around?\n\n\u2022\n\nDoes most of the parent processes invoke wait( )? Is this the system\nsoftware engineers' job to ensure every process will invoke wait( )\ndefaultly to avoid creating zombie processes, or is OS's job and it\ncan arbitrarily invoke wait( ) or not?\n\n\u2022\n\ndoes a process actually wait when wait() is called? like stops\nrunning\n\n\u2022\n\nZombie vs Orphan processes\n\n\u2022\n\nWhat are the differences of a zombie and orphan process? The parent\ndoesnt invoke wait in either instance?\n\n\u2022\n\nImplementation of how init adopts orphaned processes.\n\n\u2022\n\nCan a process be orphan and zombie at the same time?\n\n\u2022\n\nOrphan versus zombie processes. The difference between when the\nparent process calls exit()\n\n\u2022\n\nIn what situation would a child not be a copy of its parent?\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fMuddiest Points (Threads)\n\u2022 Similarities and differences between forks and threads\n\n\u2022 The difference between processes and threads in how\nthey're handled by the operating system. Are threads\nand processes treated the same by the OS beyond the\nthreads sharing memory? Do threads go through the\nsame states and transitions as processes?\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fMuddiest Points (Process Termination)\n\u2022 what does killing a process do, or what is the action the\nkill program takes to kill another?\n\u2022 exit vs kill vs abort\n\u2022 The differences between the exit(), Abort() and Kill().\nSpecifically, the difference between kill() and abort().\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fProblem of the Day\n\u2022 Bounded Buffer Problem\n\u2022 aka Producers Consumers Problem\n\n\u2022 A shared circular-array buffer with capacity n\n\u2022 A set of producer processes/threads\n\u2022 As set of consumer processes/threads\n\n\u2022 Requirements:\n\u2022 Never exceed the buffer capacity\n\u2022 Producers wait if the buffer is full\n\u2022 Consumers wait if the buffer is empty\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fProduces Consumers Problem\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fProducers Consumers Problem is everywhere!\n\u2022 Access to User Interface elements in mobile\napplications\n\u2022 Main UI thread\n\u2022 Background threads\n\u2022 e.g., download files, check email on mail server\n\n\u2022 Background threads send requests to UI thread to update\nUI elements\n\u2022 Requests are stored in a shared bounded buffer\n\u2022 Which threads are the producers?\n\u2022 Who threads are the consumers?\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fProducers Consumers Problem is everywhere!\n\u2022 Web Server\n\u2022 front-end processes/threads that interact with the HTTP\nconnection from the client (e.g., browser)\n\u2022 Back-end processes/threads that execute database\nqueries\n\u2022 Queries are inserted by front-end processes into a shared\nbuffer\n\u2022 Which threads are the producers?\n\u2022 Who threads are the consumers?\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fSolving Producers Consumers using Semaphores\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fHow to trace the solution?\n\nLet\u2019s define some events.\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fProducer arrives\nMoves as far as possible until the solid line\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fProducer enters\nMoves as far as possible past the solid line and until the\ndashed line\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fProducer leaves\nMoves as far as possible until the dotted line\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fConsumer arrives\nMoves as far as possible until the solid line\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fConsumer enters\nMoves as far as possible past the solid line and until the\ndashed line\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fConsumer leaves\nMoves as far as possible past the dashed line and until\nthe dotted line\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fTracing\n\nGiven a sequence of events, is the sequence feasible?\nIf yes, what is the system state at the end of the\nsequence?\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fSystem State\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fExample 1\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fInitial state\n\n0\n\n3\n0\n1\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fP0 arrives\n\n0\n\n2\n0\n0\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fP0 enters\n\n0\n\n2\n1\n0\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fP1 arrives\n\n0\n\n1\n1\n-1\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fP2 arrives\n\n0\n\n0\n1\n-2\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fC0 arrives\n\n-1\n\n0\n1\n-2\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fP0 leaves\n\n-1\n\n0\n1\n-2\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fP0 leaves\n\n-1\n\n0\n1\n-1\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fP0 leaves\n\n-1\n\n0\n1\n-1\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fP0 leaves\n\n0\n\n0\n1\n-1\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fC0 enters\n\n0\n\n0\n1\n-1\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fC0 enters\n\n0\n\n0\n1\n-2\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fC0 enters\n\n0\n\n0\n1\n-2\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fCan C0 enter?\n\n0\n\n0\n1\n-2\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fExample 2\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fInitial state\n\n0\n\n1\n0\n1\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fC0 arrives\n\n0\n\n1\n0\n1\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fC0 arrives\n\n-1\n\n1\n0\n1\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fP0 arrives\n\n-1\n\n1\n0\n1\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fP0 arrives\n\n-1\n\n0\n0\n1\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fP0 arrives\n\n-1\n\n0\n0\n0\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fP0 enters\n\n-1\n\n0\n0\n0\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fP0 enters\n\n-1\n\n0\n1\n0\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fP0 leaves\n\n-1\n\n0\n1\n0\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fP0 leaves\n\n0\n\n0\n1\n1\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fP0 leaves\n\n0\n\n0\n1\n1\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fC0 enters\n\n0\n\n0\n1\n1\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fC0 enters\n\n0\n\n0\n1\n0\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fCan C0 enter?\n\n0\n\n0\n1\n0\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fC0 enters\n\n0\n\n0\n0\n0\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fC0 leaves\n\n0\n\n0\n0\n0\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fC0 leaves\n\n0\n\n1\n0\n1\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fExample 3\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fInitial state\n\n0\n\n2\n0\n1\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fC0 arrives\n\n0\n\n2\n0\n1\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fC0 arrives\n\n-1\n\n2\n0\n1\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fC1 arrives\n\n-1\n\n2\n0\n1\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fC1 arrives\n\n-2\n\n2\n0\n1\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fC2 arrives\n\n-2\n\n2\n0\n1\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fC2 arrives\n\n-3\n\n2\n0\n1\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fP0 arrives\n\n-3\n\n2\n0\n1\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fP0 arrives\n\n-3\n\n1\n0\n1\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fP0 arrives\n\n-3\n\n1\n0\n0\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fP0 enters\n\n-3\n\n1\n0\n0\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fP0 enters\n\n-3\n\n1\n1\n0\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fC0 enters\n\n-3\n\n1\n1\n0\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\fCan C0 enter?\n\n-3\n\n1\n1\n0\n\nCS 1550 \u2013 Operating Systems \u2013 Sherif Khattab\n\n\f", "label": [[413, 419, "Concept"], [491, 495, "Concept"], [515, 529, "Concept"], [608, 612, "Concept"], [698, 710, "Concept"], [721, 733, "Concept"], [749, 762, "Concept"], [798, 804, "Concept"], [816, 822, "Concept"], [857, 869, "Concept"], [934, 940, "Concept"], [955, 968, "Concept"], [978, 984, "Concept"], [991, 1005, "Concept"], [1058, 1074, "Concept"], [1082, 1089, "Concept"], [1170, 1177, "Concept"], [1206, 1222, "Concept"], [1269, 1276, "Concept"], [1323, 1329, "Concept"], [1364, 1370, "Concept"], [1374, 1390, "Concept"], [1425, 1431, "Concept"], [1436, 1450, "Concept"], [1456, 1462, "Concept"], [1528, 1532, "Concept"], [1540, 1558, "Concept"], [1581, 1587, "Concept"], [1592, 1598, "Concept"], [1621, 1627, "Concept"], [1635, 1651, "Concept"], [1685, 1699, "Concept"], [1706, 1712, "Concept"], [1743, 1748, "Concept"], [1770, 1776, "Concept"], [1842, 1849, "Concept"], [1890, 1895, "Concept"], [1900, 1907, "Concept"], [1948, 1955, "Concept"], [2008, 2015, "Concept"], [2068, 2075, "Concept"], [2095, 2102, "Concept"], [2225, 2244, "Concept"], [2306, 2310, "Concept"], [2328, 2332, "Concept"], [2344, 2348, "Concept"], [2352, 2356, "Concept"], [2360, 2365, "Concept"], [2396, 2402, "Concept"], [2404, 2411, "Concept"], [2416, 2422, "Concept"], [2461, 2467, "Concept"], [2472, 2479, "Concept"], [2550, 2572, "Concept"], [2579, 2606, "Concept"], [2612, 2640, "Concept"], [2668, 2694, "Concept"], [2707, 2733, "Concept"], [2770, 2776, "Concept"], [2788, 2797, "Concept"], [2810, 2816, "Concept"], [2827, 2836, "Concept"], [2849, 2855, "Concept"], [2913, 2939, "Concept"], [2988, 3015, "Concept"], [3097, 3106, "Concept"], [3109, 3127, "Concept"], [3182, 3200, "Concept"], [3218, 3227, "Concept"], [3284, 3298, "Concept"], [3307, 3314, "Concept"], [3323, 3332, "Concept"], [3340, 3347, "Concept"], [3356, 3365, "Concept"], [3415, 3442, "Concept"], [3493, 3500, "Concept"], [3574, 3600, "Concept"], [3657, 3676, "Concept"], [3691, 3697, "Concept"], [3706, 3713, "Concept"], [3722, 3731, "Concept"], [3739, 3746, "Concept"], [3755, 3764, "Concept"], [3822, 3841, "Concept"], [3848, 3858, "Concept"], [4009, 4017, "Concept"], [4120, 4128, "Concept"], [4255, 4263, "Concept"], [4477, 4485, "Concept"], [4612, 4620, "Concept"]], "Comments": []}