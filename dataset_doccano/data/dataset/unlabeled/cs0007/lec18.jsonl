{"id": 196, "segment": "unlabeled", "course": "cs0007", "lec": "lec18", "text": "CS 0007: Introduction to Java\nLecture 18\nNathan Ong\nUniversity of Pittsburgh\nNovember 8, 2016\n\n\fMain Portions of OOP\n\u2022 Building a class\n\u2022 Determining inter-class relationships\n\n\fClass Components\n\u2022 Class-level/Instance Variables\n\u2022 Methods\n\u2022 Constructor(s)\n\n\fInter-class Relationships\n\u2022 Building a single class is useless. It\nneeds to be used in context.\n\u2022 There are two main relationships\nbetween classes\n\u2013 Sub/Super class\n\u2013 Ownership\n\n\fModeling a Problem\n\u201cJoe\u2019s Automotive Shop services foreign cars, and\nspecializes in servicing cars made by Mercedes,\nPorsche, and BMW. When a customer brings a car to\nthe shop, the manager gets the customer\u2019s name,\naddress, and telephone number. Then the manager\ndetermines the make, model, and year of the car, and\ngives the customer a service quote. The service\nquote shows the estimated parts charges, estimated\nlabor charges, sales tax, and total estimated\ncharges.\u201d\nSource: Starting Out with Java: From Control Structures\nthrough Objects by Tony Gaddis\n\n\fFind the Nouns\n\u201cJoe\u2019s Automotive Shop services foreign cars,\nand specializes in servicing cars made by\nMercedes, Porsche, and BMW. When a\ncustomer brings a car to the shop, the\nmanager gets the customer\u2019s name, address,\nand telephone number. Then the manager\ndetermines the make, model, and year of the\ncar, and gives the customer a service quote.\nThe service quote shows the estimated parts\ncharges, estimated labor charges, sales tax,\nand total estimated charges.\u201d\n\n\fCoalescing\naddress\nBMW\ncar\nquote\ncars\ncustomer\nestimated labor charges\ncharges\nestimated parts charges\n\nforeign cars\nPorsche\nJoe\u2019s Automotive Shop sales tax\nmake\nservice\nmanager\nMercedes\nmodel\n\nshop\ntelephone number\ntotal estimated\n\nname\n\nyear\n\n\fNoun Out of Scope\naddress\nBMW\ncar\ncars\ncustomer\nestimated labor charges\ncharges\nestimated parts charges\n\nforeign cars\nJoe\u2019s Automotive Shop\nmake\nmanager\nMercedes\nmodel\n\nPorsche\nsales tax\nservice quote\nshop\ntelephone number\ntotal estimated\n\nname\n\nyear\n\n\fSubtypes\naddress\nBMW\ncar\ncars\ncustomer\nestimated labor charges\nestimated parts charges\n\nforeign cars\nJoe\u2019s Automotive Shop\nmake\nmanager\nMercedes\nmodel\nname\n\nPorsche\nsales tax\nservice quote\nshop\ntelephone number\ntotal estimated charges\nyear\n\nWhether these subtypes are specific objects\n(instances) or more specific types of cars\n(subclasses) will depend on your needs. In this\nscenario, there is no need to represent them as\nclasses.\n\n\fSimple Properties\naddress\nforeign cars\nBMW\nJoe\u2019s Automotive Shop\ncar\nmake service quote\ncars\nmanager\ncustomer Mercedes\nestimated labor charges\nmodel\nestimated parts charges\nname\n\nPorsche\nsales tax\nshop\ntelephone number\ntotal estimated charges\nyear\n\nSimple properties can be composed of\nprimitives or preexisting object\ndefinitions, and fall under a particular\nobject class.\n\n\fSimple Properties\naddress\nBMW\ncar\ncars\ncustomer\nestimated labor charges\ncharges\nestimated parts charges\n\nforeign cars\nJoe\u2019s Automotive Shop\nmake\nmanager\nMercedes\nmodel\n\nPorsche\nsales tax\nservice quote\nshop\ntelephone number\ntotal estimated\n\nname\n\nyear\n\nA car had three simple properties in our\nscenario. What types would they be?\n\n\fSimple Properties\naddress\nBMW\ncar\ncars\ncustomer\nestimated labor charges\ncharges\nestimated parts charges\n\nforeign cars\nJoe\u2019s Automotive Shop\nmake\nmanager\nMercedes\nmodel\n\nPorsche\nsales tax\nservice quote\nshop\ntelephone number\ntotal estimated\n\nname\n\nyear\n\nA car had three simple properties in our\nscenario. What types would they be?\n\n\fSimple Properties\naddress\nBMW\ncar\ncars\ncustomer\nestimated labor charges\ncharges\nestimated parts charges\n\nforeign cars\nJoe\u2019s Automotive Shop\nmake\nmanager\nMercedes\nmodel\n\nPorsche\nsales tax\nservice quote\nshop\ntelephone number\ntotal estimated\n\nname\n\nyear\n\nA customer had three simple properties\nin our scenario. What types would they\nbe?\n\n\fSimple Properties\naddress\nBMW\ncar\ncars\ncustomer\nestimated labor charges\ncharges\nestimated parts charges\n\nforeign cars\nJoe\u2019s Automotive Shop\nmake\nmanager\nMercedes\nmodel\n\nPorsche\nsales tax\nservice quote\nshop\ntelephone number\ntotal estimated\n\nname\n\nyear\n\nA customer had three simple properties\nin our scenario. What types would they\nbe?\n\n\fSimple Properties\naddress\nBMW\ncar\ncars\ncustomer\nestimated labor charges\ncharges\nestimated parts charges\n\nforeign cars\nJoe\u2019s Automotive Shop\nmake\nmanager\nMercedes\nmodel\n\nPorsche\nsales tax\nservice quote\nshop\ntelephone number\ntotal estimated\n\nname\n\nyear\n\nA service quote had four simple\nproperties in our scenario. What types\nwould they be?\n\n\fSimple Properties\naddress\nBMW\ncar\ncars\ncustomer\nestimated labor charges\ncharges\nestimated parts charges\n\nforeign cars\nJoe\u2019s Automotive Shop\nmake\nmanager\nMercedes\nmodel\n\nPorsche\nsales tax\nservice quote\nshop\ntelephone number\ntotal estimated\n\nname\n\nyear\n\nA service quote had four simple\nproperties in our scenario. What types\nwould they be?\n\n\fWho Owns Everything?\naddress\nforeign cars\nBMW\nJoe\u2019s Automotive Shop\ncar\nmake service quote\ncars\nmanager\ncustomer\nMercedes\nestimated labor charges\nmodel\nestimated parts charges\nname\n\nPorsche\nsales tax\nshop\ntelephone number\ntotal estimated charges\nyear\n\nOur scenario revolves around the\nautomotive shop, so this will hold the\nmain method and will be the overarching\nclass.\n\n\fCode on the board!\n\n\fThe Object Class\n\u2022 Let us examine the API for the highest\nclass.\n\u2022 toString() looks interesting. \u201cIt is\nrecommended that all subclasses\noverride this method.\u201d\n\n\fWhat Is toString()?\n\u2022 It provides a String representation of\nan object\n\u2022 It should be descriptive, not just what\ntype it is, but what is contained within it.\n\n\fWho is Responsible?\n\u2022 How do we determine which class(es)\nshould have which functions?\n\u2022 You need to ask: Who\u2019s state is needed\nor changing?\n\n\fEasy examples\n\u2022 Using the automotive shop example, we\nhave four classes, Shop, Customer, Car,\nand Service Quote.\n\u2022 Who issues the service quotes?\n\u2022 Who deals with customers?\n\n\fMedium example\n\u2022 Using the automotive shop example, we\nhave four classes, Shop, Customer, Car,\nand Service Quote.\n\u2022 Who does the payment of the service\nquote?\n\u2013 Customer?\n\u2013 Shop?\n\u2013 Both?\n\n\fHard example\n\u2022 Using the automotive shop example, we\nhave four classes, Shop, Customer, Car,\nand Service Quote.\n\u2022 Who deals with car alterations?\n\u2013 Shop?\n\u2013 Mechanic?\n\u2013 Car?\n\n\f", "label": [[-2, -1, "Concept"]], "Comments": []}