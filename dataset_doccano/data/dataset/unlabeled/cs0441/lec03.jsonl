{"id": 140, "segment": "unlabeled", "course": "cs0441", "lec": "lec03", "text": "Discrete Structures for Computer\nScience\n\nWilliam Garrison\nbill@cs.pitt.edu\n6311 Sennott Square\nLecture #3: Logic Puzzles and Propositional\nEquivalence\nBased on materials developed by Dr. Adam Lee\n\n\fToday\u2019s topics\nn Logic puzzles\nn Propositional equivalences\n\n\fA technical support conundrum\nAlice and Bob are technical support agents. If an agent\nis having a bad day, he or she will always lie to you. If\nan agent is having a good day, he or she will always\ntell you the truth. Alice tells you that Bob is having a\nbad day. Bob tells you that he and Alice are both\nhaving the same type of day. Can you trust the advice\nyou receive from Alice during your call?\n\n\fSolving logic puzzles is easy!\n\nStep 1: Identify rules\nand constraints\n\nStep 2: Assign propositions\nto key concepts\n\nStep 3: Make assumptions\nand reason logically!\n\n\fTechnical support revisited\nAlice and Bob are technical support agents. If an agent is having a\nbad day, he or she will always lie to you. If an agent is having a\ngood day, he or she will always tell you the truth. Alice tells you\nthat Bob is having a bad day. Bob tells you that he and Alice are\nboth having the same type of day. Can you trust the advice you\nreceive from Alice during your call?\n\nStep 1: Identify the rules of the puzzle\nl Good day = tell the truth\nl Bad day = lie!\n\nStep 2: Assign propositions to the key concepts in the puzzle\nl a \u00ba \u201cAlice is having a good day\u201d\nl b \u00ba \u201cBob is having a good day\u201d\n\n\fStep 3: Make assumptions and reason logically\n\n\fAnother example\nConsider a group of friends: Frank, Anna, and Chris. If\nFrank is not the oldest, then Anna is. If Anna is not the\nyoungest, then Chris is the oldest. Determine the\nrelative ages of Frank, Anna, and Chris.\nPropositions:\nl\nl\nl\nl\n\nf = \u201cFrank is the oldest\u201d\na = \u201cAnna is the oldest\u201d\na\u2019 = \u201cAnna is the youngest\u201d\nc = \u201cChris is the oldest\u201d\n\nRules:\n1. \u00acf \u00ae a\n2. \u00aca\u2019 \u00ae c\n\n\fStep 3: Make assumptions and reason logically\n\n\fSometimes no solution is a solution!\nAlice and Bob are technical support agents. Alice says\n\u201cI am having a good day.\u201d Bob says \u201cI am having a good\nday.\u201d Can you trust either Alice or Bob?\n\nStep 1: Identify rules\nl Good day = tell the truth\nl Bad day = lie\n\nStep 2: Assign propositions\nl a = Alice is having a good day\nl b = Bob is having a good day\n\n\fStep 3: Make assumptions and reason logically\n\n\fIn-class exercises\nProblem 1: Alice and Bob are technical support agents\nworking to fix your computer. Alice tells you that Bob\nis having a bad day today and that you should expect a\nlong wait before your computer is fixed. Bob tells you\nnot to worry, Alice is just having a bad day\u2014your\ncomputer will be ready in no time.\n\nQuestion: Can you draw any conclusions about when\nyour computer will be fixed? If so, what\ncan you learn?\n\n\fPropositional equivalences: preliminaries\nDefinition: A tautology is a compound proposition that is\nalways true, regardless of the truth values of\nthe propositions occurring within it.\nDefinition: A contradiction is a compound proposition\nthat is always false, regardless of the truth\nvalues of the propositions occurring within it.\nDefinition: A contingency is a compound proposition\nwhose truth value is dependent on the\npropositions occurring within it.\n\n\fExamples\nAre the following compound propositions tautologies,\ncontradictions, or contingencies?\np\n\u00acp\np \u00da \u00acp\nn p \u00da \u00acp\n\ntautology\n\nn \u00acp \u00d9 p\n\ncontradiction\n\nnp\u00daq\n\ncontingency\n\nT\n\nF\n\nT\n\nF\n\nT\n\nT\n\np\n\n\u00acp\n\np \u00d9 \u00acp\n\nT\n\nF\n\nF\n\nF\n\nT\n\nF\n\np\n\nq\n\np\u00daq\n\nT\n\nT\n\nT\n\nT\n\nF\n\nT\n\nF\n\nT\n\nT\n\nF\n\nF\n\nF\n\n\fWhat are logical equivalences and why are they\nuseful?\nDefinition: Compound propositions p and q are\nlogically equivalent if p \u00ab q is a tautology.\nThe notation p \u00ba q means that p and q are\nlogically equivalent.\nLogical equivalences are extremely useful!\nl Aid in the construction of proofs\nl Allow us to simplify compound propositions\n\nExample: p \u00ae q \u00ba \u00acp \u00da q\n\nHow do we\nprove this type\nof statement?\n\n\fIt is easy to prove propositional equivalences\nWe can prove simple logical equivalences using our\ngood friend the truth table!\nProve: p \u00ae q \u00ba \u00acp \u00da q\np\n\nq\n\n\u00acp\n\n\u00acp \u00da q\n\np\u00aeq\n\nT\n\nT\n\nF\n\nT\n\nT\n\nT\n\nF\n\nF\n\nF\n\nF\n\nF\n\nT\n\nT\n\nT\n\nT\n\nF\n\nF\n\nT\n\nT\n\nT\n\n\fDeMorgan\u2019s laws allow us to distribute negation\nover compound propositions\nIf \u201cp or q\u201d isn\u2019t true, then\nneither p nor q is true\n\nTwo laws:\nl \u00ac(p \u00da q) \u00ba \u00acp \u00d9 \u00acq\nl \u00ac(p \u00d9 q) \u00ba \u00acp \u00da \u00acq\n\nIf \u201cp and q\u201d isn\u2019t true, then at\nleast one of p or q is false\n\nProve: \u00ac(p \u00da q) \u00ba \u00acp \u00d9 \u00acq\np\n\nq\n\np\u00daq\n\n\u00ac(p \u00da q)\n\n\u00acp\n\n\u00acq\n\n\u00acp \u00d9 \u00acq\n\nT\n\nT\n\nT\n\nF\n\nF\n\nF\n\nF\n\nT\n\nF\n\nT\n\nF\n\nF\n\nT\n\nF\n\nF\n\nT\n\nT\n\nF\n\nT\n\nF\n\nF\n\nF\n\nF\n\nF\n\nT\n\nT\n\nT\n\nT\n\n\fUsing DeMorgan\u2019s laws\nUse DeMorgan\u2019s laws to negate the following expressions:\nn \u201cBob is wearing blue pants and a sweatshirt\u201d\nlb \u00d9 s\nl \u00ac(b \u00d9 s) \u00ba \u00acb \u00da \u00acs\nl Bob is not wearing blue pants or is not wearing a\nsweatshirt\nn \u201cI will drive or I will walk\u201d\nld \u00da w\nl \u00ac(d \u00da w) \u00ba \u00acd \u00d9 \u00acw\nl I will not drive and I will not walk\n\n\fIn-class exercises\nProblem 2: Prove that \u00ac(p \u00d9 q) and \u00acp \u00da \u00acq are\nlogically equivalent, i.e., \u00ac(p \u00d9 q) \u00ba \u00acp \u00da \u00acq. This is\nthe second DeMorgan\u2019s law.\nProblem 3: Use DeMorgan\u2019s laws to negate the\nfollowing propositions:\nl Today I will go running or ride my bike\nl Tom likes both pizza and beer\n\n\fSometimes using truth tables to prove logical\nequivalencies can become cumbersome\nRecall that for an equivalence with n propositions, we\nneed to build a truth table with 2n rows\nl Fine for tables with n = 2, 3, or 4\nl Consider n = 30\u2014we would need 1,073,741,824 rows in the\ntruth table!\n\nAnother option: Direct manipulation\nof compound propositions using\nknown logical equivalencies\n\n\fThere are many useful logical equivalences\nEquivalence\n\nName\n\np\u00d9T\u00bap\np\u00daF\u00bap\n\nIdentity laws\n\np\u00d9F\u00baF\np\u00daT\u00baT\n\nDomination laws\n\np\u00d9p\u00bap\np\u00dap\u00bap\n\nIdempotent laws\n\n\u00ac(\u00acp) \u00ba p\n\nDouble negation law\n\np\u00daq\u00baq\u00dap\np\u00d9q\u00baq\u00d9p\n\nCommutative laws\n\n\fMore useful logical equivalences\nEquivalence\n\nName\n\n(p \u00d9 q) \u00d9 r \u00ba p \u00d9 (q \u00d9 r)\n(p \u00da q) \u00da r \u00ba p \u00da (q \u00da r)\n\nAssociative laws\n\np \u00d9 (q \u00da r) \u00ba (p \u00d9 q) \u00da (p \u00d9 r)\np \u00da (q \u00d9 r) \u00ba (p \u00da q) \u00d9 (p \u00da r)\n\nDistributive laws\n\n\u00ac(p \u00da q) \u00ba \u00acp \u00d9 \u00acq\n\u00ac(p \u00d9 q) \u00ba \u00acp \u00da \u00acq\n\nDeMorgan\u2019s laws\n\np \u00da (p \u00d9 q) \u00ba p\np \u00d9 (p \u00da q) \u00ba p\n\nAbsorption laws\n\np \u00da \u00acp \u00ba T\np \u00d9 \u00acp \u00ba F\n\nNegation laws\n\nMore equivalencies in the book!\n\n\fProve that (p \u00d9 q) \u00ae (p \u00da q) is a tautology\n\n\fProve: (p \u00ae q) \u00da (p \u00ae r) \u00ba p \u00ae (q \u00da r)\n\n\fFinal Thoughts\nn Logic can help us solve real world problems and play\nchallenging games\nn Logical equivalences help us simplify complex\npropositions and construct proofs\nl More on proofs later in the course\n\nn Next:\nl Predicate logic and quantification\nl Please read section 1.4\n\n\f", "label": [[-2, -1, "Concept"]], "Comments": []}