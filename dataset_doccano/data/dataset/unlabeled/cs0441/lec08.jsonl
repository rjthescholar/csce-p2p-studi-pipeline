{"id": 173, "segment": "unlabeled", "course": "cs0441", "lec": "lec08", "text": "Discrete Structures for Computer\nScience\n\nWilliam Garrison\nbill@cs.pitt.edu\n6311 Sennott Square\nLecture #8: Sets\n\nBased on materials developed by Dr. Adam Lee\n\n\fToday\u2019s Topics\nIntroduction to set theory\nl What is a set?\nl Set notation\nl Basic set operations\n\n\fWhat is a set?\nDefinition: A set is an unordered collection of objects\nExamples:\n\nSets can contain items of\nmixed types\n\nl A = {1, 2, 3, 4}\nl B = {Cooper, Dougie, Mr. C}\nl C = {motorcycle, 3.14159, Socrates}\nl E = {{1, 2, 3}, {6, 7, 8}, {23, 42}}\n\nSets can contain other sets\n\nInformally: Sets are really just a precise way of\ngrouping a \u201cbunch of stuff\u201d\n\n\fA set is made up of elements\nDefinition: The objects making up a set are called\nelements of that set.\n\nExamples:\nl 3 is an element of {1, 2, 3}\nl Bob is an element of {Alice, Bob, Charlie, Daniel}\n\nWe can express the above examples in a more precise\nmanner as follows:\nl 3 \u2208 {1, 2, 3}\nl Bob \u2208 {Alice, Bob, Charlie, Daniel}\n\nQuestion: Is 5 \u2208 {1, 2, 3, {4, 5}}?\n\nNO!\n\n\fThere are many different ways to describe a set\nExplicit enumeration:\nl A = {1, 2, 3, 4}\n\nUsing ellipses if the general pattern is obvious:\nl E = {2, 4, 6, \u2026, 98}\n\nSet builder notation (aka, set comprehensions):\nl M = {y | y = 3k for some integer k}\nThe set M contains\u2026\n\u2026 all elements y\u2026\n\u2026 such that\u2026\n\u2026 y = 3k for some integer k\n\n\fThere are a number of sets that are so important to\nmathematics that they get their own symbol\nN = {0, 1, 2, 3, \u2026}\nZ = {\u2026, -2, -1, 0, 1, 2, \u2026}\nZ+ = {1, 2, \u2026}\nQ = {p/q | p,q \u2208 Z, q\u22600}\nR\n\u2205 = {}\n\nNatural numbers\nIntegers\nPositive integers\nRational numbers\nReal numbers\nEmpty set\n\nNote: This notation differs from book to book\nl Some authors write these sets as \u2115, \u2124, \u2124+, \u211a, and \u211d\n\u27a3 I\u2019ll do so in handwriting (\u201cblackboard bold\u201d)\n\nl Some authors do not include zero in the natural numbers\n\u27a3 I like the above because it makes N\u2260Z+ (more expressive)\n\nBe careful when reading other books or researching on the\nWeb, as things may be slightly different!\n\n\fYou\u2019ve actually been using sets implicitly all along!\n\nF(x,y) \u2261 x and y are friends\nDomain: \u201cAll people\u201d\n\nMathematics\nFunction min(int x, int y) : int\nif x < y then\nreturn x\nelse\nreturn y\nendif\nend function\n\nProgramming language\ndata types\n\n\u2200x \u2203y F(x,y)\n\nDomains of propositional\nfunctions\n\n\fSet equality\nDefinition: Two sets are equal if and only if they\ncontain exactly the same elements.\n\nMathematically: A = B iff \u2200x (x \u2208 A \u21d4 x \u2208 B)\nExample: Are the following sets equal?\nl {1, 2, 3, 4} and {1, 2, 3, 4}\nl {1, 2, 3, 4} and {4, 1, 3, 2}\nl {a, b, c, d, e} and {a, a, c, b, e, d}\nl {a, e, i, o} and {a, e, i, o, u}\n\nYes!\nYes!\nYes!\nNo!\n\n\fWe can use Venn diagrams to graphically\nrepresent sets\nU is the \u201cuniverse\u201d of all elements\n\nU\n\u2022a\n\u2022e\n\n\u2022i\n\u2022o\n\nV\n\u2022u\n\nThe set V of all vowels is contained within the\nuniverse of \u201call letters\u201d\nSometimes, we add points for the elements of a set\n\n\fSets can be contained within one another\nDefinition: Some set A is a subset of another set B iff every element\nof A is an element in the set B. We denote this fact as A \u2286 B, and\ncall B a superset of A.\n\nGraphically:\n\nB\n\nU\nA\n\nMathematically: A \u2286 B iff \u2200x (x \u2208 A \u2192 x \u2208 B)\nDefinition: We say that A is a proper subset of B iff A \u2286 B, but A \u2260 B.\nWe denote this by A \u2282 B. More precisely:\nA \u2282 B iff \u2200x (x \u2208 A \u2192 x \u2208 B) \u2227 \u2203y (y \u2208 B \u2227 y \u2209 A)\n\n\fProperties of subsets\nProperty 1: For all sets S, we have that \u2205 \u2286 S\n\nProof: The set \u2205 contains no elements. So, trivially,\nevery element of the set \u2205 is contained in any other\nset S. \u274f\nProperty 2: For any set S, S \u2286 S.\nProperty 3: If S1 = S2, then S1 \u2286 S2 and S2 \u2286 S1.\n\n\fIn-class exercises\nProblem 1: Come up with two ways to represent each\nof the following sets:\nl The even integers\nl Negative integers between -1 and -10, inclusive\nl The positive integers\n\nProblem 2: Draw a Venn diagram representing the\nsets {1, 2, 3} and {3, 4, 5}.\nProblem 3: On Top Hat\n\n\fWe can create a new set by combining two or\nmore existing sets\nDefinition: The union of two sets A and B contains every element\nthat is either in A or in B. We denote the union of the sets A and\nB as A \u222a B.\n\nGraphically:\n\nB\n\nA\n\nU\n\nMathematically: A \u222a B = {x | x \u2208 A \u2228 x \u2208 B}\nExample: {1, 2, 3} \u222a {6, 7, 8} = {1, 2, 3, 6, 7, 8}\n\n\fWe can take the union of any number of sets\nExample: A \u222a B \u222a C\nGraphically:\n\nB\n\nA\n\nU\n\nC\n\nIn general, we can express the union S1 \u222a S2 \u222a \u2026 \u222a Sn\nusing the following notation:\nn\n[\n\nSi\n\ni=1\n\nThis is just like summation\nnotation!\n\n\fSometimes we\u2019re interested in the elements\nthat are in more than one set\nDefinition: The intersection of two sets A and B contains every\nelement that is in A and also in B. We denote the intersection of\nthe sets A and B as A \u2229 B.\n\nGraphically:\n\nB\n\nA\n\nU\n\nMathematically: A \u2229 B = {x | x \u2208 A \u2227 x \u2208 B}\nExamples:\nl {1, 2, 3, 7, 8} \u2229 {6, 7, 8} = {7, 8}\nl {1, 2, 3} \u2229 {6, 7, 8} = \u2205\n\nWe say that two sets A and B\nare disjoint if A \u2229 B = \u2205\n\n\fWe can take the intersection of any number of sets\n\nExample: A \u2229 B \u2229 C\nGraphically:\n\nB\n\nA\n\nU\n\nC\n\nAs with the union operation, we can express the\nintersection S1 \u2229 S2 \u2229 \u2026 \u2229 Sn as:\nn\n\\\n\nSi\n\ni=1\n\n\fSet differences\nDefinition: The difference of two sets A and B, denoted by A \u2013 B,\ncontains every element that is in A, but not in B.\n\nGraphically:\n\nB\n\nA\n\nU\n\nMathematically: A - B = {x | x \u2208 A \u2227 x \u2209 B}\nExample: {1, 2, 3, 4, 5} \u2013 {4, 5, 6, 7, 8} = {1, 2, 3}\nBe careful: Some authors use the notation A \\ B to denote the set\ndifference A \u2013 B.\n\n\fIf we have specified a universe U, we can determine\nthe complement of a set\nDefinition: The complement of a set A, denoted by A, contains\nevery element that is in U, but not in A.\n\nGraphically:\n\nA\n\nMathematically: A = {x | x \u2208 U \u2227 x \u2209 A}\nExamples: Assume that U = {1, 2, \u2026, 10}\nl {1, 2, 3, 4, 5} = {6, 7, 8, 9, 10}\nl {2, 4, 6, 8, 10} = {1, 3, 5, 7, 9}\n\nU\n\n\fCardinality is the measure of a set\u2019s size\nDefinition: Let S be a set. If there are exactly n\nelements in S, where n is a nonnegative integer, then S\nis a finite set whose cardinality is n. The cardinality of S\nis denoted by |S|.\n\nExample: If S = {a, e, i, o, u}, then |S| = 5.\nUseful facts: If A and B are finite sets, then\nl |A \u222a B| = |A| + |B| \u2013 |A \u2229 B|\nl |A \u2013 B| = |A| \u2013 |A \u2229 B|\n\nAside: We\u2019ll talk about the cardinality of infinite sets\nlater in the course.\n\n\fPower set\nDefinition: Given a set S, its power set is the set\ncontaining all subsets of S. We denote the power set\nof S as P(S).\n\nExamples:\nl P({1}) = {\u2205, {1}}\nl P({1, 2, 3}) = {\u2205, {1}, {2}, {3}, {1,2}, {1,3}, {2, 3}, {1, 2, 3}}\n\nNote:\nl The set \u2205 is in the power set of any set S: \u2200S(\u2205 \u2208P(S))\nl The set S is in its own power set: \u2200S(S\u2208P(S))\nl |P(S)| = 2|S|\nl Some authors use the notation 2S to represent the power\nset of S\n\n\fHow do we represent ordered collections?\nDefinition: The ordered n-tuple (a1, a2, \u2026, an) is the ordered\ncollection that has a1 as its first element, a2 as its second\nelement, \u2026, and an as its nth element.\n\nNote: (a1, a2, \u2026, an) = (b1, b2, \u2026, bn) iff ai = bi for i = 1, \u2026, n.\nSpecial case: Ordered pairs of the form (x \u2208 Z, y \u2208 Z) are the\nbasis of the Cartesian plane!\nl (a, b) = (c, d) iff a = c and b = d\nl (a, b) = (b, a) iff a = b\n\nHow can we construct and describe ordered n-tuples?\n\n\fWe use the Cartesian product operator to\nconstruct ordered n-tuples\nDefinition: If A and B are sets, the Cartesian product of A\nand B, which is denoted A\u00d7 B, is the set of all ordered\npairs (a, b) such that a \u2208 A and b \u2208 B.\n\nMathematically: A\u00d7 B = {(a, b) | a \u2208 A \u2227 b \u2208 B}\nExamples: Let A = {1, 2} and B = {y, z}\nl What is A\u00d7 B?\nl B\u00d7 A?\nl Are A\u00d7 B and B\u00d7 A equivalent?\n\n{(1, y), (1, z), (2, y), (2, z)}\n{(y, 1), (z, 1), (y, 2), (z, 2)}\n\nNO!!\n\n\fCartesian products can be made from more than\ntwo sets\nExample: Let\nl S = {x | x is enrolled in CS 441}\nl G = {x | x \u2208 R \u2227 0 \u2264 x \u2264 100}\nl Y = {freshman, sophomore, junior, senior}\n\nThe set S\u00d7 Y\u00d7 G consists of all possible (CS441\nstudent, year, grade) combinations.\nNote: My grades database is a subset of S\u00d7 Y\u00d7 G that\ndefines a relation between students in the class,\ntheir year at Pitt, and their grade!\nWe will study the properties of relations towards the\nend of this course.\n\n\fSets and Cartesian products can be used to\nrepresent trees and graphs\nDave\n\nCharlie\nAlice\n\nLet:\n\nElise\n\nBob\n\nNode\n\nBecky\n\nl N = All names\nl F = N\u00d7 N\n\nEdge\n\nFrank\nSarah\n\nTommy\n\nA social network can be represented as a graph (V, E) in which\nthe set V denotes the people in the network and the set E\ndenotes the set of \u201cfriendship\u201d links: (V, E) \u2208 P(N)\u00d7 P(F)\nIn the above network:\nl V = {Alice, Bob, \u2026, Tommy} \u2286 N\nl E = {(Alice, Bob), (Alice, Dave), \u2026, (Sarah, Tommy)} \u2286 N\u00d7N\n\n\fSet notation allows us to make quantified\nstatements more precise\nWe can use set notation to make the domain of a\nquantified statement explicit.\n\nExample: \u2200x\u2208R (x2 \u2265 0)\nl The square of any real number is at least zero\n\nExample: \u2200n\u2208Z \u2203j,k\u2208Z [(3n+2 = 2j+1)\u2192(n = 2k+1)]\nl If n is an integer and 3n + 2 is odd, then n is odd.\n\nNote: This notation is far less ambiguous than simply\nstating the domains of propositional functions. In the\nremainder of the course, we will use this notation\nwhenever possible.\n\n\fTruth sets describe when a predicate is true\nDefinition: Given a predicate P and its corresponding\ndomain D the truth set of P enumerates all elements in\nD that make the predicate P true.\n\nExamples: What are the truth sets of the following\npredicates, given that their domain is the set Z?\nl P(x) \u2261 |x| = 1\nl Q(x) \u2261 x2 > 0\nl R(x) \u2261 x5 = 1049\n\n{-1, 1}\n{x | x\u2208Z\u00b1\u2227 x\u22600} -or- Z\u2013{0}\n\u2205\n\nNote:\nl \u2200x P(x) is true iff the truth set of P is the entire domain D\nl \u2203x P(x) is true iff the truth set of P is non-empty\n\n\fHow do computers represent and manipulate\nfinite sets?\nObservation: Representing sets as unordered\ncollections of elements (e.g., arrays of Java Object\ndata types) can be inefficient.\nAs a result, sets are usually represented using either\nhash maps or bitmaps.\nYou\u2019ll learn about these in 1501, so today we\u2019ll focus on bitmap\nrepresentations.\n\nThis is probably best explained through an example\u2026\n\n\fPlaying with the set S={x | x\u2208N, x<10}\nTo represent a set as a bitmap, we must first agree on\nan ordering for the set. In the case of S, let\u2019s use the\nnatural ordering of the numbers.\nNow, any subset of S can be represented using |S|=10\nbits. For example:\nl {1, 3, 5, 7, 9} = 0101 0101 01\nl {1, 1, 1, 4, 5} = 0100 1100 00\n\nWhat subsets of S do the following bitmaps represent?\nl 0101 1010 11\nl 1111 0000 10\n\n{1, 3, 4, 6, 8, 9}\n{0, 1, 2, 3, 8}\n\n\fSet operations can be carried out very\nefficiently as bitwise operations\nExample: {1, 3, 7} \u222a {2, 3, 8}\n0101 0001 00\n\u2228 0011 0000 10\n0111 0001 10 = {1, 2, 3, 7, 8}\n\nExample: {1, 3, 7} \u2229 {2, 3, 8}\n0101 0001 00\n\u2227 0011 0000 10\n0001 0000 00 = {3}\nNote: These operations are much faster than searching\nthrough unordered lists!\n\n\fSet operations can be carried out very\nefficiently as bitwise operations\nExample: {1, 3, 7}\n\u00ac0101 0001 00\n1010 1110 11 = {0, 2, 4, 5, 6, 8, 9}\nSince the set difference A \u2013 B can be written as A \u2229 (A \u2229 B),\nwe can calculate it as A \u2227 \u00ac(A \u2227 B).\n\nAlthough set difference is more complicated than the basic\noperations, it is still much faster to calculate set differences\nusing a bitmap approach as opposed to an unordered search.\n\n\fIn-class exercises\nProblem 4: Let A = {1, 2, 3, 4}, B = {3, 5, 7, 9}, and C\n= {7, 8, 9, 10}. Calculate the following:\nlA\u2229B\nlA\u222aB\u222aC\nlB\u2229C\nlA\u2229B\u2229C\n\nProblem 5: Come up with a bitmap representation of\nthe sets A = {a, c, d, f} and B = {a, b, c}. Use this to\ncalculate the following:\nlA\u222aB\nlA\u2229B\n\n\fFinal thoughts\nn Sets are one of the most basic data structures used\nin computer science\nn Today, we looked at:\nl How to define sets\nl Basic set operations\nl How computers represent sets\n\nn Next time:\nl Set identities (Section 2.2)\nl Functions (Section 2.3)\n\n\f", "label": [[-2, -1, "Concept"]], "Comments": []}