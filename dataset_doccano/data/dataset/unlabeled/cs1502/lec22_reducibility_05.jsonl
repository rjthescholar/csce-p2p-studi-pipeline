{"id": 270, "segment": "unlabeled", "course": "cs1502", "lec": "lec22_reducibility_05", "text": "Reducibility 05\nThumrongsak Kosiyatrakul\ntkosiyat@cs.pitt.edu\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nReducibility 05\n\n\fREGULAR TM is Undecidable\nProblem: Is there an algorithm to determine whether the\nlanguage of a TM is regular?\nFormally,\nREGULAR TM = {hM i | M is a TM and L(M ) is a regular language}\n\nUnfortunately, no algorithm can solve this problem\nTo verify this, we need to prove that REGULAR TM is\nundecidable\nAs usual, we are going to use the proof by contradiction\nAssume that REGULAR TM is decidable\nThus, there exists a TM R that decides REGULAR TM\nThis gives us the ability to check whether the language of a\nTM M 0 is regular or not regular\n\nAs usual, we want to show that if REGULAR TM is decidable,\nATM is decidable\nSo, we need to construct a TM M 0 such that whether the\nlanguage of TM M 0 is regular or not depending on whether M\naccepts w\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nReducibility 05\n\n\fREGULAR TM is Undecidable\n\nOnce again, we have two choices:\n1\n\nChoice #1:\nIf M accepts w, L(M 0 ) is regular\nIf M does not accept w, L(M 0 ) is not regular\n\n2\n\nChoice #2:\nIf M accepts w, L(M 0 ) is not regular\nIf M does not accept w, L(M 0 ) is regular\n\nWhich one?\nThis is an example of the problem where you can pick any\nchoices\nLet\u2019s look at how to construct a TM M 0 that satisfies each\nchoice\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nReducibility 05\n\n\fREGULAR TM is Undecidable\nChoice #1\nIf M accepts w, L(M 0 ) is regular\nIf M does not accept w, L(M 0 ) is not regular\nHere is an example of a TM M 0 that satisfies choice #1:\nM 0 = \u201cOn input x:\n1\n2\n3\n\nIf x is in the form of 0n 1n , accept.\nIf x is not in the form of 0n 1n , run M on input w.\nIf M accepts w, accept. If M rejects w, reject.\u201d\n\nFrom the definition of the above TM M 0 :\nIf M accepts w, L(M 0 ) = \u03a3\u2217\nIf M does not accept w:\nIf M rejects w, L(M 0 ) = {0n 1n | n \u2265 0}\nIf M loops indefinitely on w, L(M 0 ) = {0n 1n | n \u2265 0}\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nReducibility 05\n\n\fREGULAR TM is Undecidable\nChoice #2\nIf M accepts w, L(M 0 ) is not regular\nIf M does not accept w, L(M 0 ) is regular\nHere is an example of a TM M 0 that satisfies choice #2:\nM 0 = \u201cOn input x:\n1\n2\n\n3\n\nRun M on input w.\nIf M accepts w and x is in the form of 0n 1n , accept;\notherwise, reject.\nIf M rejects w, reject.\u201d\n\nFrom the definition of the above TM M 0 :\nIf M accepts w, L(M 0 ) = {0n 1n | n \u2265 0}\nIf M does not accept w:\nIf M rejects w, L(M 0 ) = \u2205\nIf M loops indefinitely on w, L(M 0 ) = \u2205\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nReducibility 05\n\n\fREGULAR TM is undecidable (Choice #1)\nProof: Assume that REGULAR TM is decidable. Since REGULAR TM is decidable,\nthere exists a TM R that decides REGULAR TM . Let construct a TM S as follows:\nS = \u201cOn input hM, wi where M is a TM and w is a string:\n1 Construct TM M 0 as follows:\nM 0 = \u201cOn input x:\n1 If x is in the form of 0n 1n , accept.\n2 If x is not in the form of 0n 1n , run M on input w.\n3 If M accepts w, accept. If M rejects w, reject.\u201d\n2 Run R on input hM 0 i.\n3 If R accepts hM 0 i, accept. If R rejects hM 0 i, reject.\u201d\nNext, we need to prove that TM S is a decider for ATM .\nProve that if hM, wi \u2208 ATM , S accepts hM, wi: Assume that hM, wi \u2208 ATM .\nSince hM, wi \u2208 ATM , M is a TM that accepts w. Since M accepts w, from the\ndefinition of TM M 0 , L(M 0 ) is \u03a3\u2217 which is a regular language. Since L(M 0 ) is\nregular, hM 0 i \u2208 REGULAR TM . Since R is a decider for REGULAR TM , by\nrunning R on input hM 0 i, R will accept hM 0 i. Since R accepts hM 0 i, S accepts\nhM, wi.\nProve that if hM, wi 6\u2208 ATM , S rejects hM, wi: Assume that hM, wi 6\u2208 ATM .\nSince hM, wi 6\u2208 ATM , M is a TM that does not accept w. Since M does not\naccept w, from the definition of TM M 0 , L(M 0 ) is {0n 1n | n \u2265 0} which is not\na regular language. Since L(M 0 ) is not regular, hM 0 i 6\u2208 REGULAR TM . Since\nR is a decider for REGULAR TM , by running R on input hM 0 i, R will reject\nhM 0 i. Since R rejects hM 0 i, S rejects hM, wi.\nThis show that TM S is a decider for ATM . Therefore, ATM is decidable\ncontradiction. Therefore, REGULAR TM is undecidable.\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nReducibility 05\n\n\fMore Fact for Contradiction\n\nSo far, we have been using ATM as the mean of contradiction\nBecause we know from the fact that ATM is undecidable\n\nBut now, we have the following undecidable languages:\nATM = {hM, wi | M is a TM that accepts w}\nHALT TM = {hM, wi | M is a TM that halts on input w}\nETM = {hM i | M is a TM and L(M ) = \u2205}\nREGULAR TM = {hM i | M is a TM and L(M ) is regular}\n\nWe can now use those undecidable languages\nFor example, to show that a language A is undecidable, we can\nshow that if A is decidable, ETM is decidable\n\nBut we can always use ATM\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nReducibility 05\n\n\fEQ TM is Undecidable\nProblem: Is there an algorithm to determine whether\nlanguages of two TMs M1 and M2 are identical?\nFormally,\nEQ TM = {hM1 , M2 i | M1 and M2 are TMs and L(M1 ) = L(M2 )}\n\nUnfortunately, EQ TM is undecidable\nAs usual, we are going to assume that EQ TM is decidable\nIn other words, given two TMs M1 and M2 , we know whether\nhM1 , M2 i \u2208 EQ TM or not\n\nFor this language, we generally need to construct two TMs\nM1 and M2 from a TM M and a string w\nFor this problem, we are going to look at two proofs:\nContradict with the fact that ATM is undecidable\nContradict with the fact that ETM is undecidable\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nReducibility 05\n\n\fEQ TM is Undecidable\nProve that EQ TM = {hM1 , M2 i | M1 and M2 are TMs and L(M1 ) = L(M2 )} is\nundecidable.\nProof: Assume that EQ TM is decidable. Since EQ TM is decidable, there exists a TM\nR that decides EQ TM . Let construct a TM S (to decide ATM ) as follows:\nS = \u201cOn input hM, wi where M is a TM and w is a string:\n1 Construct TM M1 as follows:\nM1 = \u201cOn input x:\n1 accept.\n2 Construct TM M2 as follows:\nM2 = \u201cOn input x:\n1 Run M on input w.\n2 If M accepts w, accept. If M rejects w, reject.\u201d\n3 Run R on input hM1 , M2 i.\n4 If R accepts hM1 , M2 i, accept. If R rejects hM1 , M2 i, reject.\u201d\nNext, we need to prove that TM S is a decider for ATM .\nProve that if hM, wi \u2208 ATM , S accepts hM, wi:\nAssume that hM, wi \u2208 ATM . Since hM, wi \u2208 ATM , M is a TM that accepts w.\nSince M accepts w, from the definition of TM M1 , L(M1 ) = \u03a3\u2217 and from the\ndefinition of TM M2 , L(M2 ) = \u03a3\u2217 . In other words, L(M1 ) = L(M2 ). Since\nL(M1 ) = L(M2 ), hM1 , M2 i \u2208 EQ TM . Since R is a decider for EQ TM , by\nrunning R on input hM1 , M2 i, R will accept hM1 , M2 i. Since R accepts\nhM1 , M2 i, S accepts hM, wi.\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nReducibility 05\n\n\fEQ TM is Undecidable\n\nProof: (continue)\nProve that if hM, wi 6\u2208 ATM , S rejects hM, wi:\nAssume that hM, wi 6\u2208 ATM . Since hM, wi 6\u2208 ATM , M is a TM that does not\naccept w. Since M does not accept w, from the definition of TM M1 ,\nL(M1 ) = \u03a3\u2217 and from the definition of TM M2 , L(M2 ) = \u2205. In other words,\nL(M1 ) 6= L(M2 ). Since L(M1 ) 6= L(M2 ), hM1 , M2 i 6\u2208 EQ TM . Since R is a\ndecider for EQ TM , by running R on input hM1 , M2 i, R will reject hM1 , M2 i.\nSince R rejects hM1 , M2 i, S rejects hM, wi.\nThis show that TM S is a decider for ATM . Therefore, ATM is decidable\ncontradiction. Therefore, EQ TM is undecidable.\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nReducibility 05\n\n\fEQ TM is Undecidable\nProve that EQ TM = {hM1 , M2 i | M1 and M2 are TMs and L(M1 ) = L(M2 )} is\nundecidable.\nProof: Assume that EQ TM is decidable. Since EQ TM is decidable, there exists a TM\nR that decides EQ TM . Let construct a TM S (to decide ETM ) as follows:\nS = \u201cOn input hM i where M is a TM:\n1\n\nConstruct TM ME as follows:\nME = \u201cOn input x:\n1 reject.\n\n2\n\nRun R on input hM, ME i.\n\n3\n\nIf R accepts hM, ME i, accept. If R rejects hM, ME i, reject.\u201d\n\nNext, we need to prove that TM S is a decider for ETM .\nProve that if hM i \u2208 ETM , S accepts hM i:\nAssume that hM i \u2208 ETM . Since hM i \u2208 ETM , M is a TM and L(M ) = \u2205.\nFrom the definition of TM ME , L(ME ) = \u2205. Since L(M ) = \u2205 and L(ME ) = \u2205,\nL(M ) = L(ME ). In other words, hM, ME i \u2208 EQ TM . Since R is a decider for\nEQ TM , by running R on input hM, ME i, R will accept hM, ME i. Since R\naccepts hM, ME i, S accepts hM i.\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nReducibility 05\n\n\fEQ TM is Undecidable\n\nProof: (continue)\nProve that if hM i 6\u2208 ETM , S rejects hM i:\nAssume that hM i 6\u2208 ETM . Since hM i 6\u2208 ETM , M is a TM and L(M ) 6= \u2205.\nFrom the definition of TM ME , L(ME ) = \u2205. Since L(M ) 6= \u2205 and L(ME ) = \u2205,\nL(M ) 6= L(ME ). In other words, hM, ME i 6\u2208 EQ TM . Since R is a decider for\nEQ TM , by running R on input hM, ME i, R will reject hM, ME i. Since R\nrejects hM, ME i, S rejects hM i.\nThis show that TM S is a decider for ETM . Therefore, ETM is decidable\ncontradiction. Therefore, EQ TM is undecidable.\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nReducibility 05\n\n\fONE TM is Undecidable\n\nProblem: Given a TM M , is there an algorithm to check\nwhether M only accept one string (|L(M )| = 1)\nUnfortunately, this is another unsolvable problem\nFormally,\nONE TM = {hM i | M is a TM and |L(M )| = 1}\nTo show that the above problem is unsolvable, we just need to\nshow that ONE TM is undecidable\nUse the same method:\nShow that if ONE TM is decidable, ATM is decidable\nWe need to construct a TM M 0 from a TM M and a string w\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nReducibility 05\n\n\fONE TM is Undecidable\n\nTwo choices as usual:\n1\n\nChoice #1:\nIf hM, wi \u2208 ATM , hM 0 i \u2208 ONE TM\nIf M accepts w, |L(M 0 )| = 1\nIf hM, wi 6\u2208 ATM , hM 0 i 6\u2208 ONE TM\nIf M does not accept w, |L(M 0 )| =\n6 1\n\n2\n\nChoice #2:\nIf hM, wi \u2208 ATM , hM 0 i 6\u2208 ONE TM\nIf M accepts w, |L(M 0 )| 6= 1\nIf hM, wi 6\u2208 ATM , hM 0 i \u2208 ONE TM\nIf M does not accept w, |L(M 0 )| = 1\n\nThis is another example where you can pick either choices\nWe are going to use the choice #1\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nReducibility 05\n\n\fONE TM is Undecidable\nProve that ONE TM = {hM i | M is a TM and |L(M )| = 1} is undecidable.\nProof: Assume that ONE TM is decidable. Since ONE TM is decidable, there exists a\nTM R that decides ONE TM . Let construct a TM S (to decide ATM ) as follows:\nS = \u201cOn input hM, wi where M is a TM and w is a string:\n1\n\nConstruct TM M 0 as follows:\nM 0 = \u201cOn input x:\n1 If x = \u03b5, run M on input w. If M accepts w, accept; otherwise, reject.\n2 If x 6= \u03b5, reject.\n\n2\n\nRun R on input hM 0 i.\n\n3\n\nIf R accepts hM 0 i, accept. If R rejects hM 0 i, reject.\u201d\n\nNext, we need to prove that TM S is a decider for ATM .\nProve that if hM, wi \u2208 ATM , S accepts hM, wi:\nAssume that hM, wi \u2208 ATM . Since hM, wi \u2208 ATM , M is a TM and that\naccepts w. Since M accepts w, from the definition of TM M 0 , L(M 0 ) = {\u03b5}.\nSince L(M 0 ) = {\u03b5}, |L(M 0 )| = 1. In other words, hM 0 i \u2208 ONE TM . Since R is\na decider for ONE TM , by running R on input hM 0 i, R will accept hM 0 i. Since\nR accepts hM 0 i, S accepts hM, wi.\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nReducibility 05\n\n\fONE TM is Undecidable\n\nProof: (continue)\nProve that if hM, wi 6\u2208 ATM , S rejects hM, wi:\nAssume that hM, wi 6\u2208 ATM . Since hM, wi 6\u2208 ATM , M is a TM and that does\nnot accept w. Since M does not accept w, from the definition of TM M 0 ,\nL(M 0 ) = \u2205. Since L(M 0 ) = \u2205, |L(M 0 )| 6= 1. In other words, hM 0 i 6\u2208 ONE TM .\nSince R is a decider for ONE TM , by running R on input hM 0 i, R will reject\nhM 0 i. Since R rejects hM 0 i, S rejects hM, wi.\nThis show that TM S is a decider for ATM . Therefore, ATM is decidable\ncontradiction. Therefore, ONE TM is undecidable.\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nReducibility 05\n\n\fConclusion\nSo far, to prove that a language A is undecidable, we use\nproof by contradiction\nAssume that A is decidable\nSince A is decidable, there exists a TM R that decides A\nThen we show that if A is decidable, ATM is decidable\nAnother known undecidable language can be used instead of\nATM\n\nSo, we need to construct a TM S that decides ATM and prove\nthat S is a decider for ATM\nGiven a TM M and a string w, TM S need to construct a\nstring s such that whether s \u2208 A depends on whether M\naccepts w\nThen use TM R (a decider for A) as a helper machine to\ndecide ATM\n\nTry to prove that ONE TM is undecidable using the choice #2.\n\nThumrongsak Kosiyatrakul tkosiyat@cs.pitt.edu\n\nReducibility 05\n\n\f", "label": [[-2, -1, "Concept"]], "Comments": []}