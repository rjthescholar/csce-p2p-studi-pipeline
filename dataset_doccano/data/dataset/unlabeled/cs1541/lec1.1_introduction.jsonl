{"id": 247, "segment": "unlabeled", "course": "cs1541", "lec": "lec1.1_introduction", "text": "CS 1541 Introduction\nInstructor Introduction\nCourse Introduction\n\nWonsun Ahn\nDepartment of Computer Science\nSchool of Computing and Information\n\n\fInstructor Introduction\n\n\fMy Technical Background\n\u25fc Wonsun Ahn\n\u26ab First name is pronounced one-sun (if you can manage)\n\u26ab Or you can just call me Dr. Ahn (rhymes with naan)\n\n\u25fc PhD in CPU Design and Compilers\n\u26ab University of Illinois at Urbana Champaign\n\n\u25fc Industry Experience\n\u26ab Software engineer, field engineer, technical lead, manager\n\u26ab Bluebird Corporation (70-person startup company)\nManufactures industrial hand-held devices from top to bottom\nMe: Built software stack based on Windows Embedded\n\n\u26ab IBM Research (thousands of people)\nDoes next-gen stuff like carbon nanotubes, quantum computers\nMe: Designed supercomputers for ease of parallel programming\n\n\fMy World View\n\u25fc Everything is connected\n\u26ab Pandemic: If my neighbors catch the virus, so will I\n\u26ab Environment: If my neighbors pollute, I will feel the effects\n\u26ab Economy: Think of how the subprime mortgage crisis spread\n\n\u25fc Zero-sum thinking (old way of thinking)\n\u26ab \u201cIf you get a larger slice of the pie, I get a smaller slice.\u201d\n\u26ab Therefore, if you lose, I win (and vice versa)\n\n\u25fc Zero-sum thinking no longer works\n\u26ab If you catch the virus, do I become safer from the virus?\n\n\u25fc Collaboration is replacing competition\n\n\fCollaboration is Replacing Competition\n\u25fc Is happening in all spheres of life\n\u25fc Collaboration is also happening in the IT industry\n\u26ab The open source movement\n\u26ab Increasing importance of the software/hardware ecosystem\n\u26ab Increasing importance of the developer community\n\n\u25fc Collaboration is also important for learning\n\u26ab During my undergrad years, what do I remember best?\n\u26ab Stuff that I explained to my classmates\n\u26ab Stuff that my classmates taught me\n\n\fSupporting Collaborative Learning\n\u25fc I do not grade on a curve\n\u26ab You will not be competing against your classmates\n\u26ab You are graded on your own work on an absolute scale\n\n\u25fc You will be a member of a Team\n\u26ab You are already a member of the class on Microsoft Teams\n\u26ab I encourage you to be on Teams at most times (I will too)\nYou can install app on both laptop and cell phone\n\n\u26ab If you have a question, you can ask in the Team \u201cPosts\u201d tab\nEither your classmate or your instructor will answer\n\n\u26ab You can chat with any individual on the Team\n\u201cManage Team\u201d item in the \u201c\u2026\u201d Team context menu\n\n\fSupporting Collaborative Learning\n\u25fc You will be a member of a Group\n\u26ab On Teams, you will be part of a chat group of 8 members\n\u26ab Your instructor is also a member of each Group\n\u26ab It is a smaller support group where you can talk more freely\n\n\u25fc You are allowed to discuss TopHat lecture questions\n\u26ab The goal is no-student-left-behind\n\u26ab Discuss answers on Teams even before submitting them\n\u26ab Form a basis of knowledge for doing homeworks and exams\n\n\fCourse Introduction\n\n\fStructure of the Course\n\u25fc (45% of grade) Two midterms\n\u25fc (20% of grade) Two projects\n\u26ab Implementing a CPU simulator using C programming language\n\n\u25fc (20% of grade) Four homeworks\n\u25fc (15% of grade) Participation\n\u26ab Attendance, TopHat lecture questions, Teams participation\n\n\u25fc Class resources:\n\u26ab Canvas: announcements, Zoom meetings, recorded lectures\n\u26ab GitHub: syllabus, lectures, homeworks, projects\n\u26ab Tophat: online lecture questions\n\u26ab GradeScope: homework / projects submission, grading and feedback\n\u26ab Microsoft Teams: all out-of-class communication\n\n\fTextbook (You Probably Have it)\n\u25fc \u201cComputer\nOrganization and\nDesign - The\nHardware/Software\nInterface\u201d by David\nPatterson and John\nHennessy Fifth\nEdition - Morgan &\nKaufmann.\n\n\fFor More Details\n\u25fc Please refer to the course info page:\nhttps://github.com/wonsunahn/CS1541_Spring2022\n/blob/main/course-info.md\n\n\u25fc Please follow the course syllabus schedule:\nhttps://github.com/wonsunahn/CS1541_Spring2022\n/blob/main/syllabus.md\n\n\fWhat is Computer Architecture?\n12\n\n\u25fc At a high-level: how a computer is built\n\u26ab Computer here meaning the processor (CPU)\n\n\u25fc You probably heard of a similar term before: ISA\n\u26ab ISA (Instruction Set Architecture)\n\n\u25fc Review: what is defined by an ISA?\n\u26ab Set of instructions usable by the computer\n\u26ab Set of registers available in the computer\n\u26ab Other functional attributes\n\n\u25fc What is not defined by an ISA?\n\u26ab Speed of computer\n\u26ab Energy efficiency of computer\n\u26ab Reliability of computer\n\u26ab Other performance attributes\n\n\fComputer Architecture Defined\nApp 1\n\nApp 2\n\nApp 3\n\nOperating System\n\nSoftware Layer\n\nInstruction Set Architecture\nProcessor Organization\n\nComputer\nArchitecture\n\nTransistor Implementation\n\nPhysical Layer\n\n\u25fc Computer Architecture = ISA + Processor Organization\n\u26ab Processor organization is also called Microarchitecture\n\n\u25fc Given an ISA, performance is decided by:\n\u26ab Processor organization (internal design of the processor)\n\u26ab Transistor implementation (semiconductor technology)\n\n\fScope of Class\n\u25fc Physical layer is beyond\nthe scope of the class\n\n\u25fc We will focus mostly on\nprocessor organization\n\u26ab And how performance\ngoals are achieved\n\n\fScope of Class\n\u25fc Computer architecture is part of system architecture\n\n\u25fc Other components beside processor is beyond the scope\n\n\fTwo Forces on Computer Architecture\n1. Application pull\n\n2. Technology push\n\n\u25fc Market forces pull\n\u25fc Advances in silicon\narchitecture towards\ntechnology push\npopular applications\narchitecture to change\n\n\fApplication Pull\n\u25fc Different applications pull in different directions\nApplication pull\n\nApp 1\n\nApp 2\n\nApp 3\n\nOperating System\n\nSoftware Layer\n\nInstruction Set Architecture\nProcessor Organization\n\nComputer\nArchitecture\n\nTransistor Implementation\n\nPhysical Layer\n\n\u26ab Real-time app (e.g. Game): Short latency\n\u26ab Server app: High throughput\n\u26ab Mobile app: High energy-efficiency (battery life)\n\u26ab Mission critical app: High reliability\n\n\u25fc An app typically has multiple goals that are important\n\n\fApplication Pull\n\u25fc Some goals can be incompatible\n\u26ab E.g. Speed and energy-efficiency are incompatible\nRunning is faster than walking but uses more energy\nA Ferrari is faster than a Prius but has worse fuel efficiency\n\n\u26ab E.g. Reliability is incompatible with many other goals\nIf you use redundancy, you use twice the amount of energy\n\n\u25fc Even when sharing a goal, apps have unique needs\n\u26ab Scientific apps need lots of floating point units to go fast\n\u26ab Database apps need lots of memory cache to go fast\n\n\u25fc An architecture is a compromise among all the apps\n\u26ab When app achieves market critical mass, designs diverge\n(Mobile chips / Server chips / GPUs / TPUs diverged)\n\u26ab Sometimes even ISAs diverge (GPUs and TPUs)\n\n\fTechnology Push\n\u25fc Trends in technology pushes architecture too\nApp 1\n\nTechnology push\n\nApp 2\n\nApp 3\n\nOperating System\n\nSoftware Layer\n\nInstruction Set Architecture\nProcessor Organization\n\nComputer\nArchitecture\n\nTransistor Implementation\n\nPhysical Layer\n\n\u26ab Trends can be advances in technology\n\u26ab Trends can be constraints technology couldn\u2019t overcome\n\n\uf0ad \u201cTechnology\u201d in CPU design refers to the physical layer\n\u26ab Manufacturing technology used for transistor implementation\n\n\f", "label": [[-2, -1, "Concept"]], "Comments": []}