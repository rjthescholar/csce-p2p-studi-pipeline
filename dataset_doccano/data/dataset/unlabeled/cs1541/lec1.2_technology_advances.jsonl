{"id": 245, "segment": "unlabeled", "course": "cs1541", "lec": "lec1.2_technology_advances", "text": "CS 1541 Introduction\nTechnology Advances\n\nWonsun Ahn\nDepartment of Computer Science\nSchool of Computing and Information\n\n\fTechnology Advances\n\n\fAdvances in Technology\n\u25fc Technology has been advancing at lightning speed\n\u25fc Architecture and IT as a whole were beneficiaries\n\u25fc Technology advance is summarized by Moore\u2019s Law\n\u26ab You probably heard of it at some point. Something about \u2026\n\u26ab \u201cX doubles every 18-24 months at constant cost\u201d\n\n\u25fc Is X:\n\u26ab CPU performance?\n\u26ab CPU clock frequency?\n\u26ab Transistors per CPU chip?\n\u26ab Area of CPU chip?\n\n\fMoore\u2019s Law\n\n2X transistors\nevery 2 years!\n\n\fMiniaturization of Transistors\n\nData source: Radamson, H.H.; He, X.; Zhang, Q.; Liu, J.; Cui, H.; Xiang, J.; Kong, Z.; Xiong, W.; Li, J.; Gao, J.; Yang, H.;\nGu, S.; Zhao, X.; Du, Y.; Yu, J.; Wang, G. Miniaturization of CMOS. Micromachines 2019, 10, 293.\n\n\u25fc Moore\u2019s Law has been driven by transistor miniaturization\n\u26ab CPU chip area hasn\u2019t changed much\n\n\fFuture of Moore\u2019s Law\n\u25fc The semiconductor industry has produced roadmaps\n\u26ab Semiconductor Industry Association (SIA):\n1977~1997\n\u26ab International Technology Roadmap for Semiconductors (ITRS):\n1998~2016\n\u26ab International Roadmap for Devices and Systems (IRDS):\n2017~Present\n\n\u25fc IRDS Lithography Projection (2020)\nYear of Production\nTechnology Node (nm)\n\n2018 2020 2022 2025 2028 2031 2034\n7\n\n5\n\n3\n\n2.1\n\n1.5\n\n1.0\n\n0.7\n\n\u26ab Looks like Moore\u2019s Law will continue into foreseeable future\n\u26ab IRDS does not project significant increase in CPU chip size\n\u26ab Increases in transistors will come from transistor density\n\n\fIRDS isn\u2019t Perfect\n\u25fc ITRS (predecessor of IRDS) has made corrections before\n\n\u26ab After all, you are trying to predict the future\n\u26ab But architects rely on the roadmap to design future processors\n\n\fMoore\u2019s Law and Performance\n\u25fc Million-dollar question:\nDid Moore\u2019s Law result in higher performance CPUs?\n\u25fc We will do a Zoom breakout room session\n1. Get to know each other (5 mins):\n\u26ab Introduce yourself and say one fun thing you did over winter\n\n2. And then answer the following questions (5 mins):\n\u26ab When you decide on a CPU for your laptop, what number(s) do\nyou look at to measure how fast the CPU is?\n\u26ab Are CPUs getting faster using that measure?\n\n3. After 10 minutes, we will share discussions with class\n\n\fAre CPUs getting Faster?\nMeasure of Performance\n\nIs it Getting Better?\n\nResponse time (for an app)\n\nDepends (generally increasing)\n\nNumber of cores\n\nGenerally upwards trajectory\n\nPower draw / Thermals\n\nGetting lower\n\nClock speed\n\nSame\n\nCache size\n\nIncreasing\n\n\fComponents of Execution Time\n\u25fc Processor activity happens on clock \u201cticks\u201d or cycles\ntime\n\u26ab On each tick, bits flow through logic gates and are latched\n\n\u25fc Execution time =\nseconds\n=\nprogram\n\ncycles\nprogram\n\nseconds\nprogram\n\nX\n\n= instructions X\nprogram\n\nseconds\ncycle\ncycles\ninstruction\n\nX\n\nseconds\ncycle\n\n\fImproving Execution Time\ncycles\nseconds\nX\ncycle\ninstruction\nseconds\n\u25fc Improving cycle :\ncycles\nseconds\n\u26ab Clock frequency =\n= reverse of\nsecond\ncycle\n\ninstructions\nX\nprogram\n\n\u26ab Higher clock frequency (GHz) leads to shorter exec time\n\ncycles\n\u25fc Improving instruction :\n\n\u26ab Also known as CPI (Cycles Per Instruction)\ninstructions\ncycles\n\u26ab IPC (Instructions Per Cycle) =\n= reverse of\ncycles\ninstructions\n\u26ab Higher IPC leads to shorter execution time\ninstructions\n\u25fc Improving program :\n\n\u26ab Less instructions leads to shorter execution time\n\u26ab ISAs that do a lot of work with one instruction shortens time\n\n\fMoore\u2019s Law and Performance\n\u25fc Million-dollar question:\nDid Moore\u2019s Law result in higher performance CPUs?\n\u25fc Law impacts both architecture and physical layers\n\nInstruction Set Architecture\nProcessor Organization\n\nComputer\nArchitecture\n\nTransistor Implementation\n\nPhysical Layer\n\n\u26ab Processor Organization: many more transistors to use in design\n\u26ab Transistor Implementation: smaller, more efficient transistors\n\n\fMoore\u2019s Law Impact on Architecture\n\u25fc So where did architects use all those transistors?\n\u25fc Well, we will learn this throughout the semester \u263a\n\u26ab Pipelining\n\u26ab Parallel execution\n\u26ab Prediction of values\n\u26ab Speculative execution\n\u26ab Memory caching\n\u26ab In short, they were used to improve frequency or IPC\n\n\u25fc Let\u2019s go on to impact on the physical layer for now\n\n\fMoore\u2019s Law Impact on Physical Layer\n\u25fc CPU frequency is also impacted by transistor speed\n\u26ab As well as how many transistors are in between clock ticks\n(which is determined by processor organization)\n\n\u25fc So did Moore\u2019s Law result in faster transistors?\n\u26ab In other words, are smaller transistors faster?\n\n\fSpeed of Transistors\n\u25fc Transistor 101: Transistors are like faucets!\n\n\u25fc To make a transistor go fast, do one of the following:\n\u26ab Reduce distance from source to sink (channel length) \uf0f2\n\u26ab Reduce bucket size (capacitance) \uf0f2\n\u26ab Increase water pressure (supply voltage) \uf0f1\n\n\fSmaller Transistors are Faster!\n\u25fc Transistor 101: Transistors are like faucets!\n\n\u25fc When a transistor gets smaller:\n\u26ab Channel length (channel resistance) is reduced \uf0f2\n\u26ab Capacitance is reduced \uf0f2\n\n\u25fc So, given the same supply voltage, smaller is faster!\n\u25fc So, did Moore\u2019s Law enjoy faster and faster frequencies?\n\n\fYes, for a while \u2026\n\nExponential\nincrease!\n\nSource: Computer Architecture, A Quantitative Approach (6th ed.) by John Hennessy and David Patterson, 2017\n\n\u25fc Improvements in large part due to transistors\n\u26ab Processor design also contributed but we\u2019ll discuss later\n\n\fBut not so much lately\n\nWhat happened?\n\nSource: Computer Architecture, A Quantitative Approach (6th ed.) by John Hennessy and David Patterson, 2017\n\n\u25fc Suddenly around 2003, frequency scaling stops\n\n\fDent in CPU Performance\nInflection Point\n\nSource: https://preshing.com/20120208/\na-look-back-at-single-threaded-cpu-performance/\n\n\u25fc This caused a big dent in CPU performance at 2003\n\u25fc Improvements henceforth only came from architecture\n\u26ab From improvements to IPC (instructions per cycle)\n\n\fSo What Happened? TDP.\n\u25fc TDP (Thermal Design Power):\n\u26ab Maximum power (heat) that CPU is designed to generate\n\u26ab Capped by the amount of heat cooling system can handle\n\u26ab Cooling system hasn\u2019t improved much over generations\n\n\u25fc CPU Power = A * N * CFV2 must be < TDP\n\u26ab A = Activity factor (% of transistors with activity)\n\u26ab N = Number of transistors\n\u26ab C = Capacitance\n\u26ab F = Frequency\n\u26ab V = Supply Voltage\n\n\u25fc What happens to each factor with Moore\u2019s Law?\n\n\fTDP and Moore\u2019s Law\n\u25fc CPU Power \u221d A * N * CFV2 with Moore\u2019s Law\n\u26ab A = Activity factor\n\u26ab N = Number of transistors (\u221d 1/transistor size2) \uf0f1 \uf0f1\n\u26ab C = Capacitance (\u221d transistor size) \uf0f2\n\u26ab F = CPU frequency (\u221d 1/transistor size) \uf0f1\n\u26ab V = CPU Supply Voltage\n\n\u25fc Decrease in C cannot offset increases in N and F\n\u26ab Power increases quadratically with reductions in transistor size\n\u26ab That means F (frequency) needs to be decreased to meet TDP\n\nQ) So how did CPU frequency keep increasing up to 2003?\nA) By maintaining power through reductions in Voltage \uf0f2\n\n\fDennard Scaling\n\u25fc By reducing CPU Supply Voltage \u221d transistor size\n\u25fc CPU Power \u221d A * N * CFV2 with Moore\u2019s Law\n\u26ab A = Activity factor\n\u26ab N = Number of transistors (\u221d 1/transistor size2) \uf0f1 \uf0f1\n\u26ab C = Capacitance (\u221d transistor size) \uf0f2\n\u26ab F = CPU frequency (\u221d 1/transistor size) \uf0f1\n\u26ab V = CPU Supply Voltage (\u221d transistor size) \uf0f2 \uf0f2\n\n\u25fc Factors balance each other out to keep power constant\n\u26ab Note that reducing V (\u221d transistor size) has a quadratic effect\n\n\u25fc Dennard Scaling: Above recipe for scaling up frequency,\nwhile reducing supply voltage to keep power constant\n\n\fDennard Scaling and Vth\n\u25fc So, it\u2019s that easy? Just reduce V until you meet TDP?\n\u25fc No, it\u2019s not that simple \uf04c.\n\n\u25fc Reducing Vdd (supply voltage) affects CPU operation\n\u26ab As Vdd is reduced, CPU becomes slower and slower\n\u26ab Eventually, CPU stops working altogether\n\n\u25fc CPU (specifically transistors) needs redesigning\n\u26ab Vth (threshold voltage) needs to be reduced along with Vdd\n\u26ab To understand this, we need a 101 on MOSFETs\n\n\fMOSFET 101\n\u25fc MOSFET (Metal Oxide Silicon Field Effect Transistor)\n[A MOSFET transistor switched off] [A MOSFET transistor switched on]\n\n\u25fc Gate is switched on when VG reaches a threshold Vth\n\u26ab By creating a channel in depletion region through field effect\n\u26ab Vth: threshold voltage (minimum voltage to create channel)\n\n\fMOSFET 101\n\u25fc RC charging curve of VG\nVdd\nVG\nVth\n\nTon\n\u25fc Speed (Ton) is determined by Vdd if Vth is fixed\n\u26ab Vdd is the CPU supply voltage (the water pressure)\n\u26ab If Vdd is lower, VG will reach Vth more slowly (low pressure)\n\n\fMOSFET 101\n\u25fc RC Charging Curve of VG\nVdd\nVG\nVG\u2019\n\nVdd\u2019\nVth\nVth\u2019\n\nTon\n\u25fc Speed (Ton) is maintained while reducing Vdd to Vdd\u2019,\nonly if Vth is also reduced to Vth\u2019\n\n\fEnd of Dennard Scaling\n\nVth stopped scaling\n\n\u25fc And around 2003 is when Dennard Scaling ended\n\n\fLimits to Dropping Vth\n\u25fc Subthreshold leakage\n\u26ab Transistor leaks current even when gate is off (VG = 0)\n\n\u26ab This leakage current translates to leakage power\n\u26ab Leakage worsens when Vth is dropped (related to oxide thickness)\n\n\fLeakage Power across Generations\n\u25fc Leakage power has increased across technology nodes\n\nSource: L. Yan, Jiong Luo and N. K. Jha, \"Joint dynamic voltage scaling and adaptive body biasing for\nheterogeneous distributed real-time embedded systems,\" in IEEE Transactions on Computer-Aided Design of\nIntegrated Circuits and Systems, vol. 24, no. 7, pp. 1030-1041, July 2005\n\n\fEnd of Dennard Scaling\n\u25fc Previous power calculation was incomplete\n\u26ab CPU power is the sum of both dynamic and leakage power\n\n\u25fc PowerCPU \u221d Powerdynamic + Powerleakage\n\n\u26ab Powerdynamic \u221d A * N * CFVdd2\n\u26ab Powerleakage \u221d f(N, Vdd, Vth) \u221d N * Vdd * e-Vth\n\u26ab Leakage worsens exponentially when Vth is dropped\n\u26ab Catch-22: when dropping Vth, Powerdynamic \uf0f2 but Powerleakage \uf0f1\uf0f1\n\n\u25fc Vth can\u2019t be reduced further, so Vdd can\u2019t be reduced\n\u25fc Dennard Scaling relies on reducing Vdd, so it\u2019s the end\n\n\f\u201cDark Silicon\u201d Rears its Head\n\u25fc What happens to frequency without Dennard Scaling?\n\u25fc Powerdynamic (\u221d A * N * CFV2) + Powerleakage (\u221d N * V * e-Vth)\n\u26ab A = Activity factor\n\u26ab N = Number of transistors (\u221d 1/transistor size2) \uf0f1 \uf0f1\n\u26ab C = Capacitance (\u221d transistor size) \uf0f2\n\u26ab V = CPU Supply Voltage \uf0f3 (Due to fixed Vth)\n\u26ab F = CPU frequency ???\n\n\u25fc To offset N, you actually have to decrease F\n\u25fc Otherwise, if you want to maintain F, must decrease N\n\u26ab That is, you cannot power on all the transistors at any given point\n\u26ab Dark silicon: situation where chip is only partially powered\n\n\fFree Ride is Over\n\u25fc \u201cFree\u201d speed improvements from transistors is over\n\u25fc Now it\u2019s up to architects to improve performance\n\u26ab Moore\u2019s Law is still alive and well (although slowing down)\n\u26ab Architects are flooded with extra transistors each generation\n\u26ab But it\u2019s hard to even keep them powered without reducing F!\n\n\u25fc Now is a good time to discuss technology constraints\n\u26ab Since we already mentioned a big one: TDP\n\n\f", "label": [[-2, -1, "Concept"]], "Comments": []}