{"id": 236, "segment": "unlabeled", "course": "cs1567", "lec": "lec02_introduction_ros", "text": "Introduction to\nRobot Operating System (ROS)\nThumrongsak Kosiyatrakul\n\nThumrongsak Kosiyatrakul\n\nIntroduction to Robot Operating System (ROS)\n\n\fRobot Operating System (ROS)\nROS is not an operating system. It is a meta-Operating\nSystem\nROS is running on top of another operating system (Linux)\n\nContains a collection of software, packaging, and building\ntools\nSuitable for distributed inter-process/inter-machine\ncommunication\nCan be used across networks (TCP/IP)\n\nProvides tools for data analysis and debugging during run-time\nAllows debugging under a distributed environment\n\nSupport various languages such as C++ and Python\nWe are going to use Python in this class\nFor CS, it should take about 5 hours to learn enough Python\nfor this class\n\nThumrongsak Kosiyatrakul\n\nIntroduction to Robot Operating System (ROS)\n\n\fRobot Operating System (ROS)\n\nROS is not an actual OS but has the same functionalities as\nan OS\nSupply interprocess communication\nSignal/interrupt to processes\n\nAll major functionalities are broken up into a number of nodes\nEach node runs as a separate process\nNodes communicate with each other using messages\n\nMatchmaking between nodes is done by the ROS Master\n(roscore)\n\nThumrongsak Kosiyatrakul\n\nIntroduction to Robot Operating System (ROS)\n\n\fRobot Operating System (ROS)\n\nAt the lowest level (main):\nGeneral tools for distributed computing\nPackaging\nBuilding tools\nAPI\nLanguage binding\n\nThis part is maintained by Willow Garage, Inc and some other\ndeveloper\n\nThumrongsak Kosiyatrakul\n\nIntroduction to Robot Operating System (ROS)\n\n\fRobot Operating System (ROS)\n\nAt higher level (universe):\nProvides algorithms, hardware abstractions, applications, etc\nApplication Level: playing football\nCapability Level: Navigation\nLibraries: OpenCV, Drivers, etc\n\nDeveloped and maintained by ROS community\nThe main web site www.ros.org\nQuestions/Answers Community Support\n\nThumrongsak Kosiyatrakul\n\nanswers.ros.org\n\nIntroduction to Robot Operating System (ROS)\n\n\fROS Core\n\nROS Master\nA centralized Remote Procedure Call (RPC) server\nNegotiates communication connections between nodes\nRegisters names\n\nrosout: network standard output\nCan show output of nodes running on different machines over\nnetworks\n\nThumrongsak Kosiyatrakul\n\nIntroduction to Robot Operating System (ROS)\n\n\fROS Communication Protocol\n\nROS Topics\nAsynchronous communication (stream)\nStrongly Typed\nHelp hiding underly byte stream\nThink about struct in C\n\nCan have one or more publishers in the same topic\nCan have one or more subscribers in the same topic\n\nThumrongsak Kosiyatrakul\n\nIntroduction to Robot Operating System (ROS)\n\n\fHow ROS Works?\n\ncmvision\nnode\n\ncontrol\nnode\n\n2\n\n3\nROS\nMaster\n\n1\n\n4\n\ncamera\nnode\n\nkobuki\nnode\n\nCamera\n\nComputer\nUSB\n\nThumrongsak Kosiyatrakul\n\nKobuki\nUSB\n\nIntroduction to Robot Operating System (ROS)\n\n\fHow ROS Works?\n\ncamera node\nPerforms hardware abstraction to support all kinds of USB\ncameras\nTurn the data from camera into a standard image format\n\nTells the ROS Master\nI wants to publish images on topic image\n\ncmvision node\nPerforms objects detection based on blob of colors\nTurn an image into an array of coordinate of detected objects\n\nTells the ROS Master\nI want to subscribe to receive images from the topic image\nI also want to publish blobs on topic blobs\n\nThumrongsak Kosiyatrakul\n\nIntroduction to Robot Operating System (ROS)\n\n\fHow ROS Works?\n\ncontrol node\nMake decisions to turn left/right based on an array of\ncoordinates\nTells the ROS Master\nI want to subscribe to receive blobs from the topic blobs\nI also want to publish velocities on topic velocity\n\nkobuki node\nPerforms hardware abstractions\nMotor controller, motor feedback, sensors\n\nTells the ROS Master\nI want to subscribe to receive velocities from the topic velocity\n\nNote: the order does not matter\n\nThumrongsak Kosiyatrakul\n\nIntroduction to Robot Operating System (ROS)\n\n\fHow ROS Works?\n\ncmvision\nnode\n\ncontrol\nnode\n\nROS\nMaster\n\ncamera\nnode\n\nkobuki\nnode\n\nCamera\n\nComputer\nUSB\n\nKobuki\nUSB\n\nROS Master sets up communication among nodes based on their\nrequests.\nThumrongsak Kosiyatrakul\n\nIntroduction to Robot Operating System (ROS)\n\n\fROS Nodes\n\nA node is a process that performs some computations.\nWe typically divide the entire software functionality into\ndifferent modules\nSingle Node\nColor image to array of coordinate in one program\n\nMultiple Nodes:\nColor image to black and white\nBlack and white to coordinate\n\nNodes are combined together into a graph and communicate\nwith one another using streaming topics\nThese nodes are meant to operate at a fine-grained scale\nA robot control system usually comprise of many nodes.\n\nThumrongsak Kosiyatrakul\n\nIntroduction to Robot Operating System (ROS)\n\n\fROS Node Examples\ngscam node:\nCommunicates with integrated web camera at the hardware\nlevel\nCaptures images and publishes on topic image\nNote that a video is simply a series of images\n\ncmvision node:\nSubscribes to the topic image\nTries to find blobs of specific color for every image received\nPublishes locations and sizes of blobs on topic blobs\n\ncontrol node:\nSubscribes to the topic blob\nDecides what to do\nPublishes velocities to move robot\n\nkobuki node:\nSubscribes to the topic velocity\nTells kobuki robot what to do based on velocities received\nThumrongsak Kosiyatrakul\n\nIntroduction to Robot Operating System (ROS)\n\n\fROS Topics\n\nTopics are named buses over which nodes exchange messages\nThere can be hundreds of topics at a time\n\nTopics have anonymous publish/subscribe semantics\nA subscriber does not care which node published the data it\nreceives\nA publisher does not care which node subscribes to the data it\npublishes.\n\nThere can be multiple publishers and subscribers to a topic\nEach topic is strongly typed by the ROS message it transports\nTransport is done using TCP or UDP\nCan be between multiple machines over networks\n\nThumrongsak Kosiyatrakul\n\nIntroduction to Robot Operating System (ROS)\n\n\fROS Messages\nNodes communicate with each other by publishing messages\nto topics\nPublishers publish data to topics\nSubscribers consume data from topics\n\nA message is a simple data structure, comprising typed fields.\nSimilarly to data type in programming:\nstd msgs/Int32\nstd msgs/Float32\nstd msgs/String\nstd msgs/Empty\n\nThe numbers at the end indicates number of bits\nReference to standard messages (std msgs) can be found at\nhttp://wiki.ros.org/std_msgs\n\nThumrongsak Kosiyatrakul\n\nIntroduction to Robot Operating System (ROS)\n\n\f", "label": [[-2, -1, "Concept"]], "Comments": []}