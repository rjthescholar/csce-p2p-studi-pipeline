['test_set', 'labeled']|cs1502|lec06_finite_automata_05
-DOCSTART- -X- -X- O

Finite _ _ O
Automata _ _ O
05 _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
05 _ _ O

Regular _ _ B-Concept
Language _ _ I-Concept
Question _ _ O
: _ _ O
Given _ _ O
a _ _ O
regular _ _ B-Concept
language _ _ I-Concept
, _ _ O
can _ _ O
it _ _ O
be _ _ O
expressed _ _ O
by _ _ O
a _ _ O
regular _ _ O
expression _ _ O
? _ _ O
There _ _ O
are _ _ O
infinite _ _ O
number _ _ O
of _ _ O
regular _ _ O
languages _ _ O
Luckily _ _ O
, _ _ O
all _ _ O
of _ _ O
them _ _ O
have _ _ O
one _ _ O
thing _ _ O
in _ _ O
common _ _ O
Each _ _ O
of _ _ O
them _ _ O
has _ _ O
some _ _ O
finite-state _ _ O
machines _ _ O
that _ _ O
recognize _ _ O
it _ _ O
So _ _ O
, _ _ O
to _ _ O
try _ _ O
to _ _ O
answer _ _ O
the _ _ O
above _ _ O
question _ _ O
, _ _ O
we _ _ O
need _ _ O
to _ _ O
show _ _ O
a _ _ O
way _ _ O
to _ _ O
convert _ _ O
a _ _ O
finite-state _ _ O
machine _ _ O
into _ _ O
a _ _ O
regular _ _ O
expression _ _ O
that _ _ O
expresses _ _ O
the _ _ O
language _ _ O
of _ _ O
the _ _ O
machine _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
05 _ _ O

Generalized _ _ B-Concept
Nondeterministic _ _ I-Concept
Finite _ _ I-Concept
Automaton _ _ I-Concept
A _ _ O
Generalized _ _ B-Concept
Nondeterministic _ _ I-Concept
Finite _ _ I-Concept
Automaton _ _ I-Concept
( _ _ O
GNFA _ _ B-Concept
) _ _ O
N _ _ O
of _ _ O
a _ _ O
DFA _ _ O
M _ _ O
is _ _ O
a _ _ O
special _ _ O
NFA _ _ O
where _ _ O
L _ _ O
( _ _ O
N _ _ O
) _ _ O
= _ _ O
L _ _ O
( _ _ O
M _ _ O
) _ _ O
N _ _ O
has _ _ O
exactly _ _ O
one _ _ O
accept _ _ O
state _ _ O
all _ _ O
transitions _ _ O
of _ _ O
N _ _ O
are _ _ O
regular _ _ O
expressions _ _ O
To _ _ O
transition _ _ O
from _ _ O
one _ _ O
state _ _ O
to _ _ O
another _ _ O
, _ _ O
you _ _ O
need _ _ O
a _ _ O
string _ _ O
in _ _ O
the _ _ O
language _ _ O
expressed _ _ O
by _ _ O
the _ _ O
regular _ _ O
expression _ _ O
instead _ _ O
of _ _ O
a _ _ O
symbol _ _ O
Example _ _ O
: _ _ O
q2 _ _ O
0∗ _ _ O
∪ _ _ O
11∗ _ _ O
0 _ _ O
q5 _ _ O
At _ _ O
q2 _ _ O
, _ _ O
if _ _ O
you _ _ O
encounter _ _ O
a _ _ O
string _ _ O
in _ _ O
the _ _ O
language _ _ O
0∗ _ _ O
∪ _ _ O
11∗ _ _ O
0 _ _ O
, _ _ O
move _ _ O
to _ _ O
state _ _ O
q5 _ _ O
0∗ _ _ O
∪ _ _ O
11∗ _ _ O
0 _ _ O
= _ _ O
{ _ _ O
ε _ _ O
, _ _ O
0 _ _ O
, _ _ O
00 _ _ O
, _ _ O
. _ _ O
. _ _ O
. _ _ O
} _ _ O
∪ _ _ O
{ _ _ O
10 _ _ O
, _ _ O
110 _ _ O
, _ _ O
1110 _ _ O
, _ _ O
. _ _ O
. _ _ O
. _ _ O
} _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
05 _ _ O

Converting _ _ O
a _ _ O
DFA _ _ O
to _ _ O
a _ _ O
GNFA _ _ O
1 _ _ O
2 _ _ O
3 _ _ O
Start _ _ O
with _ _ O
a _ _ O
DFA _ _ O
M _ _ O
Add _ _ O
a _ _ O
new _ _ O
start _ _ O
state _ _ O
s _ _ O
with _ _ O
an _ _ O
ε _ _ O
arrow _ _ O
to _ _ O
the _ _ O
original _ _ O
start _ _ O
state _ _ O
of _ _ O
M _ _ O
Add _ _ O
a _ _ O
new _ _ O
accept _ _ O
state _ _ O
a _ _ O
From _ _ O
every _ _ O
accept _ _ O
state _ _ O
of _ _ O
M _ _ O
, _ _ O
add _ _ O
an _ _ O
ε _ _ O
arrow _ _ O
to _ _ O
the _ _ O
new _ _ O
accept _ _ O
state _ _ O
Change _ _ O
all _ _ O
original _ _ O
accept _ _ O
states _ _ O
of _ _ O
M _ _ O
to _ _ O
non-accept _ _ O
states _ _ O
4 _ _ O
5 _ _ O
Turn _ _ O
transition _ _ O
labels _ _ O
to _ _ O
regular _ _ O
expressions _ _ O
( _ _ O
rule _ _ O
# _ _ O
1 _ _ O
of _ _ O
regular _ _ O
expression _ _ O
) _ _ O
Add _ _ O
necessary _ _ O
transition _ _ O
arrows _ _ O
Change _ _ O
multiple _ _ O
arrows _ _ O
or _ _ O
multiple _ _ O
labels _ _ O
to _ _ O
a _ _ O
single _ _ O
arrow _ _ O
while _ _ O
label _ _ O
is _ _ O
the _ _ O
union _ _ O
of _ _ O
the _ _ O
previous _ _ O
labels _ _ O
a _ _ O
a∪b _ _ O
b _ _ O
0 _ _ O
, _ _ O
1 _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
0∪1 _ _ O
Finite _ _ O
Automata _ _ O
05 _ _ O

Converting _ _ O
a _ _ O
DFA _ _ O
to _ _ O
a _ _ O
GNFA _ _ O
( _ _ O
Example _ _ O
) _ _ O
A _ _ O
DFA _ _ O
b _ _ O
a _ _ O
1 _ _ O
2 _ _ O
a _ _ O
b _ _ O
a _ _ O
b _ _ O
3 _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
05 _ _ O

Converting _ _ O
a _ _ O
DFA _ _ O
to _ _ O
a _ _ O
GNFA _ _ O
( _ _ O
Example _ _ O
) _ _ O
Add _ _ O
a _ _ O
new _ _ O
start _ _ O
state _ _ O
s _ _ O
b _ _ O
a _ _ O
1 _ _ O
2 _ _ O
a _ _ O
b _ _ O
s _ _ O
a _ _ O
b _ _ O
3 _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
05 _ _ O

Converting _ _ O
a _ _ O
DFA _ _ O
to _ _ O
a _ _ O
GNFA _ _ O
( _ _ O
Example _ _ O
) _ _ O
ε _ _ O
from _ _ O
s _ _ O
to _ _ O
the _ _ O
original _ _ O
start _ _ O
state _ _ O
b _ _ O
a _ _ O
1 _ _ O
2 _ _ O
ε _ _ O
a _ _ O
b _ _ O
s _ _ O
a _ _ O
b _ _ O
3 _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
05 _ _ O

Converting _ _ O
a _ _ O
DFA _ _ O
to _ _ O
a _ _ O
GNFA _ _ O
( _ _ O
Example _ _ O
) _ _ O
Add _ _ O
a _ _ O
new _ _ O
accept _ _ O
state _ _ O
a _ _ O
b _ _ O
a _ _ O
1 _ _ O
2 _ _ O
ε _ _ O
a _ _ O
b _ _ O
s _ _ O
a _ _ O
b _ _ O
3 _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
05 _ _ O
a _ _ O

Converting _ _ O
a _ _ O
DFA _ _ O
to _ _ O
a _ _ O
GNFA _ _ O
( _ _ O
Example _ _ O
) _ _ O
ε _ _ O
from _ _ O
all _ _ O
accepts _ _ O
state _ _ O
to _ _ O
a _ _ O
b _ _ O
a _ _ O
1 _ _ O
2 _ _ O
ε _ _ O
ε _ _ O
a _ _ O
b _ _ O
s _ _ O
3 _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
a _ _ O
a _ _ O
b _ _ O
ε _ _ O
Finite _ _ O
Automata _ _ O
05 _ _ O

Converting _ _ O
a _ _ O
DFA _ _ O
to _ _ O
a _ _ O
GNFA _ _ O
( _ _ O
Example _ _ O
) _ _ O
All _ _ O
original _ _ O
accept _ _ O
states _ _ O
to _ _ O
non-accept _ _ O
state _ _ O
b _ _ O
a _ _ O
1 _ _ O
2 _ _ O
ε _ _ O
ε _ _ O
a _ _ O
b _ _ O
s _ _ O
3 _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
a _ _ O
a _ _ O
b _ _ O
ε _ _ O
Finite _ _ O
Automata _ _ O
05 _ _ O

GNFA _ _ O
to _ _ O
Regular _ _ O
Expression _ _ O
Note _ _ O
that _ _ O
by _ _ O
converting _ _ O
a _ _ O
DFA _ _ O
and _ _ O
an _ _ O
equivalent _ _ O
GNFA _ _ B-Concept
, _ _ O
the _ _ O
language _ _ O
of _ _ O
the _ _ O
machine _ _ O
remain _ _ O
unchanged _ _ O
Next _ _ O
, _ _ O
we _ _ O
are _ _ O
going _ _ O
to _ _ O
remove _ _ O
original _ _ O
states _ _ O
of _ _ O
DFA _ _ O
one _ _ O
at _ _ O
a _ _ O
time _ _ O
until _ _ O
there _ _ O
are _ _ O
only _ _ O
two _ _ O
states _ _ O
left _ _ O
When _ _ O
a _ _ O
state _ _ O
is _ _ O
removed _ _ O
, _ _ O
we _ _ O
have _ _ O
to _ _ O
make _ _ O
sure _ _ O
that _ _ O
the _ _ O
language _ _ O
of _ _ O
the _ _ O
machine _ _ O
is _ _ O
not _ _ O
changed _ _ O
The _ _ O
new _ _ O
start _ _ O
state _ _ O
s _ _ O
and _ _ O
the _ _ O
new _ _ O
accept _ _ O
state _ _ O
a _ _ O
Example _ _ O
: _ _ O
3−state _ _ O
DFA _ _ O
5−state _ _ O
GNFA _ _ O
4−state _ _ O
GNFA _ _ O
regular _ _ O
expression _ _ O
2−state _ _ O
GNFA _ _ O
3−state _ _ O
GNFA _ _ O
The _ _ O
transition _ _ O
from _ _ O
s _ _ O
to _ _ O
a _ _ O
is _ _ O
a _ _ O
regular _ _ O
expression _ _ O
that _ _ O
expresses _ _ O
the _ _ O
language _ _ O
of _ _ O
the _ _ O
original _ _ O
DFA _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
05 _ _ O

Reducing _ _ O
Number _ _ O
of _ _ O
States _ _ O
of _ _ O
GNFA _ _ O
Removing _ _ O
qrip _ _ O
qi _ _ O
R4 _ _ O
R1 _ _ O
qj _ _ O
R3 _ _ O
qrip _ _ O
R2 _ _ O
How _ _ O
to _ _ O
go _ _ O
from _ _ O
qi _ _ O
to _ _ O
qj _ _ O
? _ _ O
qi _ _ O
→ _ _ O
qj _ _ O
using _ _ O
a _ _ O
string _ _ O
in _ _ O
R4 _ _ O
qi _ _ O
→ _ _ O
qrip _ _ O
→ _ _ O
qj _ _ O
qi _ _ O
→ _ _ O
qrip _ _ O
using _ _ O
a _ _ O
string _ _ O
in _ _ O
R1 _ _ O
qrip _ _ O
→ _ _ O
qrip _ _ O
using _ _ O
a _ _ O
string _ _ O
in _ _ O
R2 _ _ O
any _ _ O
number _ _ O
of _ _ O
times _ _ O
( _ _ O
R2∗ _ _ O
) _ _ O
qrip _ _ O
→ _ _ O
qj _ _ O
using _ _ O
a _ _ O
string _ _ O
in _ _ O
R3 _ _ O
From _ _ O
qi _ _ O
to _ _ O
qj _ _ O
by _ _ O
any _ _ O
strings _ _ O
in _ _ O
R1 _ _ O
R2∗ _ _ O
R3 _ _ O
∪ _ _ O
R4 _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
05 _ _ O

Reducing _ _ O
Number _ _ O
of _ _ O
States _ _ O
of _ _ O
GNFA _ _ O
Removing _ _ O
qrip _ _ O
qi _ _ O
R4 _ _ O
qj _ _ O
R3 _ _ O
R1 _ _ O
qi _ _ O
R1 _ _ O
R2 _ _ O
∗ _ _ O
R3 _ _ O
∪ _ _ O
R4 _ _ O
qj _ _ O
qrip _ _ O
R2 _ _ O
To _ _ O
remove _ _ O
qrip _ _ O
1 _ _ O
Search _ _ O
for _ _ O
all _ _ O
possible _ _ O
paths _ _ O
from _ _ O
a _ _ O
state _ _ O
q _ _ O
to _ _ O
qrip _ _ O
and _ _ O
to _ _ O
a _ _ O
state _ _ O
r _ _ O
q _ _ O
→ _ _ O
qrip _ _ O
→ _ _ O
r _ _ O
2 _ _ O
Turn _ _ O
all _ _ O
paths _ _ O
from _ _ O
previous _ _ O
step _ _ O
to _ _ O
regular _ _ O
expressions _ _ O
Remove _ _ O
qrip _ _ O
which _ _ O
results _ _ O
in _ _ O
q _ _ O
→ _ _ O
r _ _ O
Insert _ _ O
paths _ _ O
q _ _ O
→ _ _ O
r _ _ O
back _ _ O
with _ _ O
their _ _ O
regular _ _ O
expressions _ _ O
3 _ _ O
4 _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
05 _ _ O

Example _ _ O
DFA _ _ O
1 _ _ O
a _ _ O
b _ _ O
2 _ _ O
a _ _ O
, _ _ O
b _ _ O
{ _ _ O
w _ _ O
| _ _ O
w _ _ O
contains _ _ O
at _ _ O
least _ _ O
one _ _ O
b _ _ O
} _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
05 _ _ O

Example _ _ O
DFA _ _ O
to _ _ O
GNFA _ _ O
ε _ _ O
1 _ _ O
a _ _ O
s _ _ O
1 _ _ O
b _ _ O
a _ _ O
b _ _ O
ε _ _ O
2 _ _ O
a _ _ O
, _ _ O
b _ _ O
a _ _ O
2 _ _ O
{ _ _ O
w _ _ O
| _ _ O
w _ _ O
contains _ _ O
at _ _ O
least _ _ O
one _ _ O
b _ _ O
} _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
05 _ _ O
aUb _ _ O

Example _ _ O
Get _ _ O
rid _ _ O
of _ _ O
state _ _ O
2 _ _ O
ε _ _ O
1 _ _ O
s _ _ O
a _ _ O
1 _ _ O
a _ _ O
b _ _ O
b _ _ O
ε _ _ O
2 _ _ O
a _ _ O
, _ _ O
b _ _ O
a _ _ O
2 _ _ O
ε _ _ O
s _ _ O
1 _ _ O
a _ _ O
b _ _ O
( _ _ O
a _ _ O
U _ _ O
b _ _ O
) _ _ O
* _ _ O
a _ _ O
{ _ _ O
w _ _ O
| _ _ O
w _ _ O
contains _ _ O
at _ _ O
least _ _ O
one _ _ O
b _ _ O
} _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
05 _ _ O
aUb _ _ O

Example _ _ O
Get _ _ O
rid _ _ O
of _ _ O
state _ _ O
1 _ _ O
ε _ _ O
1 _ _ O
s _ _ O
a _ _ O
1 _ _ O
b _ _ O
a _ _ O
b _ _ O
ε _ _ O
a _ _ O
, _ _ O
b _ _ O
2 _ _ O
a _ _ O
2 _ _ O
ε _ _ O
s _ _ O
1 _ _ O
a _ _ O
s _ _ O
a*b _ _ O
( _ _ O
a _ _ O
U _ _ O
b _ _ O
) _ _ O
* _ _ O
b _ _ O
( _ _ O
a _ _ O
U _ _ O
b _ _ O
) _ _ O
* _ _ O
a _ _ O
a _ _ O
{ _ _ O
w _ _ O
| _ _ O
w _ _ O
contains _ _ O
at _ _ O
least _ _ O
one _ _ O
b _ _ O
} _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
05 _ _ O
aUb _ _ O

Example _ _ O
DFA _ _ O
to _ _ O
GNFA _ _ O
b _ _ O
b _ _ O
a _ _ O
a _ _ O
1 _ _ O
2 _ _ O
1 _ _ O
b _ _ O
a _ _ O
b _ _ O
2 _ _ O
ε _ _ O
a _ _ O
b _ _ O
s _ _ O
3 _ _ O
Finite _ _ O
Automata _ _ O
05 _ _ O
a _ _ O
a _ _ O
b _ _ O
3 _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
ε _ _ O
a _ _ O
ε _ _ O

Example _ _ O
Get _ _ O
rid _ _ O
of _ _ O
state _ _ O
1 _ _ O
aa _ _ O
U _ _ O
b _ _ O
b _ _ O
a _ _ O
1 _ _ O
2 _ _ O
ε _ _ O
2 _ _ O
a _ _ O
a _ _ O
b _ _ O
3 _ _ O
ε _ _ O
ab _ _ O
b _ _ O
s _ _ O
a _ _ O
ε _ _ O
a _ _ O
s _ _ O
ba _ _ O
U _ _ O
a _ _ O
b _ _ O
ε _ _ O
3 _ _ O
bb _ _ O
Paths _ _ O
that _ _ O
go _ _ O
through _ _ O
state _ _ O
1 _ _ O
( _ _ O
q _ _ O
→ _ _ O
1 _ _ O
→ _ _ O
r _ _ O
) _ _ O
s→1→2 _ _ O
s→1→3 _ _ O
2→1→2 _ _ O
2→1→3 _ _ O
3→1→2 _ _ O
3→1→3 _ _ O
εa _ _ O
= _ _ O
a _ _ O
εb _ _ O
= _ _ O
b _ _ O
aa _ _ O
ab _ _ O
ba _ _ O
bb _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
05 _ _ O
ε _ _ O
a _ _ O

Example _ _ O
Get _ _ O
rid _ _ O
of _ _ O
state _ _ O
2 _ _ O
aa _ _ O
U _ _ O
b _ _ O
a _ _ O
( _ _ O
aa _ _ O
U _ _ O
b _ _ O
) _ _ O
* _ _ O
s _ _ O
2 _ _ O
a _ _ O
a _ _ O
ε _ _ O
ab _ _ O
s _ _ O
ba _ _ O
U _ _ O
a _ _ O
b _ _ O
3 _ _ O
a _ _ O
( _ _ O
ba _ _ O
U _ _ O
a _ _ O
) _ _ O
( _ _ O
aa _ _ O
U _ _ O
b _ _ O
) _ _ O
* _ _ O
U _ _ O
ε _ _ O
a _ _ O
( _ _ O
aa _ _ O
U _ _ O
b _ _ O
) _ _ O
*ab _ _ O
U _ _ O
b _ _ O
ε _ _ O
3 _ _ O
bb _ _ O
( _ _ O
ba _ _ O
U _ _ O
a _ _ O
) _ _ O
( _ _ O
aa _ _ O
U _ _ O
b _ _ O
) _ _ O
*ab _ _ O
U _ _ O
bb _ _ O
Paths _ _ O
that _ _ O
go _ _ O
through _ _ O
state _ _ O
2 _ _ O
( _ _ O
q _ _ O
→ _ _ O
2 _ _ O
→ _ _ O
r _ _ O
) _ _ O
s→2→a _ _ O
s→2→3 _ _ O
3→2→a _ _ O
3→2→3 _ _ O
a _ _ O
( _ _ O
aa _ _ O
∪ _ _ O
b _ _ O
) _ _ O
∗ _ _ O
ε _ _ O
= _ _ O
a _ _ O
( _ _ O
aa _ _ O
∪ _ _ O
b _ _ O
) _ _ O
∗ _ _ O
a _ _ O
( _ _ O
aa _ _ O
∪ _ _ O
b _ _ O
) _ _ O
∗ _ _ O
ab _ _ O
( _ _ O
ba _ _ O
∪ _ _ O
a _ _ O
) _ _ O
( _ _ O
aa _ _ O
∪ _ _ O
b _ _ O
) _ _ O
∗ _ _ O
ε _ _ O
= _ _ O
( _ _ O
ba _ _ O
∪ _ _ O
a _ _ O
) _ _ O
( _ _ O
aa _ _ O
∪ _ _ O
b _ _ O
) _ _ O
∗ _ _ O
( _ _ O
ba _ _ O
∪ _ _ O
a _ _ O
) _ _ O
( _ _ O
aa _ _ O
∪ _ _ O
b _ _ O
) _ _ O
∗ _ _ O
ab _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
05 _ _ O

Example _ _ O
Get _ _ O
rid _ _ O
of _ _ O
state _ _ O
3 _ _ O
a _ _ O
( _ _ O
aa _ _ O
U _ _ O
b _ _ O
) _ _ O
* _ _ O
s _ _ O
a _ _ O
a _ _ O
( _ _ O
aa _ _ O
U _ _ O
b _ _ O
) _ _ O
*ab _ _ O
U _ _ O
b _ _ O
( _ _ O
ba _ _ O
U _ _ O
a _ _ O
) _ _ O
( _ _ O
aa _ _ O
U _ _ O
b _ _ O
) _ _ O
* _ _ O
U _ _ O
ε _ _ O
s _ _ O
a _ _ O
3 _ _ O
( _ _ O
a _ _ O
( _ _ O
aa _ _ O
U _ _ O
b _ _ O
) _ _ O
*ab _ _ O
U _ _ O
b _ _ O
) _ _ O
( _ _ O
( _ _ O
ba _ _ O
U _ _ O
a _ _ O
) _ _ O
( _ _ O
aa _ _ O
U _ _ O
b _ _ O
) _ _ O
*ab _ _ O
U _ _ O
bb _ _ O
) _ _ O
* _ _ O
( _ _ O
( _ _ O
ba _ _ O
U _ _ O
a _ _ O
) _ _ O
( _ _ O
aa _ _ O
U _ _ O
b _ _ O
) _ _ O
* _ _ O
U _ _ O
ε _ _ O
) _ _ O
U _ _ O
a _ _ O
( _ _ O
aa _ _ O
U _ _ O
b _ _ O
) _ _ O
* _ _ O
( _ _ O
ba _ _ O
U _ _ O
a _ _ O
) _ _ O
( _ _ O
aa _ _ O
U _ _ O
b _ _ O
) _ _ O
*ab _ _ O
U _ _ O
bb _ _ O
Paths _ _ O
that _ _ O
go _ _ O
through _ _ O
state _ _ O
3 _ _ O
( _ _ O
q _ _ O
→ _ _ O
3 _ _ O
→ _ _ O
r _ _ O
) _ _ O
s→3→a _ _ O
( _ _ O
a _ _ O
( _ _ O
aa∪b _ _ O
) _ _ O
∗ _ _ O
ab∪b _ _ O
) _ _ O
( _ _ O
( _ _ O
ba∪a _ _ O
) _ _ O
( _ _ O
aa∪b _ _ O
) _ _ O
∗ _ _ O
ab∪bb _ _ O
) _ _ O
∗ _ _ O
( _ _ O
( _ _ O
ba∪a _ _ O
) _ _ O
( _ _ O
aa∪b _ _ O
) _ _ O
∗ _ _ O
∪ε _ _ O
) _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
05 _ _ O

Theorem _ _ O
1.54 _ _ O
Earlier _ _ O
, _ _ O
we _ _ O
show _ _ O
that _ _ O
every _ _ O
regular _ _ B-Concept
expression _ _ I-Concept
expresses _ _ O
a _ _ O
regular _ _ B-Concept
language _ _ I-Concept
We _ _ O
just _ _ O
show _ _ O
that _ _ O
every _ _ O
state _ _ O
diagram _ _ O
of _ _ O
a _ _ O
DFA _ _ O
can _ _ O
be _ _ O
converted _ _ O
into _ _ O
an _ _ O
equivalent _ _ O
regular _ _ O
expression _ _ O
Theorem _ _ O
( _ _ O
1.54 _ _ O
) _ _ O
A _ _ O
language _ _ O
is _ _ O
regular _ _ B-Concept
if _ _ O
and _ _ O
only _ _ O
if _ _ O
some _ _ O
regular _ _ B-Concept
expression _ _ I-Concept
describes _ _ O
it _ _ O
. _ _ O
Problem _ _ O
: _ _ O
If _ _ O
you _ _ O
can _ _ O
not _ _ O
express _ _ O
a _ _ O
language _ _ O
using _ _ O
a _ _ O
regular _ _ O
expression _ _ O
, _ _ O
it _ _ O
does _ _ O
not _ _ O
mean _ _ O
it _ _ O
is _ _ O
not _ _ O
regular _ _ O
The _ _ O
language _ _ O
is _ _ O
so _ _ O
complicate _ _ O
that _ _ O
it _ _ O
needs _ _ O
a _ _ O
very _ _ O
long _ _ O
and _ _ O
complicate _ _ O
regular _ _ O
expression _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
05 _ _ O

Finite _ _ B-Concept
Automaton _ _ I-Concept
and _ _ O
Algorithm _ _ B-Concept
For _ _ O
every _ _ O
finite _ _ B-Concept
automaton _ _ I-Concept
, _ _ O
there _ _ O
is _ _ O
an _ _ O
equivalent _ _ O
algorithm _ _ B-Concept
For _ _ O
example _ _ O
, _ _ O
consider _ _ O
a _ _ O
machine _ _ O
where _ _ O
its _ _ O
language _ _ O
is _ _ O
the _ _ O
set _ _ O
of _ _ O
all _ _ O
strings _ _ O
over _ _ O
0 _ _ O
and _ _ O
1 _ _ O
that _ _ O
consist _ _ O
of _ _ O
an _ _ O
odd _ _ O
number _ _ O
of _ _ O
1s _ _ O
. _ _ O
0 _ _ O
0 _ _ O
1 _ _ O
q0 _ _ O
q1 _ _ O
1 _ _ O
The _ _ O
above _ _ O
machine _ _ O
can _ _ O
be _ _ O
converted _ _ O
into _ _ O
a _ _ O
Java _ _ O
method _ _ O
that _ _ O
Takes _ _ O
a _ _ O
string _ _ O
of _ _ O
0s _ _ O
and _ _ O
1s _ _ O
as _ _ O
an _ _ O
argument _ _ O
Returns _ _ O
true _ _ O
( _ _ O
accept _ _ O
) _ _ O
of _ _ O
the _ _ O
input _ _ O
string _ _ O
consisting _ _ O
of _ _ O
an _ _ O
odd _ _ O
number _ _ O
of _ _ O
1s _ _ O
. _ _ O
Otherwise _ _ O
, _ _ O
returns _ _ O
false _ _ O
( _ _ O
reject _ _ O
) _ _ O
. _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
05 _ _ O

Finite _ _ O
Automata _ _ O
and _ _ O
Algorithm _ _ O
public _ _ O
boolean _ _ O
isAccepted _ _ O
( _ _ O
String _ _ O
input _ _ O
) _ _ O
{ _ _ O
String _ _ O
state _ _ O
= _ _ O
" _ _ O
q0 _ _ O
" _ _ O
; _ _ O
int _ _ O
length _ _ O
= _ _ O
input.length _ _ O
( _ _ O
) _ _ O
; _ _ O
for _ _ O
( _ _ O
int _ _ O
i _ _ O
= _ _ O
0 _ _ O
; _ _ O
i _ _ O
< _ _ O
length _ _ O
; _ _ O
i++ _ _ O
) _ _ O
{ _ _ O
char _ _ O
c _ _ O
= _ _ O
input.charAt _ _ O
( _ _ O
i _ _ O
) _ _ O
; _ _ O
if _ _ O
( _ _ O
state.equals _ _ O
( _ _ O
"q0 _ _ O
" _ _ O
) _ _ O
& _ _ O
& _ _ O
c _ _ O
= _ _ O
= _ _ O
’ _ _ O
0 _ _ O
’ _ _ O
) _ _ O
state _ _ O
= _ _ O
" _ _ O
q0 _ _ O
" _ _ O
; _ _ O
else _ _ O
if _ _ O
( _ _ O
state.equals _ _ O
( _ _ O
"q0 _ _ O
" _ _ O
) _ _ O
& _ _ O
& _ _ O
c _ _ O
= _ _ O
= _ _ O
’ _ _ O
1 _ _ O
’ _ _ O
) _ _ O
state _ _ O
= _ _ O
" _ _ O
q1 _ _ O
" _ _ O
; _ _ O
else _ _ O
if _ _ O
( _ _ O
state.equals _ _ O
( _ _ O
"q1 _ _ O
" _ _ O
) _ _ O
& _ _ O
& _ _ O
c _ _ O
= _ _ O
= _ _ O
’ _ _ O
0 _ _ O
’ _ _ O
) _ _ O
state _ _ O
= _ _ O
" _ _ O
q1 _ _ O
" _ _ O
; _ _ O
else _ _ O
if _ _ O
( _ _ O
state.equals _ _ O
( _ _ O
"q1 _ _ O
" _ _ O
) _ _ O
& _ _ O
& _ _ O
c _ _ O
= _ _ O
= _ _ O
’ _ _ O
1 _ _ O
’ _ _ O
) _ _ O
state _ _ O
= _ _ O
" _ _ O
q0 _ _ O
" _ _ O
; _ _ O
} _ _ O
if _ _ O
( _ _ O
state.equals _ _ O
( _ _ O
"q1 _ _ O
" _ _ O
) _ _ O
) _ _ O
return _ _ O
true _ _ O
; _ _ O
else _ _ O
return _ _ O
false _ _ O
; _ _ O
} _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
05 _ _ O

Limitation _ _ O
of _ _ O
Finite _ _ B-Concept
Automaton _ _ I-Concept
Finite _ _ B-Concept
Automaton _ _ I-Concept
only _ _ O
captures _ _ O
a _ _ O
small _ _ O
subset _ _ O
of _ _ O
algorithms _ _ O
Problems _ _ O
that _ _ O
associated _ _ O
with _ _ O
Regular _ _ B-Concept
languages _ _ I-Concept
Not _ _ O
all _ _ O
language _ _ O
can _ _ O
be _ _ O
recognized _ _ O
by _ _ O
a _ _ O
finite _ _ O
state _ _ O
machine _ _ O
Such _ _ O
languages _ _ O
is _ _ O
called _ _ O
Nonregular _ _ B-Concept
Languages _ _ I-Concept
Example _ _ O
: _ _ O
B _ _ O
= _ _ O
{ _ _ O
0n _ _ O
1n _ _ O
| _ _ O
n _ _ O
≥ _ _ O
0 _ _ O
} _ _ O
B _ _ O
= _ _ O
{ _ _ O
ε _ _ O
, _ _ O
01 _ _ O
, _ _ O
0011 _ _ O
, _ _ O
000111 _ _ O
, _ _ O
. _ _ O
. _ _ O
. _ _ O
} _ _ O
The _ _ O
machine _ _ O
need _ _ O
to _ _ O
be _ _ O
able _ _ O
to _ _ O
remember _ _ O
how _ _ O
many _ _ O
0s _ _ O
and _ _ O
how _ _ O
many _ _ O
1s _ _ O
it _ _ O
sees _ _ O
so _ _ O
far _ _ O
We _ _ O
need _ _ O
an _ _ O
infinite _ _ O
number _ _ O
of _ _ O
states _ _ O
If _ _ O
you _ _ O
can _ _ O
not _ _ O
express _ _ O
a _ _ O
language _ _ O
using _ _ O
regular _ _ O
expression _ _ O
, _ _ O
it _ _ O
does _ _ O
not _ _ O
mean _ _ O
it _ _ O
is _ _ O
not _ _ O
a _ _ O
regular _ _ O
language _ _ O
Too _ _ O
complicate _ _ O
and _ _ O
requires _ _ O
a _ _ O
huge _ _ O
number _ _ O
of _ _ O
states _ _ O
We _ _ O
need _ _ O
a _ _ O
way _ _ O
to _ _ O
determine _ _ O
whether _ _ O
a _ _ O
language _ _ O
is _ _ O
not _ _ O
regular _ _ O
. _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
05 _ _ O



