['train_set', 'labeled']|cs1550|lec15
-DOCSTART- -X- -X- O

Introduction _ _ O
to _ _ O
Operating _ _ O
Systems _ _ O
CS _ _ O
/ _ _ O
COE _ _ O
1550 _ _ O
Fall _ _ O
2021 _ _ O
Sherif _ _ O
Khattab _ _ O
ksm73@pitt.edu _ _ O
( _ _ O
Some _ _ O
slides _ _ O
are _ _ O
from _ _ O
Silberschatz _ _ O
, _ _ O
Galvin _ _ O
and _ _ O
Gagne _ _ O
© _ _ O
2013 _ _ O
) _ _ O

Announcements _ _ O
• _ _ O
Upcoming _ _ O
deadlines _ _ O
: _ _ O
• _ _ O
10 _ _ O
/ _ _ O
25 _ _ O
: _ _ O
Project _ _ O
2 _ _ O
( _ _ O
extended _ _ O
deadline _ _ O
) _ _ O
• _ _ O
10 _ _ O
/ _ _ O
29 _ _ O
: _ _ O
Homework _ _ O
6 _ _ O
• _ _ O
11 _ _ O
/ _ _ O
8 _ _ O
: _ _ O
Lab _ _ O
3 _ _ O
CS _ _ O
/ _ _ O
COE _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
2 _ _ O

Last _ _ O
Lecture _ _ O
… _ _ O
• _ _ O
Deadlock _ _ B-Concept
prevention _ _ I-Concept
CS _ _ O
/ _ _ O
COE _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
3 _ _ O

Muddiest _ _ O
Points _ _ O
( _ _ O
Banker _ _ B-Concept
’s _ _ I-Concept
Algorithm _ _ I-Concept
) _ _ O
• _ _ O
what _ _ O
are _ _ O
the _ _ O
three _ _ O
steps _ _ O
of _ _ O
the _ _ O
bankers _ _ B-Concept
algorithm _ _ I-Concept
? _ _ O
• _ _ O
Could _ _ O
you _ _ O
go _ _ O
over _ _ O
the _ _ O
Bankers _ _ B-Concept
algorithm _ _ I-Concept
example _ _ O
again _ _ O
? _ _ O
• _ _ O
For _ _ O
the _ _ O
safe _ _ O
/ _ _ O
unsafe _ _ O
algorithm _ _ O
, _ _ O
does _ _ O
that _ _ O
mean _ _ O
we _ _ O
need _ _ O
to _ _ O
know _ _ O
the _ _ O
resources _ _ O
that _ _ O
are _ _ O
available _ _ O
, _ _ O
keep _ _ O
track _ _ O
of _ _ O
the _ _ O
used _ _ O
ones _ _ O
, _ _ O
and _ _ O
also _ _ O
know _ _ O
how _ _ O
many _ _ O
each _ _ O
process _ _ O
will _ _ O
have _ _ O
in _ _ O
the _ _ O
future _ _ O
? _ _ O
• _ _ O
It _ _ O
seems _ _ O
like _ _ O
this _ _ O
detection _ _ O
algorithm _ _ O
has _ _ O
a _ _ O
lot _ _ O
of _ _ O
overhead _ _ B-Concept
. _ _ O
Are _ _ O
there _ _ O
any _ _ O
ways _ _ O
of _ _ O
reducing _ _ O
the _ _ O
time _ _ O
spent _ _ O
doing _ _ O
these _ _ O
checks _ _ O
• _ _ O
can _ _ O
we _ _ O
run _ _ O
the _ _ O
banker _ _ B-Concept
's _ _ I-Concept
algorithm _ _ I-Concept
or _ _ O
some _ _ O
alternative _ _ O
as _ _ O
a _ _ O
static _ _ O
analysis _ _ O
tool _ _ O
? _ _ O
like _ _ O
build _ _ O
this _ _ O
kind _ _ O
of _ _ O
check _ _ O
into _ _ O
the _ _ O
compiler _ _ O
or _ _ O
something _ _ O
instead _ _ O
of _ _ O
running _ _ O
it _ _ O
for _ _ O
each _ _ O
request _ _ O
during _ _ O
runtime _ _ O
• _ _ O
If _ _ O
a _ _ O
state _ _ O
is _ _ O
determined _ _ O
unsafe _ _ O
, _ _ O
does _ _ O
that _ _ O
always _ _ O
mean _ _ O
that _ _ O
the _ _ O
resource _ _ O
will _ _ O
not _ _ O
be _ _ O
allocated _ _ O
or _ _ O
is _ _ O
it _ _ O
possible _ _ O
to _ _ O
still _ _ O
allocate _ _ O
it _ _ O
and _ _ O
take _ _ O
the _ _ O
risk _ _ O
• _ _ O
What _ _ O
does _ _ O
the _ _ O
E _ _ O
, _ _ O
P _ _ O
and _ _ O
A _ _ O
stand _ _ O
for _ _ O
in _ _ O
the _ _ O
bankers _ _ B-Concept
algorithm _ _ I-Concept
• _ _ O
if _ _ O
bankers _ _ B-Concept
algorithm _ _ I-Concept
finds _ _ O
a _ _ O
valid _ _ O
path _ _ O
and _ _ O
grants _ _ O
the _ _ O
resource _ _ O
, _ _ O
can _ _ O
a _ _ O
deadlock _ _ B-Concept
still _ _ O
occur _ _ O
if _ _ O
a _ _ O
different _ _ O
path _ _ O
is _ _ O
followed _ _ O
than _ _ O
the _ _ O
one _ _ O
bankers _ _ B-Concept
algorithm _ _ I-Concept
found _ _ O
? _ _ O
• _ _ O
I _ _ O
'm _ _ O
a _ _ O
little _ _ O
confused _ _ O
on _ _ O
what _ _ O
the _ _ O
want _ _ O
and _ _ O
hold _ _ O
tables _ _ O
represent _ _ O
• _ _ O
Why _ _ O
is _ _ O
the _ _ O
runtime _ _ O
n^2 _ _ O
* _ _ O
n _ _ O
for _ _ O
the _ _ O
wait _ _ O
algorithm _ _ O
• _ _ O
What _ _ O
is _ _ O
the _ _ O
difference _ _ O
between _ _ O
wanted _ _ O
and _ _ O
max _ _ O
again _ _ O
? _ _ O
• _ _ O
Tracing _ _ O
bankers _ _ O
algorithms _ _ O
with _ _ O
multiple _ _ O
resource _ _ O
instances _ _ O
CS _ _ O
/ _ _ O
COE _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
4 _ _ O

Muddiest _ _ O
Points _ _ O
( _ _ O
Resource _ _ B-Concept
Trajectory _ _ I-Concept
) _ _ O
• _ _ O
the _ _ O
l1 _ _ O
, _ _ O
l2 _ _ O
l3 _ _ O
... _ _ O
in _ _ O
the _ _ O
resource _ _ B-Concept
trajectory _ _ I-Concept
graph _ _ O
• _ _ O
resource _ _ B-Concept
trajectory _ _ I-Concept
graphs _ _ O
with _ _ O
more _ _ O
than _ _ O
2 _ _ O
resources _ _ O
• _ _ O
How _ _ O
to _ _ O
prevent _ _ O
a _ _ O
resource _ _ B-Concept
trajectory _ _ I-Concept
that _ _ O
would _ _ O
cause _ _ O
a _ _ O
deadlock _ _ B-Concept
CS _ _ O
/ _ _ O
COE _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
5 _ _ O

Muddiest _ _ O
Points _ _ O
( _ _ O
General _ _ O
Deadlock _ _ B-Concept
) _ _ O
• _ _ O
breaking _ _ O
circular _ _ B-Concept
wait _ _ I-Concept
seems _ _ O
almost _ _ O
always _ _ O
better _ _ O
than _ _ O
breaking _ _ O
hold _ _ B-Concept
and _ _ I-Concept
wait _ _ I-Concept
since _ _ O
breaking _ _ O
hold _ _ B-Concept
and _ _ I-Concept
wait _ _ I-Concept
requires _ _ O
you _ _ O
take _ _ O
all _ _ O
resources _ _ O
you _ _ O
need _ _ O
whereas _ _ O
breaking _ _ O
circular _ _ B-Concept
wait _ _ I-Concept
only _ _ O
makes _ _ O
you _ _ O
take _ _ O
some _ _ O
extra _ _ O
resources _ _ O
before _ _ O
you _ _ O
need _ _ O
them _ _ O
• _ _ O
Starvation _ _ B-Concept
vs _ _ O
deadlock _ _ B-Concept
• _ _ O
Which _ _ O
detection _ _ O
alg _ _ O
is _ _ O
fastest _ _ O
? _ _ O
• _ _ O
Where _ _ O
do _ _ O
deadlock _ _ B-Concept
detection _ _ I-Concept
algorithms _ _ O
exist _ _ O
? _ _ O
( _ _ O
Operating _ _ O
system _ _ O
or _ _ O
external _ _ O
application _ _ O
. _ _ O
) _ _ O
When _ _ O
do _ _ O
they _ _ O
run _ _ O
? _ _ O
Runtime _ _ O
or _ _ O
compile _ _ O
time _ _ O
? _ _ O
Also _ _ O
, _ _ O
how _ _ O
do _ _ O
deadlock _ _ B-Concept
avoidance _ _ I-Concept
algorithms _ _ O
interfere _ _ O
to _ _ O
make _ _ O
sure _ _ O
a _ _ O
program _ _ O
does _ _ O
n’t _ _ O
deadlock _ _ B-Concept
? _ _ O
Are _ _ O
they _ _ O
integrated _ _ O
fully _ _ O
into _ _ O
the _ _ O
application _ _ O
? _ _ O
• _ _ O
how _ _ O
do _ _ O
we _ _ O
know _ _ O
what _ _ O
resources _ _ O
are _ _ O
available _ _ O
to _ _ O
use _ _ O
and _ _ O
the _ _ O
best _ _ O
way _ _ O
to _ _ O
choose _ _ O
who _ _ O
gets _ _ O
what _ _ O
resources _ _ O
• _ _ O
What _ _ O
is _ _ O
better _ _ O
practice _ _ O
, _ _ O
deadlock _ _ B-Concept
avoidance _ _ I-Concept
or _ _ O
deadlock _ _ B-Concept
detection _ _ I-Concept
? _ _ O
CS _ _ O
/ _ _ O
COE _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
6 _ _ O

Muddiest _ _ O
Points _ _ O
( _ _ O
Deadlock _ _ B-Concept
Prevention _ _ I-Concept
) _ _ O
• _ _ O
When _ _ O
checking _ _ O
a _ _ O
program _ _ O
to _ _ O
see _ _ O
it _ _ O
is _ _ O
free _ _ O
of _ _ O
deadlocks _ _ B-Concept
, _ _ O
you _ _ O
have _ _ O
to _ _ O
look _ _ O
for _ _ O
whether _ _ O
one _ _ O
of _ _ O
the _ _ O
four _ _ O
condtions _ _ O
is _ _ O
being _ _ O
broken _ _ O
somewhere _ _ O
? _ _ O
• _ _ O
Why _ _ O
do _ _ O
you _ _ O
only _ _ O
need _ _ O
to _ _ O
attack _ _ O
one _ _ O
of _ _ O
the _ _ O
4 _ _ O
conditions _ _ O
to _ _ O
prevent _ _ O
deadlock _ _ O
? _ _ O
• _ _ O
How _ _ O
to _ _ O
know _ _ O
which _ _ O
deadlock _ _ O
prevention _ _ O
technique _ _ O
to _ _ O
use _ _ O
. _ _ O
• _ _ O
How _ _ O
spooling _ _ B-Concept
works _ _ O
• _ _ O
What _ _ O
exactly _ _ O
is _ _ O
spooling _ _ B-Concept
? _ _ I-Concept
• _ _ O
Spooling _ _ B-Concept
in _ _ O
applications _ _ O
• _ _ O
When _ _ O
is _ _ O
it _ _ O
appropriate _ _ O
to _ _ O
spool _ _ B-Concept
? _ _ O
How _ _ O
do _ _ O
you _ _ O
know _ _ O
? _ _ O
• _ _ O
How _ _ O
non-resource _ _ B-Concept
deadlocks _ _ I-Concept
occur _ _ O
• _ _ O
In _ _ O
regard _ _ O
to _ _ O
attacking _ _ O
" _ _ O
no _ _ B-Concept
preemption _ _ I-Concept
" _ _ O
, _ _ O
how _ _ O
would _ _ O
you _ _ O
determine _ _ O
whether _ _ O
it _ _ O
's _ _ O
viable _ _ O
to _ _ O
take _ _ O
a _ _ O
resource _ _ O
away _ _ O
from _ _ O
a _ _ O
process _ _ O
? _ _ O
• _ _ O
how _ _ O
2 _ _ O
phase _ _ O
locking _ _ O
avoids _ _ O
the _ _ O
hold _ _ B-Concept
and _ _ I-Concept
wait _ _ I-Concept
condition _ _ O
? _ _ O
CS _ _ O
/ _ _ O
COE _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
7 _ _ O

Attacking _ _ O
Circular _ _ B-Concept
Wait _ _ I-Concept
CS _ _ O
/ _ _ O
COE _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
8 _ _ O

Spooling _ _ B-Concept
Example _ _ O
CS _ _ O
/ _ _ O
COE _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
9 _ _ O

Today _ _ O
… _ _ O
• _ _ O
CPU _ _ B-Concept
Scheduling _ _ I-Concept
CS _ _ O
/ _ _ O
COE _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
10 _ _ O



