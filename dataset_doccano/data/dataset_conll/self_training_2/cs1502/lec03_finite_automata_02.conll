self_training_2|cs1502|lec03_finite_automata_02
-DOCSTART- -X- -X- O

Finite _ _ O
Automata _ _ O
02 _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
02 _ _ O

Finite _ _ O
Automata _ _ O
The _ _ O
computational _ _ O
model _ _ O
called _ _ O
finite _ _ O
automata _ _ O
can _ _ O
be _ _ O
used _ _ O
to _ _ O
simulate _ _ O
a _ _ O
set _ _ O
of _ _ O
simple _ _ O
algorithms _ _ O
Check _ _ O
whether _ _ O
a _ _ O
string _ _ O
starts _ _ O
with _ _ O
010 _ _ O
Check _ _ O
whether _ _ O
a _ _ O
string _ _ O
ends _ _ O
with _ _ O
111 _ _ O
Check _ _ O
whether _ _ O
a _ _ O
string _ _ O
contains _ _ O
0101 _ _ O
as _ _ O
a _ _ O
substring _ _ O
Check _ _ O
whether _ _ O
a _ _ O
string _ _ O
contains _ _ O
substrings _ _ O
000 _ _ O
and _ _ O
111 _ _ O
where _ _ O
000 _ _ O
comes _ _ O
before _ _ O
111 _ _ O
It _ _ O
is _ _ O
a _ _ O
powerful _ _ O
tool _ _ O
in _ _ O
compiler _ _ O
Accept _ _ O
or _ _ O
reject _ _ O
your _ _ O
source _ _ O
code _ _ O
based _ _ O
on _ _ O
a _ _ O
programming _ _ O
syntax _ _ O
Example _ _ O
: _ _ O
the _ _ O
for _ _ O
statement _ _ O
: _ _ O
starts _ _ O
with _ _ O
for _ _ O
followed _ _ O
by _ _ O
( _ _ O
followed _ _ O
by _ _ O
assignment _ _ O
statement _ _ O
( _ _ O
s _ _ O
) _ _ O
followed _ _ O
by _ _ O
; _ _ O
followed _ _ O
by _ _ O
conditional _ _ O
statement _ _ O
( _ _ O
s _ _ O
) _ _ O
followed _ _ O
by _ _ O
; _ _ O
followed _ _ O
by _ _ O
assignment _ _ O
statement _ _ O
( _ _ O
s _ _ O
) _ _ O
followed _ _ O
by _ _ O
) _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
02 _ _ O

Formal _ _ O
Definition _ _ O
of _ _ O
Computation _ _ O
Let _ _ O
M _ _ O
= _ _ O
( _ _ O
Q _ _ O
, _ _ O
Σ _ _ O
, _ _ O
δ _ _ O
, _ _ O
q0 _ _ O
, _ _ O
F _ _ O
) _ _ O
be _ _ O
a _ _ O
finite _ _ O
automaton _ _ O
and _ _ O
let _ _ O
w _ _ O
= _ _ O
w1 _ _ O
w2 _ _ O
. _ _ O
. _ _ O
. _ _ O
wn _ _ O
be _ _ O
a _ _ O
string _ _ O
where _ _ O
each _ _ O
wi _ _ O
is _ _ O
a _ _ O
member _ _ O
of _ _ O
the _ _ O
alphabet _ _ O
Σ. _ _ O
M _ _ O
accepts _ _ O
w _ _ O
if _ _ O
a _ _ O
sequence _ _ O
of _ _ O
states _ _ O
r0 _ _ O
, _ _ O
r1 _ _ O
, _ _ O
. _ _ O
. _ _ O
. _ _ O
, _ _ O
rn _ _ O
in _ _ O
Q _ _ O
exists _ _ O
with _ _ O
three _ _ O
conditions _ _ O
: _ _ O
1 _ _ O
2 _ _ O
3 _ _ O
r0 _ _ O
= _ _ O
q _ _ O
0 _ _ O
δ _ _ O
( _ _ O
ri _ _ O
, _ _ O
wi+1 _ _ O
) _ _ O
= _ _ O
ri+1 _ _ O
, _ _ O
where _ _ O
i _ _ O
= _ _ O
0 _ _ O
, _ _ O
. _ _ O
. _ _ O
. _ _ O
, _ _ O
n _ _ O
− _ _ O
1 _ _ O
rn _ _ O
∈ _ _ O
F _ _ O
Think _ _ O
in _ _ O
terms _ _ O
of _ _ O
processing _ _ O
the _ _ O
input _ _ O
string _ _ O
w _ _ O
w _ _ O
w _ _ O
w _ _ O
w _ _ O
w _ _ O
wn−1 _ _ O
w _ _ O
r0 _ _ O
→1 _ _ O
r1 _ _ O
→2 _ _ O
r2 _ _ O
→3 _ _ O
r3 _ _ O
→4 _ _ O
r4 _ _ O
→5 _ _ O
. _ _ O
. _ _ O
. _ _ O
→ _ _ O
rn−1 _ _ O
→n _ _ O
rn _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
02 _ _ O

Regular _ _ O
Languages _ _ O
A _ _ O
language _ _ O
L _ _ O
over _ _ O
an _ _ O
alphabet _ _ O
Σ _ _ O
is _ _ O
said _ _ O
to _ _ O
be _ _ O
a _ _ O
regular _ _ O
language _ _ O
if _ _ O
some _ _ O
finite-state _ _ O
automaton _ _ O
recognizes _ _ O
it _ _ O
. _ _ O
Consider _ _ O
the _ _ O
following _ _ O
machine _ _ O
M _ _ O
: _ _ O
0 _ _ O
0 _ _ O
1 _ _ O
q0 _ _ O
q1 _ _ O
1 _ _ O
What _ _ O
is _ _ O
the _ _ O
language _ _ O
of _ _ O
this _ _ O
machine _ _ O
? _ _ O
L _ _ O
( _ _ O
M _ _ O
) _ _ O
= _ _ O
{ _ _ O
w _ _ O
| _ _ O
w _ _ O
contains _ _ O
an _ _ O
odd _ _ O
number _ _ O
of _ _ O
1s _ _ O
} _ _ O
“ _ _ O
The _ _ O
set _ _ O
of _ _ O
all _ _ O
strings _ _ O
consisting _ _ O
of _ _ O
an _ _ O
odd _ _ O
number _ _ O
of _ _ O
1s _ _ O
” _ _ O
is _ _ O
a _ _ O
regular _ _ O
language _ _ O
L _ _ O
( _ _ O
M _ _ O
) _ _ O
is _ _ O
a _ _ O
regular _ _ O
language _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
02 _ _ O

Regular _ _ O
Languages _ _ O
Why _ _ O
regular _ _ O
language _ _ O
is _ _ O
important _ _ O
in _ _ O
our _ _ O
discussion _ _ O
? _ _ O
Definition _ _ O
: _ _ O
A _ _ O
language _ _ O
is _ _ O
regular _ _ O
if _ _ O
some _ _ O
finite-state _ _ O
machines _ _ O
recognize _ _ O
it _ _ O
. _ _ O
If _ _ O
we _ _ O
can _ _ O
prove _ _ O
that _ _ O
a _ _ O
language _ _ O
is _ _ O
regular _ _ O
We _ _ O
must _ _ O
be _ _ O
able _ _ O
to _ _ O
construct _ _ O
a _ _ O
finite-state _ _ O
machine _ _ O
to _ _ O
recognize _ _ O
it _ _ O
It _ _ O
maybe _ _ O
hard _ _ O
to _ _ O
build _ _ O
but _ _ O
I _ _ O
know _ _ O
that _ _ O
it _ _ O
exists _ _ O
If _ _ O
we _ _ O
can _ _ O
prove _ _ O
that _ _ O
a _ _ O
language _ _ O
is _ _ O
not _ _ O
regular _ _ O
We _ _ O
can _ _ O
not _ _ O
construct _ _ O
a _ _ O
finite-state _ _ O
machine _ _ O
to _ _ O
recognize _ _ O
it _ _ O
This _ _ O
is _ _ O
an _ _ O
example _ _ O
of _ _ O
a _ _ O
limitation _ _ O
of _ _ O
this _ _ O
computational _ _ O
model _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
02 _ _ O

Problem _ _ O
and _ _ O
Language _ _ O
In _ _ O
theory _ _ O
of _ _ O
computation _ _ O
, _ _ O
a _ _ O
problem _ _ O
is _ _ O
represented _ _ O
as _ _ O
a _ _ O
language _ _ O
A _ _ O
problem _ _ O
of _ _ O
determining _ _ O
whether _ _ O
a _ _ O
string _ _ O
contains _ _ O
011 _ _ O
as _ _ O
a _ _ O
substring _ _ O
L _ _ O
( _ _ O
M _ _ O
) _ _ O
= _ _ O
{ _ _ O
x _ _ O
| _ _ O
x _ _ O
contains _ _ O
011 _ _ O
as _ _ O
a _ _ O
substring _ _ O
} _ _ O
We _ _ O
already _ _ O
see _ _ O
a _ _ O
Deterministic _ _ O
Finite _ _ O
Automaton _ _ O
( _ _ O
DFA _ _ O
) _ _ O
M _ _ O
that _ _ O
accepts _ _ O
all _ _ O
strings _ _ O
that _ _ O
contains _ _ O
011 _ _ O
as _ _ O
a _ _ O
substring _ _ O
and _ _ O
reject _ _ O
those _ _ O
that _ _ O
does _ _ O
not _ _ O
contain _ _ O
011 _ _ O
as _ _ O
a _ _ O
substring _ _ O
It _ _ O
means _ _ O
this _ _ O
problem _ _ O
is _ _ O
solvable _ _ O
by _ _ O
the _ _ O
algorithm _ _ O
captured _ _ O
by _ _ O
the _ _ O
previous _ _ O
DFA _ _ O
In _ _ O
case _ _ O
of _ _ O
algorithm _ _ O
in _ _ O
a _ _ O
form _ _ O
of _ _ O
DFA _ _ O
( _ _ O
not _ _ O
all _ _ O
algorithms _ _ O
) _ _ O
if _ _ O
L _ _ O
( _ _ O
M _ _ O
) _ _ O
is _ _ O
regular _ _ O
, _ _ O
the _ _ O
problem _ _ O
represented _ _ O
by _ _ O
L _ _ O
( _ _ O
M _ _ O
) _ _ O
is _ _ O
solvable _ _ O
if _ _ O
L _ _ O
( _ _ O
M _ _ O
) _ _ O
is _ _ O
not _ _ O
regular _ _ O
, _ _ O
no _ _ O
DFA _ _ O
exists _ _ O
, _ _ O
the _ _ O
problem _ _ O
represented _ _ O
by _ _ O
L _ _ O
( _ _ O
M _ _ O
) _ _ O
is _ _ O
unsolvable _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
02 _ _ O

Problems _ _ O
and _ _ O
Languages _ _ O
Solvable _ _ O
problems _ _ O
that _ _ O
we _ _ O
see _ _ O
so _ _ O
far _ _ O
The _ _ O
problem _ _ O
of _ _ O
determining _ _ O
whether _ _ O
a _ _ O
string _ _ O
ends _ _ O
with _ _ O
a _ _ O
1 _ _ O
{ _ _ O
x _ _ O
| _ _ O
x _ _ O
ends _ _ O
with _ _ O
a _ _ O
1 _ _ O
} _ _ O
The _ _ O
problem _ _ O
of _ _ O
determining _ _ O
whether _ _ O
a _ _ O
string _ _ O
is _ _ O
an _ _ O
empty _ _ O
string _ _ O
or _ _ O
ends _ _ O
in _ _ O
a _ _ O
0 _ _ O
{ _ _ O
x _ _ O
| _ _ O
x _ _ O
is _ _ O
an _ _ O
empty _ _ O
string _ _ O
or _ _ O
ends _ _ O
in _ _ O
a _ _ O
0 _ _ O
} _ _ O
The _ _ O
problem _ _ O
of _ _ O
determining _ _ O
whether _ _ O
a _ _ O
string _ _ O
starts _ _ O
and _ _ O
ends _ _ O
with _ _ O
the _ _ O
same _ _ O
symbol _ _ O
{ _ _ O
x _ _ O
| _ _ O
x _ _ O
starts _ _ O
and _ _ O
ends _ _ O
with _ _ O
the _ _ O
same _ _ O
symbol _ _ O
} _ _ O
The _ _ O
problem _ _ O
of _ _ O
determining _ _ O
whether _ _ O
a _ _ O
string _ _ O
contains _ _ O
either _ _ O
11 _ _ O
or _ _ O
00 _ _ O
as _ _ O
a _ _ O
substring _ _ O
{ _ _ O
x _ _ O
| _ _ O
x _ _ O
contains _ _ O
either _ _ O
11 _ _ O
or _ _ O
00 _ _ O
as _ _ O
a _ _ O
substring _ _ O
} _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
02 _ _ O

Problems _ _ O
and _ _ O
Languages _ _ O
Solvable _ _ O
problems _ _ O
that _ _ O
we _ _ O
see _ _ O
so _ _ O
far _ _ O
( _ _ O
continue _ _ O
) _ _ O
The _ _ O
problem _ _ O
of _ _ O
determining _ _ O
whether _ _ O
a _ _ O
string _ _ O
contains _ _ O
011 _ _ O
as _ _ O
a _ _ O
substring _ _ O
{ _ _ O
x _ _ O
| _ _ O
x _ _ O
contains _ _ O
011 _ _ O
as _ _ O
a _ _ O
substring _ _ O
} _ _ O
The _ _ O
problem _ _ O
of _ _ O
determining _ _ O
whether _ _ O
a _ _ O
string _ _ O
ends _ _ O
with _ _ O
0110 _ _ O
{ _ _ O
x _ _ O
| _ _ O
x _ _ O
ends _ _ O
with _ _ O
0110 _ _ O
} _ _ O
The _ _ O
problem _ _ O
of _ _ O
determining _ _ O
whether _ _ O
a _ _ O
string _ _ O
contains _ _ O
an _ _ O
odd _ _ O
number _ _ O
of _ _ O
1s _ _ O
{ _ _ O
x _ _ O
| _ _ O
x _ _ O
contains _ _ O
an _ _ O
odd _ _ O
number _ _ O
of _ _ O
1s _ _ O
} _ _ O
Each _ _ O
of _ _ O
the _ _ O
above _ _ O
languages _ _ O
is _ _ O
regular _ _ O
since _ _ O
we _ _ O
can _ _ O
construct _ _ O
a _ _ O
DFA _ _ O
that _ _ O
recognizes _ _ O
it _ _ O
. _ _ O
But _ _ O
if _ _ O
a _ _ O
language _ _ O
is _ _ O
very _ _ O
complicate _ _ O
, _ _ O
it _ _ O
will _ _ O
be _ _ O
difficult _ _ O
to _ _ O
construct _ _ O
a _ _ O
DFA _ _ O
that _ _ O
recognizes _ _ O
it _ _ O
We _ _ O
need _ _ O
tools _ _ O
to _ _ O
help _ _ O
us _ _ O
to _ _ O
determine _ _ O
whether _ _ O
a _ _ O
language _ _ O
is _ _ O
regular _ _ O
or _ _ O
not _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
02 _ _ O

The _ _ O
Regular _ _ O
Operations _ _ O
In _ _ O
arithmetic _ _ O
: _ _ O
Objects _ _ O
are _ _ O
numbers _ _ O
Tools _ _ O
are _ _ O
operations _ _ O
for _ _ O
manipulating _ _ O
numbers _ _ O
( _ _ O
e.g. _ _ O
, _ _ O
+ _ _ O
and _ _ O
× _ _ O
) _ _ O
1 _ _ O
+ _ _ O
1 _ _ O
gives _ _ O
you _ _ O
a _ _ O
new _ _ O
number _ _ O
which _ _ O
is _ _ O
2 _ _ O
In _ _ O
the _ _ O
theory _ _ O
of _ _ O
computation _ _ O
, _ _ O
Objects _ _ O
are _ _ O
languages _ _ O
( _ _ O
sets _ _ O
of _ _ O
strings _ _ O
) _ _ O
Tools _ _ O
are _ _ O
operations _ _ O
for _ _ O
manipulating _ _ O
languages _ _ O
Definition _ _ O
1.23 _ _ O
Let _ _ O
A _ _ O
and _ _ O
B _ _ O
be _ _ O
languages _ _ O
. _ _ O
We _ _ O
define _ _ O
the _ _ O
regular _ _ O
operations _ _ O
as _ _ O
follows _ _ O
: _ _ O
Union _ _ O
: _ _ O
A _ _ O
∪ _ _ O
B _ _ O
= _ _ O
{ _ _ O
x _ _ O
| _ _ O
x _ _ O
∈ _ _ O
A _ _ O
or _ _ O
x _ _ O
∈ _ _ O
B _ _ O
} _ _ O
Concatenation _ _ O
: _ _ O
A _ _ O
◦ _ _ O
B _ _ O
= _ _ O
{ _ _ O
xy _ _ O
| _ _ O
x _ _ O
∈ _ _ O
A _ _ O
and _ _ O
y _ _ O
∈ _ _ O
B _ _ O
} _ _ O
Star _ _ O
: _ _ O
A∗ _ _ O
= _ _ O
{ _ _ O
x1 _ _ O
x2 _ _ O
. _ _ O
. _ _ O
. _ _ O
xk _ _ O
| _ _ O
k _ _ O
≥ _ _ O
0 _ _ O
and _ _ O
each _ _ O
xi _ _ O
∈ _ _ O
A _ _ O
} _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
02 _ _ O

Examples _ _ O
( _ _ O
Union _ _ O
) _ _ O
Let _ _ O
Σ _ _ O
= _ _ O
{ _ _ O
0 _ _ O
, _ _ O
1 _ _ O
} _ _ O
Consider _ _ O
the _ _ O
following _ _ O
languages _ _ O
A _ _ O
and _ _ O
B _ _ O
A _ _ O
= _ _ O
{ _ _ O
00 _ _ O
, _ _ O
11 _ _ O
} _ _ O
B _ _ O
= _ _ O
{ _ _ O
010 _ _ O
, _ _ O
101 _ _ O
} _ _ O
The _ _ O
union _ _ O
operations _ _ O
is _ _ O
identical _ _ O
to _ _ O
the _ _ O
set _ _ O
’s _ _ O
union _ _ O
operation _ _ O
: _ _ O
A _ _ O
∪ _ _ O
B _ _ O
= _ _ O
{ _ _ O
x _ _ O
| _ _ O
x _ _ O
∈ _ _ O
A _ _ O
or _ _ O
x _ _ O
∈ _ _ O
B _ _ O
} _ _ O
From _ _ O
the _ _ O
above _ _ O
definition _ _ O
: _ _ O
A _ _ O
∪ _ _ O
B _ _ O
= _ _ O
{ _ _ O
00 _ _ O
, _ _ O
11 _ _ O
, _ _ O
010 _ _ O
, _ _ O
101 _ _ O
} _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
02 _ _ O

Examples _ _ O
( _ _ O
Concatenation _ _ O
) _ _ O
Let _ _ O
Σ _ _ O
= _ _ O
{ _ _ O
0 _ _ O
, _ _ O
1 _ _ O
} _ _ O
Consider _ _ O
the _ _ O
following _ _ O
languages _ _ O
A _ _ O
and _ _ O
B _ _ O
A _ _ O
= _ _ O
{ _ _ O
00 _ _ O
, _ _ O
11 _ _ O
} _ _ O
B _ _ O
= _ _ O
{ _ _ O
010 _ _ O
, _ _ O
101 _ _ O
} _ _ O
The _ _ O
definition _ _ O
of _ _ O
concatenation _ _ O
is _ _ O
defined _ _ O
as _ _ O
A _ _ O
◦ _ _ O
B _ _ O
= _ _ O
{ _ _ O
xy _ _ O
| _ _ O
x _ _ O
∈ _ _ O
A _ _ O
and _ _ O
y _ _ O
∈ _ _ O
B _ _ O
} _ _ O
From _ _ O
the _ _ O
above _ _ O
definition _ _ O
: _ _ O
A _ _ O
◦ _ _ O
B _ _ O
= _ _ O
{ _ _ O
00010 _ _ O
, _ _ O
00101 _ _ O
, _ _ O
11010 _ _ O
, _ _ O
11101 _ _ O
} _ _ O
For _ _ O
simplicity _ _ O
, _ _ O
sometimes _ _ O
we _ _ O
write _ _ O
AB _ _ O
instead _ _ O
of _ _ O
A _ _ O
◦ _ _ O
B _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
02 _ _ O

Examples _ _ O
( _ _ O
Star _ _ O
) _ _ O
Let _ _ O
Σ _ _ O
= _ _ O
{ _ _ O
0 _ _ O
, _ _ O
1 _ _ O
} _ _ O
Consider _ _ O
the _ _ O
following _ _ O
language _ _ O
A _ _ O
A _ _ O
= _ _ O
{ _ _ O
00 _ _ O
, _ _ O
11 _ _ O
} _ _ O
The _ _ O
definition _ _ O
of _ _ O
start _ _ O
is _ _ O
defined _ _ O
as _ _ O
A∗ _ _ O
= _ _ O
{ _ _ O
x1 _ _ O
x2 _ _ O
. _ _ O
. _ _ O
. _ _ O
xk _ _ O
| _ _ O
k _ _ O
≥ _ _ O
0 _ _ O
and _ _ O
xi _ _ O
∈ _ _ O
A _ _ O
} _ _ O
If _ _ O
k _ _ O
= _ _ O
0 _ _ O
, _ _ O
the _ _ O
above _ _ O
definition _ _ O
becomes _ _ O
{ _ _ O
| _ _ O
0 _ _ O
≥ _ _ O
0 _ _ O
} _ _ O
= _ _ O
{ _ _ O
ε _ _ O
} _ _ O
If _ _ O
k _ _ O
= _ _ O
1 _ _ O
, _ _ O
the _ _ O
above _ _ O
definition _ _ O
becomes _ _ O
{ _ _ O
x1 _ _ O
| _ _ O
1 _ _ O
≥ _ _ O
0 _ _ O
and _ _ O
xi _ _ O
∈ _ _ O
A _ _ O
} _ _ O
= _ _ O
{ _ _ O
00 _ _ O
, _ _ O
11 _ _ O
} _ _ O
If _ _ O
k _ _ O
= _ _ O
2 _ _ O
, _ _ O
the _ _ O
above _ _ O
definition _ _ O
becomes _ _ O
{ _ _ O
x1 _ _ O
x2 _ _ O
| _ _ O
2 _ _ O
≥ _ _ O
0 _ _ O
and _ _ O
xi _ _ O
∈ _ _ O
A _ _ O
} _ _ O
= _ _ O
{ _ _ O
0000 _ _ O
, _ _ O
0011 _ _ O
, _ _ O
1100 _ _ O
, _ _ O
1111 _ _ O
} _ _ O
If _ _ O
k _ _ O
= _ _ O
3 _ _ O
, _ _ O
the _ _ O
above _ _ O
definition _ _ O
becomes _ _ O
{ _ _ O
x1 _ _ O
x2 _ _ O
x3 _ _ O
| _ _ O
3 _ _ O
≥ _ _ O
0 _ _ O
and _ _ O
xi _ _ O
∈ _ _ O
A _ _ O
} _ _ O
= _ _ O
{ _ _ O
000000 _ _ O
, _ _ O
000011 _ _ O
, _ _ O
. _ _ O
. _ _ O
. _ _ O
, _ _ O
111111 _ _ O
} _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
02 _ _ O

Examples _ _ O
( _ _ O
Star _ _ O
) _ _ O
Let _ _ O
Σ _ _ O
= _ _ O
{ _ _ O
0 _ _ O
, _ _ O
1 _ _ O
} _ _ O
Suppose _ _ O
A _ _ O
= _ _ O
{ _ _ O
00 _ _ O
, _ _ O
11 _ _ O
} _ _ O
, _ _ O
what _ _ O
is _ _ O
A∗ _ _ O
? _ _ O
A∗ _ _ O
= _ _ O
{ _ _ O
ε _ _ O
, _ _ O
00 _ _ O
, _ _ O
11 _ _ O
, _ _ O
0000 _ _ O
, _ _ O
0011 _ _ O
, _ _ O
1100 _ _ O
, _ _ O
1111 _ _ O
, _ _ O
000000 _ _ O
, _ _ O
. _ _ O
. _ _ O
. _ _ O
} _ _ O
Suppose _ _ O
A _ _ O
= _ _ O
{ _ _ O
011 _ _ O
} _ _ O
, _ _ O
what _ _ O
is _ _ O
A∗ _ _ O
? _ _ O
A∗ _ _ O
= _ _ O
{ _ _ O
ε _ _ O
, _ _ O
011 _ _ O
, _ _ O
011011 _ _ O
, _ _ O
011011011 _ _ O
, _ _ O
011011011011 _ _ O
, _ _ O
. _ _ O
. _ _ O
. _ _ O
} _ _ O
Suppose _ _ O
A _ _ O
= _ _ O
{ _ _ O
0 _ _ O
, _ _ O
1 _ _ O
} _ _ O
, _ _ O
what _ _ O
is _ _ O
A∗ _ _ O
? _ _ O
A∗ _ _ O
= _ _ O
{ _ _ O
ε _ _ O
, _ _ O
0 _ _ O
, _ _ O
1 _ _ O
, _ _ O
00 _ _ O
, _ _ O
01 _ _ O
, _ _ O
10 _ _ O
, _ _ O
11 _ _ O
, _ _ O
000 _ _ O
, _ _ O
001 _ _ O
, _ _ O
010 _ _ O
, _ _ O
011 _ _ O
, _ _ O
100 _ _ O
, _ _ O
. _ _ O
. _ _ O
. _ _ O
} _ _ O
This _ _ O
is _ _ O
the _ _ O
set _ _ O
of _ _ O
all _ _ O
strings _ _ O
over _ _ O
{ _ _ O
0 _ _ O
, _ _ O
1 _ _ O
} _ _ O
Suppose _ _ O
A _ _ O
= _ _ O
∅ _ _ O
, _ _ O
what _ _ O
is _ _ O
A∗ _ _ O
? _ _ O
A∗ _ _ O
= _ _ O
{ _ _ O
ε _ _ O
} _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
02 _ _ O

Definition _ _ O
of _ _ O
Closed _ _ O
Under _ _ O
Operations _ _ O
Let _ _ O
A _ _ O
be _ _ O
a _ _ O
set _ _ O
of _ _ O
objects _ _ O
( _ _ O
a _ _ O
collection _ _ O
of _ _ O
object _ _ O
) _ _ O
We _ _ O
say _ _ O
that _ _ O
A _ _ O
is _ _ O
closed _ _ O
under _ _ O
operation _ _ O
4 _ _ O
if _ _ O
for _ _ O
any _ _ O
x _ _ O
∈ _ _ O
A _ _ O
and _ _ O
y _ _ O
∈ _ _ O
A _ _ O
, _ _ O
x4y _ _ O
is _ _ O
also _ _ O
in _ _ O
A. _ _ O
Example _ _ O
: _ _ O
Let _ _ O
N _ _ O
be _ _ O
the _ _ O
set _ _ O
of _ _ O
natural _ _ O
number _ _ O
N _ _ O
is _ _ O
closed _ _ O
under _ _ O
addition _ _ O
For _ _ O
any _ _ O
two _ _ O
natural _ _ O
numbers _ _ O
x _ _ O
and _ _ O
y _ _ O
, _ _ O
x _ _ O
+ _ _ O
y _ _ O
is _ _ O
a _ _ O
natural _ _ O
number _ _ O
N _ _ O
is _ _ O
closed _ _ O
under _ _ O
multiplication _ _ O
For _ _ O
any _ _ O
two _ _ O
natural _ _ O
numbers _ _ O
x _ _ O
and _ _ O
y _ _ O
, _ _ O
x _ _ O
× _ _ O
y _ _ O
is _ _ O
a _ _ O
natural _ _ O
number _ _ O
N _ _ O
is _ _ O
not _ _ O
closed _ _ O
under _ _ O
subtraction _ _ O
5 _ _ O
− _ _ O
7 _ _ O
is _ _ O
not _ _ O
a _ _ O
natural _ _ O
number _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
02 _ _ O

Definition _ _ O
of _ _ O
Closed _ _ O
Under _ _ O
Operations _ _ O
Let _ _ O
L _ _ O
be _ _ O
the _ _ O
set _ _ O
of _ _ O
all _ _ O
regular _ _ O
languages _ _ O
This _ _ O
is _ _ O
a _ _ O
set _ _ O
of _ _ O
sets _ _ O
Recall _ _ O
that _ _ O
we _ _ O
have _ _ O
three _ _ O
operations _ _ O
, _ _ O
union _ _ O
, _ _ O
concatenation _ _ O
, _ _ O
and _ _ O
star _ _ O
Is _ _ O
L _ _ O
closed _ _ O
under _ _ O
union _ _ O
operation _ _ O
? _ _ O
For _ _ O
any _ _ O
regular _ _ O
languages _ _ O
A _ _ O
and _ _ O
B _ _ O
, _ _ O
is _ _ O
A _ _ O
∪ _ _ O
B _ _ O
a _ _ O
regular _ _ O
language _ _ O
? _ _ O
Is _ _ O
L _ _ O
closed _ _ O
under _ _ O
concatenation _ _ O
operation _ _ O
? _ _ O
For _ _ O
any _ _ O
regular _ _ O
languages _ _ O
A _ _ O
and _ _ O
B _ _ O
, _ _ O
is _ _ O
A _ _ O
◦ _ _ O
B _ _ O
a _ _ O
regular _ _ O
language _ _ O
? _ _ O
Is _ _ O
L _ _ O
closed _ _ O
under _ _ O
star _ _ O
operation _ _ O
? _ _ O
For _ _ O
any _ _ O
regular _ _ O
language _ _ O
A _ _ O
, _ _ O
is _ _ O
A∗ _ _ O
a _ _ O
regular _ _ O
language _ _ O
? _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
02 _ _ O

L _ _ O
is _ _ O
regular _ _ O
under _ _ O
union _ _ O
operation _ _ O
Let _ _ O
A _ _ O
be _ _ O
a _ _ O
set _ _ O
of _ _ O
strings _ _ O
over _ _ O
{ _ _ O
0 _ _ O
, _ _ O
1 _ _ O
} _ _ O
that _ _ O
contain _ _ O
a _ _ O
00 _ _ O
as _ _ O
a _ _ O
substring _ _ O
Is _ _ O
A _ _ O
a _ _ O
regular _ _ O
language _ _ O
? _ _ O
Can _ _ O
you _ _ O
construct _ _ O
a _ _ O
DFA _ _ O
that _ _ O
recognizes _ _ O
the _ _ O
language _ _ O
A _ _ O
? _ _ O
One _ _ O
of _ _ O
the _ _ O
machine _ _ O
that _ _ O
recognizes _ _ O
A _ _ O
can _ _ O
be _ _ O
as _ _ O
follows _ _ O
: _ _ O
1 _ _ O
0 _ _ O
, _ _ O
1 _ _ O
0 _ _ O
qa _ _ O
0 _ _ O
qb _ _ O
qc _ _ O
1 _ _ O
Because _ _ O
there _ _ O
exists _ _ O
a _ _ O
DFA _ _ O
that _ _ O
recognizes _ _ O
A _ _ O
, _ _ O
A _ _ O
is _ _ O
a _ _ O
regular _ _ O
language _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
02 _ _ O

L _ _ O
is _ _ O
regular _ _ O
under _ _ O
union _ _ O
operation _ _ O
Let _ _ O
B _ _ O
be _ _ O
a _ _ O
set _ _ O
of _ _ O
strings _ _ O
over _ _ O
{ _ _ O
0 _ _ O
, _ _ O
1 _ _ O
} _ _ O
that _ _ O
end _ _ O
with _ _ O
a _ _ O
1 _ _ O
Is _ _ O
B _ _ O
a _ _ O
regular _ _ O
language _ _ O
? _ _ O
Can _ _ O
you _ _ O
construct _ _ O
a _ _ O
DFA _ _ O
that _ _ O
recognizes _ _ O
the _ _ O
language _ _ O
B _ _ O
? _ _ O
One _ _ O
of _ _ O
the _ _ O
machine _ _ O
that _ _ O
recognizes _ _ O
B _ _ O
can _ _ O
be _ _ O
as _ _ O
follows _ _ O
: _ _ O
0 _ _ O
1 _ _ O
1 _ _ O
q0 _ _ O
q1 _ _ O
0 _ _ O
Because _ _ O
there _ _ O
exists _ _ O
a _ _ O
DFA _ _ O
that _ _ O
recognizes _ _ O
B _ _ O
, _ _ O
B _ _ O
is _ _ O
a _ _ O
regular _ _ O
language _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
02 _ _ O

L _ _ O
is _ _ O
regular _ _ O
under _ _ O
union _ _ O
operation _ _ O
We _ _ O
have _ _ O
A _ _ O
= _ _ O
{ _ _ O
x _ _ O
| _ _ O
x _ _ O
contains _ _ O
00 _ _ O
as _ _ O
a _ _ O
substring _ _ O
} _ _ O
is _ _ O
regular _ _ O
We _ _ O
have _ _ O
B _ _ O
= _ _ O
{ _ _ O
x _ _ O
| _ _ O
x _ _ O
ends _ _ O
with _ _ O
a _ _ O
1 _ _ O
} _ _ O
is _ _ O
regular _ _ O
How _ _ O
about _ _ O
A _ _ O
∪ _ _ O
B _ _ O
? _ _ O
A _ _ O
∪ _ _ O
B _ _ O
= _ _ O
{ _ _ O
x _ _ O
| _ _ O
x _ _ O
contains _ _ O
00 _ _ O
as _ _ O
a _ _ O
substring _ _ O
or _ _ O
x _ _ O
ends _ _ O
with _ _ O
a _ _ O
1 _ _ O
} _ _ O
It _ _ O
is _ _ O
quite _ _ O
straightforward _ _ O
to _ _ O
construct _ _ O
a _ _ O
machine _ _ O
that _ _ O
recognizes _ _ O
A _ _ O
∪ _ _ O
B _ _ O
( _ _ O
try _ _ O
to _ _ O
build _ _ O
one _ _ O
yourself _ _ O
) _ _ O
1 _ _ O
0 _ _ O
, _ _ O
1 _ _ O
0 _ _ O
1 _ _ O
1 _ _ O
0 _ _ O
0 _ _ O
This _ _ O
does _ _ O
not _ _ O
prove _ _ O
that _ _ O
if _ _ O
A _ _ O
and _ _ O
B _ _ O
are _ _ O
regular _ _ O
, _ _ O
A _ _ O
∪ _ _ O
B _ _ O
is _ _ O
regular _ _ O
This _ _ O
is _ _ O
just _ _ O
one _ _ O
example _ _ O
out _ _ O
of _ _ O
infinite _ _ O
may _ _ O
instances _ _ O
of _ _ O
regular _ _ O
languages _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
02 _ _ O

L _ _ O
is _ _ O
regular _ _ O
under _ _ O
union _ _ O
operation _ _ O
We _ _ O
need _ _ O
to _ _ O
show _ _ O
that _ _ O
for _ _ O
any _ _ O
two _ _ O
regular _ _ O
languages _ _ O
A _ _ O
and _ _ O
B _ _ O
, _ _ O
A _ _ O
∪ _ _ O
B _ _ O
is _ _ O
regular _ _ O
Given _ _ O
a _ _ O
regular _ _ O
language _ _ O
A _ _ O
over _ _ O
a _ _ O
Σ _ _ O
, _ _ O
what _ _ O
do _ _ O
we _ _ O
know _ _ O
about _ _ O
the _ _ O
language _ _ O
A _ _ O
? _ _ O
There _ _ O
exists _ _ O
a _ _ O
DFA _ _ O
MA _ _ O
that _ _ O
recognizes _ _ O
A _ _ O
( _ _ O
L _ _ O
( _ _ O
MA _ _ O
) _ _ O
= _ _ O
A _ _ O
) _ _ O
MA _ _ O
= _ _ O
( _ _ O
QA _ _ O
, _ _ O
Σ _ _ O
, _ _ O
δA _ _ O
, _ _ O
qA _ _ O
, _ _ O
FA _ _ O
) _ _ O
for _ _ O
some _ _ O
QA _ _ O
, _ _ O
δA _ _ O
, _ _ O
qA _ _ O
, _ _ O
and _ _ O
FA _ _ O
Similarly _ _ O
, _ _ O
given _ _ O
a _ _ O
regular _ _ O
language _ _ O
B _ _ O
over _ _ O
a _ _ O
Σ _ _ O
: _ _ O
There _ _ O
exists _ _ O
a _ _ O
DFA _ _ O
MB _ _ O
that _ _ O
recognizes _ _ O
B _ _ O
( _ _ O
L _ _ O
( _ _ O
MB _ _ O
) _ _ O
= _ _ O
B _ _ O
) _ _ O
MB _ _ O
= _ _ O
( _ _ O
QB _ _ O
, _ _ O
Σ _ _ O
, _ _ O
δB _ _ O
, _ _ O
qB _ _ O
, _ _ O
FB _ _ O
) _ _ O
for _ _ O
some _ _ O
QB _ _ O
, _ _ O
δB _ _ O
, _ _ O
qB _ _ O
, _ _ O
and _ _ O
FB _ _ O
To _ _ O
show _ _ O
that _ _ O
A _ _ O
∪ _ _ O
B _ _ O
is _ _ O
regular _ _ O
for _ _ O
any _ _ O
regular _ _ O
languages _ _ O
A _ _ O
and _ _ O
B _ _ O
, _ _ O
we _ _ O
need _ _ O
to _ _ O
construct _ _ O
a _ _ O
DFA _ _ O
that _ _ O
recognizes _ _ O
A _ _ O
∪ _ _ O
B _ _ O
from _ _ O
MA _ _ O
and _ _ O
MB _ _ O
To _ _ O
understand _ _ O
the _ _ O
process _ _ O
, _ _ O
we _ _ O
are _ _ O
going _ _ O
to _ _ O
work _ _ O
on _ _ O
a _ _ O
specific _ _ O
example _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
02 _ _ O

L _ _ O
is _ _ O
regular _ _ O
under _ _ O
union _ _ O
operation _ _ O
Recall _ _ O
the _ _ O
previous _ _ O
two _ _ O
regular _ _ O
languages _ _ O
and _ _ O
its _ _ O
DFAs _ _ O
where _ _ O
Σ _ _ O
= _ _ O
{ _ _ O
0 _ _ O
, _ _ O
1 _ _ O
} _ _ O
A _ _ O
= _ _ O
{ _ _ O
x _ _ O
| _ _ O
x _ _ O
contains _ _ O
00 _ _ O
as _ _ O
a _ _ O
substring _ _ O
} _ _ O
1 _ _ O
0 _ _ O
, _ _ O
1 _ _ O
0 _ _ O
qa _ _ O
0 _ _ O
qb _ _ O
qc _ _ O
1 _ _ O
MA _ _ O
= _ _ O
( _ _ O
QA _ _ O
, _ _ O
Σ _ _ O
, _ _ O
δA _ _ O
, _ _ O
qA _ _ O
, _ _ O
FA _ _ O
) _ _ O
and _ _ O
L _ _ O
( _ _ O
MA _ _ O
) _ _ O
= _ _ O
A _ _ O
B _ _ O
= _ _ O
{ _ _ O
x _ _ O
| _ _ O
x _ _ O
ends _ _ O
with _ _ O
a _ _ O
1 _ _ O
} _ _ O
0 _ _ O
1 _ _ O
1 _ _ O
q0 _ _ O
q1 _ _ O
0 _ _ O
MB _ _ O
= _ _ O
( _ _ O
QB _ _ O
, _ _ O
Σ _ _ O
, _ _ O
δB _ _ O
, _ _ O
qB _ _ O
, _ _ O
FB _ _ O
) _ _ O
and _ _ O
L _ _ O
( _ _ O
MB _ _ O
) _ _ O
= _ _ O
B _ _ O
Given _ _ O
a _ _ O
string _ _ O
w _ _ O
and _ _ O
these _ _ O
two _ _ O
DFAs _ _ O
, _ _ O
how _ _ O
to _ _ O
check _ _ O
whether _ _ O
w _ _ O
is _ _ O
in _ _ O
A _ _ O
∪ _ _ O
B _ _ O
? _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
02 _ _ O

L _ _ O
is _ _ O
regular _ _ O
under _ _ O
union _ _ O
operation _ _ O
Recall _ _ O
that _ _ O
A _ _ O
= _ _ O
L _ _ O
( _ _ O
MA _ _ O
) _ _ O
and _ _ O
B _ _ O
= _ _ O
L _ _ O
( _ _ O
MB _ _ O
) _ _ O
Thus _ _ O
, _ _ O
A _ _ O
∪ _ _ O
B _ _ O
= _ _ O
L _ _ O
( _ _ O
MA _ _ O
) _ _ O
∪ _ _ O
L _ _ O
( _ _ O
MB _ _ O
) _ _ O
w _ _ O
∈A∪B _ _ O
iff _ _ O
w _ _ O
∈ _ _ O
A _ _ O
or _ _ O
w _ _ O
∈ _ _ O
B _ _ O
iff _ _ O
w _ _ O
∈ _ _ O
L _ _ O
( _ _ O
MA _ _ O
) _ _ O
or _ _ O
w _ _ O
∈ _ _ O
L _ _ O
( _ _ O
MB _ _ O
) _ _ O
iff _ _ O
MA _ _ O
accepts _ _ O
w _ _ O
or _ _ O
w _ _ O
∈ _ _ O
L _ _ O
( _ _ O
MB _ _ O
) _ _ O
iff _ _ O
MA _ _ O
accepts _ _ O
w _ _ O
or _ _ O
MB _ _ O
accepts _ _ O
w _ _ O
In _ _ O
other _ _ O
words _ _ O
, _ _ O
w _ _ O
∈ _ _ O
A _ _ O
∪ _ _ O
B _ _ O
if _ _ O
and _ _ O
only _ _ O
if _ _ O
MA _ _ O
accepts _ _ O
w _ _ O
or _ _ O
MB _ _ O
accepts _ _ O
w _ _ O
To _ _ O
check _ _ O
whether _ _ O
w _ _ O
∈ _ _ O
A _ _ O
∪ _ _ O
B _ _ O
: _ _ O
Run _ _ O
both _ _ O
MA _ _ O
and _ _ O
MB _ _ O
on _ _ O
input _ _ O
w _ _ O
If _ _ O
one _ _ O
of _ _ O
them _ _ O
or _ _ O
both _ _ O
accepts _ _ O
w _ _ O
, _ _ O
w _ _ O
∈ _ _ O
A _ _ O
∪ _ _ O
B _ _ O
If _ _ O
both _ _ O
reject _ _ O
w _ _ O
, _ _ O
w _ _ O
6∈ _ _ O
A _ _ O
∪ _ _ O
B _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
02 _ _ O

L _ _ O
is _ _ O
regular _ _ O
under _ _ O
union _ _ O
operation _ _ O
We _ _ O
can _ _ O
run _ _ O
both _ _ O
machines _ _ O
simultaneously _ _ O
1 _ _ O
0 _ _ O
, _ _ O
1 _ _ O
0 _ _ O
1 _ _ O
1 _ _ O
0 _ _ O
qa _ _ O
0 _ _ O
qb _ _ O
qc _ _ O
q0 _ _ O
q1 _ _ O
1 _ _ O
0 _ _ O
Let _ _ O
state _ _ O
( _ _ O
p _ _ O
, _ _ O
q _ _ O
) _ _ O
represents _ _ O
the _ _ O
situation _ _ O
where _ _ O
The _ _ O
current _ _ O
state _ _ O
of _ _ O
MA _ _ O
is _ _ O
p _ _ O
The _ _ O
current _ _ O
state _ _ O
of _ _ O
MB _ _ O
is _ _ O
q _ _ O
With _ _ O
the _ _ O
new _ _ O
notion _ _ O
of _ _ O
states _ _ O
, _ _ O
we _ _ O
have _ _ O
0 _ _ O
( _ _ O
qa _ _ O
, _ _ O
q0 _ _ O
) _ _ O
1 _ _ O
1 _ _ O
1 _ _ O
( _ _ O
qa _ _ O
, _ _ O
q1 _ _ O
) _ _ O
0 _ _ O
( _ _ O
qb _ _ O
, _ _ O
q0 _ _ O
) _ _ O
0 _ _ O
0 _ _ O
1 _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
( _ _ O
qb _ _ O
, _ _ O
q1 _ _ O
) _ _ O
Finite _ _ O
Automata _ _ O
02 _ _ O
( _ _ O
qc _ _ O
, _ _ O
q0 _ _ O
) _ _ O
0 _ _ O
0 _ _ O
1 _ _ O
( _ _ O
qc _ _ O
, _ _ O
q1 _ _ O
) _ _ O
1 _ _ O

L _ _ O
is _ _ O
regular _ _ O
under _ _ O
union _ _ O
operation _ _ O
Let _ _ O
MA _ _ O
recognizes _ _ O
A _ _ O
, _ _ O
where _ _ O
MA _ _ O
= _ _ O
( _ _ O
QA _ _ O
, _ _ O
Σ _ _ O
, _ _ O
δA _ _ O
, _ _ O
qA _ _ O
, _ _ O
FA _ _ O
) _ _ O
Let _ _ O
MB _ _ O
recognizes _ _ O
B _ _ O
, _ _ O
where _ _ O
MB _ _ O
= _ _ O
( _ _ O
QB _ _ O
, _ _ O
Σ _ _ O
, _ _ O
δB _ _ O
, _ _ O
qB _ _ O
, _ _ O
FB _ _ O
) _ _ O
Machine _ _ O
M _ _ O
= _ _ O
( _ _ O
Q _ _ O
, _ _ O
Σ _ _ O
, _ _ O
δ _ _ O
, _ _ O
q0 _ _ O
, _ _ O
F _ _ O
) _ _ O
that _ _ O
recognizes _ _ O
A _ _ O
∪ _ _ O
B _ _ O
can _ _ O
be _ _ O
constructed _ _ O
as _ _ O
follows _ _ O
: _ _ O
1 _ _ O
2 _ _ O
Q _ _ O
= _ _ O
{ _ _ O
( _ _ O
r1 _ _ O
, _ _ O
r2 _ _ O
) _ _ O
| _ _ O
r1 _ _ O
∈ _ _ O
QA _ _ O
and _ _ O
r2 _ _ O
∈ _ _ O
QB _ _ O
} _ _ O
For _ _ O
each _ _ O
( _ _ O
r1 _ _ O
, _ _ O
r2 _ _ O
) _ _ O
∈ _ _ O
Q _ _ O
and _ _ O
a _ _ O
∈ _ _ O
Σ _ _ O
δ _ _ O
( _ _ O
( _ _ O
r1 _ _ O
, _ _ O
r2 _ _ O
) _ _ O
, _ _ O
a _ _ O
) _ _ O
= _ _ O
( _ _ O
δA _ _ O
( _ _ O
r1 _ _ O
, _ _ O
a _ _ O
) _ _ O
, _ _ O
δB _ _ O
( _ _ O
r2 _ _ O
, _ _ O
a _ _ O
) _ _ O
) _ _ O
3 _ _ O
4 _ _ O
q0 _ _ O
= _ _ O
( _ _ O
qA _ _ O
, _ _ O
qB _ _ O
) _ _ O
F _ _ O
= _ _ O
{ _ _ O
( _ _ O
r1 _ _ O
, _ _ O
r2 _ _ O
) _ _ O
| _ _ O
r1 _ _ O
∈ _ _ O
FA _ _ O
or _ _ O
r2 _ _ O
∈ _ _ O
FB _ _ O
} _ _ O
To _ _ O
recognize _ _ O
A _ _ O
∩ _ _ O
B _ _ O
, _ _ O
simply _ _ O
change _ _ O
the _ _ O
set _ _ O
of _ _ O
accept _ _ O
states _ _ O
to _ _ O
F _ _ O
= _ _ O
{ _ _ O
( _ _ O
r1 _ _ O
, _ _ O
r2 _ _ O
) _ _ O
| _ _ O
r1 _ _ O
∈ _ _ O
FA _ _ O
and _ _ O
r2 _ _ O
∈ _ _ O
FB _ _ O
} _ _ O
If _ _ O
A _ _ O
and _ _ O
B _ _ O
are _ _ O
regular _ _ O
languages _ _ O
, _ _ O
A _ _ O
∪ _ _ O
B _ _ O
is _ _ O
regular _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
02 _ _ O

Conclusions _ _ O
A _ _ O
language _ _ O
is _ _ O
regular _ _ O
if _ _ O
it _ _ O
is _ _ O
recognized _ _ O
by _ _ O
some _ _ O
finite-state _ _ O
machines _ _ O
If _ _ O
you _ _ O
can _ _ O
prove _ _ O
that _ _ O
a _ _ O
language _ _ O
is _ _ O
regular _ _ O
: _ _ O
there _ _ O
exists _ _ O
a _ _ O
finite-state _ _ O
machine _ _ O
that _ _ O
recognizes _ _ O
it _ _ O
If _ _ O
you _ _ O
can _ _ O
prove _ _ O
that _ _ O
a _ _ O
language _ _ O
is _ _ O
not _ _ O
regular _ _ O
: _ _ O
there _ _ O
is _ _ O
no _ _ O
finite-state _ _ O
machine _ _ O
that _ _ O
recognizes _ _ O
it _ _ O
In _ _ O
formally _ _ O
, _ _ O
we _ _ O
show _ _ O
that _ _ O
if _ _ O
A _ _ O
and _ _ O
B _ _ O
are _ _ O
regular _ _ O
languages _ _ O
, _ _ O
A _ _ O
∪ _ _ O
B _ _ O
is _ _ O
a _ _ O
regular _ _ O
language _ _ O
To _ _ O
prove _ _ O
the _ _ O
closure _ _ O
of _ _ O
concatenation _ _ O
and _ _ O
star _ _ O
operators _ _ O
, _ _ O
we _ _ O
need _ _ O
a _ _ O
sightly _ _ O
different _ _ O
computational _ _ O
model _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Finite _ _ O
Automata _ _ O
02 _ _ O



