self_training_2|cs1502|lec11_turing_machine_03
-DOCSTART- -X- -X- O

Turing _ _ O
Machine _ _ O
03 _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machine _ _ O
03 _ _ O

Combining _ _ O
Turing _ _ O
Machines _ _ O
A _ _ O
Turing _ _ O
machine _ _ O
represents _ _ O
an _ _ O
algorithm _ _ O
Generally _ _ O
an _ _ O
algorithm _ _ O
can _ _ O
be _ _ O
described _ _ O
as _ _ O
a _ _ O
number _ _ O
of _ _ O
smaller _ _ O
algorithms _ _ O
working _ _ O
in _ _ O
combination _ _ O
Similarly _ _ O
, _ _ O
we _ _ O
can _ _ O
combine _ _ O
several _ _ O
Turing _ _ O
machines _ _ O
into _ _ O
a _ _ O
larger _ _ O
one _ _ O
Example _ _ O
, _ _ O
two _ _ O
Turing _ _ O
machines _ _ O
T1 _ _ O
and _ _ O
T2 _ _ O
sharing _ _ O
the _ _ O
same _ _ O
tape _ _ O
: _ _ O
When _ _ O
T1 _ _ O
finishes _ _ O
( _ _ O
either _ _ O
in _ _ O
the _ _ O
accept _ _ O
or _ _ O
reject _ _ O
state _ _ O
) _ _ O
, _ _ O
T2 _ _ O
takes _ _ O
over _ _ O
This _ _ O
new _ _ O
machine _ _ O
is _ _ O
represented _ _ O
by _ _ O
T1 _ _ O
T2 _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machine _ _ O
03 _ _ O

Combining _ _ O
Turing _ _ O
Machines _ _ O
Suppose _ _ O
we _ _ O
have _ _ O
two _ _ O
Turing _ _ O
machines _ _ O
: _ _ O
1 _ _ O
1 _ _ O
1 _ _ O
) _ _ O
and _ _ O
T1 _ _ O
= _ _ O
( _ _ O
Q1 _ _ O
, _ _ O
Σ _ _ O
, _ _ O
Γ _ _ O
, _ _ O
δ1 _ _ O
, _ _ O
qstart _ _ O
, _ _ O
qaccept _ _ O
, _ _ O
qreject _ _ O
2 _ _ O
2 _ _ O
2 _ _ O
) _ _ O
T2 _ _ O
= _ _ O
( _ _ O
Q2 _ _ O
, _ _ O
Σ _ _ O
, _ _ O
Γ _ _ O
, _ _ O
δ2 _ _ O
, _ _ O
qstart _ _ O
, _ _ O
qaccept _ _ O
, _ _ O
qreject _ _ O
Let _ _ O
T _ _ O
= _ _ O
( _ _ O
Q _ _ O
, _ _ O
Σ _ _ O
, _ _ O
Γ _ _ O
, _ _ O
δ _ _ O
, _ _ O
qstart _ _ O
, _ _ O
qaccept _ _ O
, _ _ O
qreject _ _ O
) _ _ O
be _ _ O
T1 _ _ O
T2 _ _ O
which _ _ O
can _ _ O
be _ _ O
constructed _ _ O
as _ _ O
follows _ _ O
: _ _ O
Q _ _ O
= _ _ O
Q1 _ _ O
∪ _ _ O
Q2 _ _ O
( _ _ O
states _ _ O
of _ _ O
T2 _ _ O
are _ _ O
relabeled _ _ O
if _ _ O
necessary _ _ O
) _ _ O
1 _ _ O
Initial _ _ O
state _ _ O
of _ _ O
T _ _ O
is _ _ O
the _ _ O
initial _ _ O
state _ _ O
of _ _ O
T1 _ _ O
( _ _ O
qstart _ _ O
= _ _ O
qstart _ _ O
) _ _ O
1 _ _ O
1 _ _ O
δ _ _ O
= _ _ O
δ1 _ _ O
∪ _ _ O
δ2 _ _ O
except _ _ O
those _ _ O
of _ _ O
T1 _ _ O
that _ _ O
go _ _ O
to _ _ O
qaccept _ _ O
and _ _ O
qreject _ _ O
q _ _ O
x _ _ O
→ _ _ O
y _ _ O
, _ _ O
D _ _ O
q1 _ _ O
q _ _ O
x _ _ O
→ _ _ O
y _ _ O
, _ _ O
D _ _ O
q2 _ _ O
a _ _ O
s _ _ O
A _ _ O
transition _ _ O
in _ _ O
T1 _ _ O
becomes _ _ O
1 _ _ O
2 _ _ O
where _ _ O
qa _ _ O
is _ _ O
the _ _ O
accept _ _ O
state _ _ O
of _ _ O
T1 _ _ O
and _ _ O
qs _ _ O
is _ _ O
the _ _ O
start _ _ O
state _ _ O
of _ _ O
T2 _ _ O
If _ _ O
T1 _ _ O
enter _ _ O
its _ _ O
accept _ _ O
state _ _ O
, _ _ O
T2 _ _ O
takes _ _ O
over _ _ O
. _ _ O
The _ _ O
moves _ _ O
that _ _ O
cause _ _ O
T _ _ O
to _ _ O
accept _ _ O
are _ _ O
precisely _ _ O
those _ _ O
that _ _ O
case _ _ O
T2 _ _ O
to _ _ O
accept _ _ O
However _ _ O
, _ _ O
if _ _ O
T1 _ _ O
enter _ _ O
the _ _ O
reject _ _ O
state _ _ O
and _ _ O
halt _ _ O
, _ _ O
so _ _ O
does _ _ O
T _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machine _ _ O
03 _ _ O

Example _ _ O
Suppose _ _ O
we _ _ O
want _ _ O
to _ _ O
create _ _ O
a _ _ O
machine _ _ O
that _ _ O
recognize _ _ O
a _ _ O
palindrome _ _ O
( _ _ O
e.g. _ _ O
, _ _ O
racecar _ _ O
) _ _ O
Suppose _ _ O
we _ _ O
have _ _ O
the _ _ O
following _ _ O
Turing _ _ O
machines _ _ O
: _ _ O
Copy _ _ O
: _ _ O
From _ _ O
tx _ _ O
to _ _ O
txtx _ _ O
NB _ _ O
: _ _ O
Moves _ _ O
tape _ _ O
head _ _ O
to _ _ O
the _ _ O
next _ _ O
blank _ _ O
symbol _ _ O
to _ _ O
the _ _ O
right _ _ O
PB _ _ O
: _ _ O
Moves _ _ O
tape _ _ O
head _ _ O
to _ _ O
the _ _ O
next _ _ O
blank _ _ O
symbol _ _ O
to _ _ O
the _ _ O
left _ _ O
R _ _ O
: _ _ O
Reverses _ _ O
the _ _ O
content _ _ O
of _ _ O
the _ _ O
tape _ _ O
from _ _ O
tx _ _ O
to _ _ O
txr _ _ O
xr _ _ O
is _ _ O
the _ _ O
reverse _ _ O
of _ _ O
a _ _ O
string _ _ O
x _ _ O
Equal _ _ O
: _ _ O
Compare _ _ O
two _ _ O
strings _ _ O
separated _ _ O
by _ _ O
a _ _ O
blank _ _ O
symbol _ _ O
For _ _ O
simplicity _ _ O
, _ _ O
we _ _ O
put _ _ O
the _ _ O
blank _ _ O
symbol _ _ O
on _ _ O
the _ _ O
first _ _ O
square _ _ O
of _ _ O
the _ _ O
tape _ _ O
to _ _ O
indicate _ _ O
the _ _ O
left-end _ _ O
of _ _ O
the _ _ O
tape _ _ O
. _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machine _ _ O
03 _ _ O

Example _ _ O
Let _ _ O
the _ _ O
content _ _ O
of _ _ O
a _ _ O
tape _ _ O
be _ _ O
tx _ _ O
where _ _ O
x _ _ O
is _ _ O
a _ _ O
string _ _ O
The _ _ O
following _ _ O
machine _ _ O
will _ _ O
accept _ _ O
if _ _ O
x _ _ O
is _ _ O
a _ _ O
palindrome _ _ O
: _ _ O
Copy _ _ O
→ _ _ O
NB _ _ O
→ _ _ O
R _ _ O
→ _ _ O
PB _ _ O
→ _ _ O
Equal _ _ O
Step _ _ O
by _ _ O
Step _ _ O
: _ _ O
Machine _ _ O
Tape _ _ O
Start _ _ O
t _ _ O
↓ _ _ O
↓ _ _ O
x _ _ O
Copy _ _ O
t _ _ O
NB _ _ O
t _ _ O
R _ _ O
t _ _ O
PB _ _ O
t _ _ O
Equal _ _ O
t _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
xtx _ _ O
↓ _ _ O
xtx _ _ O
↓ _ _ O
xtxr _ _ O
↓ _ _ O
xtxr _ _ O
↓ _ _ O
xtxr _ _ O
t _ _ O
Turing _ _ O
Machine _ _ O
03 _ _ O

Multitape _ _ O
Turing _ _ O
Machines _ _ O
A _ _ O
Turing _ _ O
machine _ _ O
can _ _ O
have _ _ O
multiple _ _ O
tape _ _ O
and _ _ O
tape _ _ O
heads _ _ O
: _ _ O
0 _ _ O
1 _ _ O
0 _ _ O
a _ _ O
a _ _ O
a _ _ O
b _ _ O
a _ _ O
1 _ _ O
0 _ _ O
M _ _ O
All _ _ O
tape _ _ O
heads _ _ O
can _ _ O
read _ _ O
then _ _ O
write _ _ O
and _ _ O
move _ _ O
in _ _ O
a _ _ O
single _ _ O
Turing _ _ O
machine _ _ O
step _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machine _ _ O
03 _ _ O

Multitape _ _ O
Turing _ _ O
Machines _ _ O
Transition _ _ O
function _ _ O
need _ _ O
to _ _ O
control _ _ O
/ _ _ O
make _ _ O
decision _ _ O
based _ _ O
on _ _ O
symbols _ _ O
read _ _ O
from _ _ O
all _ _ O
tapes _ _ O
Example _ _ O
: _ _ O
A _ _ O
transition _ _ O
function _ _ O
of _ _ O
a _ _ O
three-tape _ _ O
TM _ _ O
: _ _ O
δ _ _ O
( _ _ O
q _ _ O
, _ _ O
x _ _ O
, _ _ O
y _ _ O
, _ _ O
z _ _ O
) _ _ O
→ _ _ O
( _ _ O
r _ _ O
, _ _ O
a _ _ O
, _ _ O
b _ _ O
, _ _ O
c _ _ O
, _ _ O
R _ _ O
, _ _ O
L _ _ O
, _ _ O
R _ _ O
) _ _ O
Current _ _ O
state _ _ O
is _ _ O
q _ _ O
, _ _ O
the _ _ O
first _ _ O
tape _ _ O
reads _ _ O
x _ _ O
, _ _ O
the _ _ O
second _ _ O
tape _ _ O
reads _ _ O
y _ _ O
, _ _ O
and _ _ O
the _ _ O
third _ _ O
tape _ _ O
reads _ _ O
z _ _ O
Change _ _ O
the _ _ O
current _ _ O
state _ _ O
to _ _ O
r _ _ O
Write _ _ O
a _ _ O
on _ _ O
to _ _ O
the _ _ O
first _ _ O
tape _ _ O
, _ _ O
write _ _ O
b _ _ O
onto _ _ O
the _ _ O
second _ _ O
tape _ _ O
, _ _ O
and _ _ O
write _ _ O
c _ _ O
onto _ _ O
the _ _ O
third _ _ O
tape _ _ O
Move _ _ O
the _ _ O
first _ _ O
tape _ _ O
head _ _ O
to _ _ O
the _ _ O
right _ _ O
direction _ _ O
, _ _ O
move _ _ O
the _ _ O
second _ _ O
tape _ _ O
head _ _ O
to _ _ O
the _ _ O
left _ _ O
direction _ _ O
, _ _ O
and _ _ O
move _ _ O
the _ _ O
third _ _ O
tape _ _ O
head _ _ O
to _ _ O
the _ _ O
right _ _ O
direction _ _ O
Multitape _ _ O
TMs _ _ O
are _ _ O
suitable _ _ O
for _ _ O
algorithms _ _ O
in _ _ O
which _ _ O
several _ _ O
kinds _ _ O
of _ _ O
data _ _ O
are _ _ O
involved _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machine _ _ O
03 _ _ O

Multitape _ _ O
to _ _ O
One-Tape _ _ O
A _ _ O
multitape _ _ O
Turing _ _ O
machine _ _ O
from _ _ O
previous _ _ O
slide _ _ O
, _ _ O
can _ _ O
be _ _ O
convert _ _ O
into _ _ O
one-tape _ _ O
Turing _ _ O
machine _ _ O
as _ _ O
shown _ _ O
below _ _ O
: _ _ O
S _ _ O
# _ _ O
0 _ _ O
1 _ _ O
0 _ _ O
1 _ _ O
0 _ _ O
# _ _ O
a _ _ O
a _ _ O
a _ _ O
# _ _ O
b _ _ O
a _ _ O
# _ _ O
Use _ _ O
# _ _ O
symbol _ _ O
to _ _ O
separate _ _ O
content _ _ O
between _ _ O
tapes _ _ O
• _ _ O
Use _ _ O
x _ _ O
to _ _ O
indicate _ _ O
the _ _ O
current _ _ O
position _ _ O
of _ _ O
each _ _ O
tape _ _ O
head _ _ O
One _ _ O
move _ _ O
of _ _ O
multitape _ _ O
machine _ _ O
will _ _ O
be _ _ O
equal _ _ O
to _ _ O
several _ _ O
moves _ _ O
of _ _ O
one-tape _ _ O
machine _ _ O
For _ _ O
example _ _ O
, _ _ O
δ _ _ O
( _ _ O
q _ _ O
, _ _ O
1 _ _ O
, _ _ O
a _ _ O
, _ _ O
b _ _ O
) _ _ O
→ _ _ O
( _ _ O
r _ _ O
, _ _ O
0 _ _ O
, _ _ O
b _ _ O
, _ _ O
a _ _ O
, _ _ O
L _ _ O
, _ _ O
L _ _ O
, _ _ O
R _ _ O
) _ _ O
will _ _ O
be _ _ O
1 _ _ O
2 _ _ O
3 _ _ O
Move _ _ O
to _ _ O
the _ _ O
next _ _ O
• _ _ O
on _ _ O
the _ _ O
right _ _ O
, _ _ O
write _ _ O
0 _ _ O
, _ _ O
move _ _ O
to _ _ O
the _ _ O
left _ _ O
square _ _ O
, _ _ O
write _ _ O
• _ _ O
over _ _ O
the _ _ O
symbol _ _ O
, _ _ O
and _ _ O
move _ _ O
to _ _ O
the _ _ O
right _ _ O
square _ _ O
Move _ _ O
to _ _ O
the _ _ O
next _ _ O
• _ _ O
on _ _ O
the _ _ O
right _ _ O
, _ _ O
write _ _ O
b _ _ O
, _ _ O
move _ _ O
to _ _ O
the _ _ O
left _ _ O
square _ _ O
, _ _ O
write _ _ O
• _ _ O
over _ _ O
the _ _ O
symbol _ _ O
, _ _ O
and _ _ O
move _ _ O
to _ _ O
the _ _ O
right _ _ O
square _ _ O
Move _ _ O
to _ _ O
the _ _ O
next _ _ O
• _ _ O
on _ _ O
the _ _ O
right _ _ O
, _ _ O
write _ _ O
b _ _ O
, _ _ O
move _ _ O
to _ _ O
the _ _ O
right _ _ O
square _ _ O
, _ _ O
write _ _ O
• _ _ O
over _ _ O
the _ _ O
symbol _ _ O
, _ _ O
and _ _ O
move _ _ O
to _ _ O
the _ _ O
left-end _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machine _ _ O
03 _ _ O

Multitape _ _ O
to _ _ O
One-Tape _ _ O
Recall _ _ O
that _ _ O
a _ _ O
tape _ _ O
will _ _ O
be _ _ O
filled _ _ O
with _ _ O
blank _ _ O
after _ _ O
the _ _ O
last _ _ O
symbol _ _ O
of _ _ O
the _ _ O
string _ _ O
on _ _ O
the _ _ O
tape _ _ O
0 _ _ O
1 _ _ O
0 _ _ O
a _ _ O
a _ _ O
a _ _ O
b _ _ O
a _ _ O
1 _ _ O
0 _ _ O
1 _ _ O
0 _ _ O
a _ _ O
a _ _ O
M _ _ O
S _ _ O
# _ _ O
0 _ _ O
1 _ _ O
0 _ _ O
# _ _ O
a _ _ O
# _ _ O
b _ _ O
a _ _ O
# _ _ O
From _ _ O
the _ _ O
above _ _ O
multi-tape _ _ O
TM _ _ O
, _ _ O
if _ _ O
the _ _ O
second _ _ O
tape _ _ O
head _ _ O
needs _ _ O
to _ _ O
move _ _ O
tot _ _ O
he _ _ O
right _ _ O
direction _ _ O
, _ _ O
it _ _ O
should _ _ O
be _ _ O
on _ _ O
top _ _ O
of _ _ O
a _ _ O
blank _ _ O
symbol _ _ O
But _ _ O
on _ _ O
a _ _ O
single-tape _ _ O
TM _ _ O
, _ _ O
it _ _ O
will _ _ O
be _ _ O
on _ _ O
top _ _ O
of _ _ O
the _ _ O
# _ _ O
symbol _ _ O
Single-tape _ _ O
TM _ _ O
must _ _ O
insert _ _ O
the _ _ O
blank _ _ O
symbol _ _ O
with _ _ O
a _ _ O
dot _ _ O
at _ _ O
the _ _ O
# _ _ O
Every _ _ O
multitape _ _ O
TM _ _ O
has _ _ O
an _ _ O
equivalent _ _ O
single-tape _ _ O
TM _ _ O
( _ _ O
slower _ _ O
) _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machine _ _ O
03 _ _ O

Nondeterministic _ _ O
Turing _ _ O
Machine _ _ O
Similar _ _ O
to _ _ O
Nondeterministic _ _ O
Finite _ _ O
Automata _ _ O
( _ _ O
NFA _ _ O
) _ _ O
Processing _ _ O
one _ _ O
input _ _ O
symbol _ _ O
results _ _ O
in _ _ O
one _ _ O
or _ _ O
more _ _ O
machine _ _ O
. _ _ O
δ _ _ O
: _ _ O
Q _ _ O
× _ _ O
Γ _ _ O
→ _ _ O
P _ _ O
( _ _ O
Q _ _ O
× _ _ O
Γ _ _ O
× _ _ O
{ _ _ O
L _ _ O
, _ _ O
R _ _ O
} _ _ O
) _ _ O
Computation _ _ O
is _ _ O
a _ _ O
tree _ _ O
similar _ _ O
to _ _ O
NFA _ _ O
For _ _ O
a _ _ O
nondeterministic _ _ O
Turing _ _ O
machine _ _ O
( _ _ O
NTM _ _ O
) _ _ O
: _ _ O
If _ _ O
a _ _ O
branch _ _ O
is _ _ O
in _ _ O
the _ _ O
accept _ _ O
state _ _ O
, _ _ O
the _ _ O
machine _ _ O
accepts _ _ O
the _ _ O
input _ _ O
string _ _ O
If _ _ O
all _ _ O
branches _ _ O
are _ _ O
in _ _ O
the _ _ O
reject _ _ O
state _ _ O
, _ _ O
the _ _ O
machine _ _ O
rejects _ _ O
the _ _ O
input _ _ O
string _ _ O
If _ _ O
no _ _ O
branch _ _ O
is _ _ O
in _ _ O
the _ _ O
accept _ _ O
state _ _ O
and _ _ O
at _ _ O
least _ _ O
one _ _ O
branch _ _ O
enter _ _ O
an _ _ O
infinite _ _ O
loop _ _ O
, _ _ O
the _ _ O
machine _ _ O
loops _ _ O
indefinitely _ _ O
on _ _ O
the _ _ O
input _ _ O
string _ _ O
Theorem _ _ O
3.16 _ _ O
Every _ _ O
nondeterministic _ _ O
Turing _ _ O
machine _ _ O
has _ _ O
an _ _ O
equivalent _ _ O
deterministic _ _ O
Turing _ _ O
machine _ _ O
. _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machine _ _ O
03 _ _ O

Proof _ _ O
Idea _ _ O
Theorem _ _ O
3.16 _ _ O
Rewording _ _ O
For _ _ O
every _ _ O
nondeterministic _ _ O
TM _ _ O
T _ _ O
= _ _ O
( _ _ O
Q _ _ O
, _ _ O
Σ _ _ O
, _ _ O
Γ _ _ O
, _ _ O
δ _ _ O
, _ _ O
qstart _ _ O
, _ _ O
qaccept _ _ O
, _ _ O
qreject _ _ O
) _ _ O
, _ _ O
there _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
) _ _ O
is _ _ O
an _ _ O
ordinary _ _ O
( _ _ O
deterministic _ _ O
) _ _ O
TM _ _ O
T _ _ O
0 _ _ O
= _ _ O
( _ _ O
Q0 _ _ O
, _ _ O
Σ _ _ O
, _ _ O
Γ0 _ _ O
, _ _ O
δ _ _ O
0 _ _ O
, _ _ O
qstart _ _ O
, _ _ O
qaccept _ _ O
, _ _ O
qreject _ _ O
0 _ _ O
with _ _ O
L _ _ O
( _ _ O
T _ _ O
) _ _ O
= _ _ O
L _ _ O
( _ _ O
T _ _ O
) _ _ O
. _ _ O
Recall _ _ O
that _ _ O
δ _ _ O
: _ _ O
Q _ _ O
× _ _ O
Γ _ _ O
→ _ _ O
P _ _ O
( _ _ O
Q _ _ O
× _ _ O
Γ _ _ O
× _ _ O
{ _ _ O
L _ _ O
, _ _ O
R _ _ O
} _ _ O
) _ _ O
Processing _ _ O
a _ _ O
tape _ _ O
alphabet _ _ O
at _ _ O
a _ _ O
state _ _ O
may _ _ O
result _ _ O
in _ _ O
multiple _ _ O
machines _ _ O
The _ _ O
upper _ _ O
bound _ _ O
of _ _ O
the _ _ O
number _ _ O
of _ _ O
machines _ _ O
is _ _ O
|Q| _ _ O
× _ _ O
|Γ| _ _ O
× _ _ O
|{L _ _ O
, _ _ O
R}| _ _ O
For _ _ O
simplicity _ _ O
, _ _ O
assume _ _ O
that _ _ O
for _ _ O
every _ _ O
combination _ _ O
of _ _ O
nonhalting _ _ O
state _ _ O
and _ _ O
tape _ _ O
symbol _ _ O
, _ _ O
there _ _ O
are _ _ O
exactly _ _ O
two _ _ O
moves _ _ O
( _ _ O
split _ _ O
to _ _ O
two _ _ O
machines _ _ O
) _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machine _ _ O
03 _ _ O

Proof _ _ O
Idea _ _ O
Computational _ _ O
Tree _ _ O
of _ _ O
a _ _ O
TM _ _ O
on _ _ O
an _ _ O
input _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
1 _ _ O
1 _ _ O
0 _ _ O
1 _ _ O
1 _ _ O
1 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
1 _ _ O
1 _ _ O
0 _ _ O
1 _ _ O
0 _ _ O
0 _ _ O
1 _ _ O
1 _ _ O
0 _ _ O
1 _ _ O
1 _ _ O
0 _ _ O
0 _ _ O
1 _ _ O
1 _ _ O
0 _ _ O
1 _ _ O
The _ _ O
branch _ _ O
in _ _ O
blue _ _ O
behaves _ _ O
like _ _ O
a _ _ O
deterministic _ _ O
TM _ _ O
The _ _ O
move _ _ O
follows _ _ O
the _ _ O
path _ _ O
in _ _ O
blue _ _ O
can _ _ O
be _ _ O
represented _ _ O
by _ _ O
0110 _ _ O
Use _ _ O
0110 _ _ O
as _ _ O
a _ _ O
guideline _ _ O
to _ _ O
simulate _ _ O
a _ _ O
branch _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machine _ _ O
03 _ _ O

Proof _ _ O
Idea _ _ O
Suppose _ _ O
a _ _ O
deterministic _ _ O
TM _ _ O
picks _ _ O
a _ _ O
branch _ _ O
and _ _ O
simulate _ _ O
it _ _ O
If _ _ O
that _ _ O
branch _ _ O
ends _ _ O
in _ _ O
the _ _ O
accept _ _ O
state _ _ O
, _ _ O
the _ _ O
NTM _ _ O
accepts _ _ O
the _ _ O
input _ _ O
string _ _ O
If _ _ O
that _ _ O
branch _ _ O
ends _ _ O
in _ _ O
the _ _ O
reject _ _ O
state _ _ O
, _ _ O
no _ _ O
conclusion _ _ O
If _ _ O
another _ _ O
branch _ _ O
is _ _ O
in _ _ O
the _ _ O
accept _ _ O
state _ _ O
, _ _ O
NTM _ _ O
accepts _ _ O
the _ _ O
input _ _ O
string _ _ O
If _ _ O
all _ _ O
other _ _ O
branches _ _ O
are _ _ O
in _ _ O
the _ _ O
reject _ _ O
state _ _ O
, _ _ O
NTM _ _ O
rejects _ _ O
the _ _ O
input _ _ O
string _ _ O
If _ _ O
no _ _ O
branch _ _ O
is _ _ O
in _ _ O
the _ _ O
accept _ _ O
state _ _ O
and _ _ O
at _ _ O
least _ _ O
one _ _ O
branch _ _ O
enter _ _ O
infinite _ _ O
loop _ _ O
, _ _ O
NTM _ _ O
loops _ _ O
indefinitely _ _ O
on _ _ O
the _ _ O
input _ _ O
string _ _ O
If _ _ O
that _ _ O
branch _ _ O
enter _ _ O
infinite _ _ O
loop _ _ O
, _ _ O
the _ _ O
simulation _ _ O
will _ _ O
not _ _ O
end _ _ O
We _ _ O
do _ _ O
not _ _ O
always _ _ O
know _ _ O
that _ _ O
a _ _ O
TM _ _ O
has _ _ O
enter _ _ O
an _ _ O
infinite _ _ O
loop _ _ O
Even _ _ O
if _ _ O
we _ _ O
know _ _ O
that _ _ O
it _ _ O
enters _ _ O
an _ _ O
infinite _ _ O
loop _ _ O
, _ _ O
we _ _ O
still _ _ O
can _ _ O
not _ _ O
conclude _ _ O
whether _ _ O
NTM _ _ O
accepts _ _ O
or _ _ O
rejects _ _ O
the _ _ O
input _ _ O
string _ _ O
Machine _ _ O
T _ _ O
0 _ _ O
that _ _ O
simulate _ _ O
an _ _ O
NTM _ _ O
will _ _ O
have _ _ O
to _ _ O
test _ _ O
all _ _ O
possible _ _ O
moves _ _ O
( _ _ O
level _ _ O
order _ _ O
, _ _ O
breadth _ _ O
first _ _ O
search _ _ O
) _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machine _ _ O
03 _ _ O

Proof _ _ O
Idea _ _ O
Machine _ _ O
T _ _ O
0 _ _ O
consists _ _ O
of _ _ O
four _ _ O
tapes _ _ O
Tape _ _ O
1 _ _ O
will _ _ O
be _ _ O
the _ _ O
input _ _ O
string _ _ O
and _ _ O
its _ _ O
contents _ _ O
never _ _ O
change _ _ O
Tape _ _ O
2 _ _ O
contain _ _ O
the _ _ O
binary _ _ O
string _ _ O
that _ _ O
represents _ _ O
the _ _ O
sequence _ _ O
of _ _ O
moves _ _ O
we _ _ O
are _ _ O
currently _ _ O
testing _ _ O
. _ _ O
( _ _ O
e.g. _ _ O
, _ _ O
0110 _ _ O
t _ _ O
) _ _ O
Tape _ _ O
3 _ _ O
is _ _ O
the _ _ O
working _ _ O
tape _ _ O
of _ _ O
a _ _ O
copy _ _ O
of _ _ O
NTM _ _ O
Tape _ _ O
4 _ _ O
keeps _ _ O
track _ _ O
of _ _ O
all _ _ O
possible _ _ O
reject _ _ O
sequences _ _ O
If _ _ O
a _ _ O
sequence _ _ O
of _ _ O
moves _ _ O
result _ _ O
in _ _ O
the _ _ O
accept _ _ O
state _ _ O
, _ _ O
T _ _ O
0 _ _ O
accepts _ _ O
the _ _ O
input _ _ O
string _ _ O
If _ _ O
all _ _ O
possible _ _ O
sequence _ _ O
of _ _ O
the _ _ O
same _ _ O
length _ _ O
end _ _ O
in _ _ O
the _ _ O
reject _ _ O
state _ _ O
, _ _ O
T _ _ O
0 _ _ O
rejects _ _ O
the _ _ O
input _ _ O
string _ _ O
If _ _ O
NTM _ _ O
loops _ _ O
indefinitely _ _ O
on _ _ O
the _ _ O
input _ _ O
string _ _ O
, _ _ O
the _ _ O
simulation _ _ O
will _ _ O
also _ _ O
loop _ _ O
indefinitely _ _ O
Since _ _ O
T _ _ O
0 _ _ O
is _ _ O
a _ _ O
multitape _ _ O
Turing _ _ O
machine _ _ O
, _ _ O
there _ _ O
is _ _ O
an _ _ O
equivalent _ _ O
single-tape _ _ O
Turing _ _ O
machine _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machine _ _ O
03 _ _ O

Universal _ _ O
Turing _ _ O
Machine _ _ O
A _ _ O
universal _ _ O
TM _ _ O
is _ _ O
a _ _ O
TM _ _ O
that _ _ O
can _ _ O
run _ _ O
another _ _ O
TM _ _ O
on _ _ O
an _ _ O
input _ _ O
string _ _ O
Imagine _ _ O
a _ _ O
multi-tape _ _ O
TM _ _ O
: _ _ O
Tape _ _ O
1 _ _ O
contains _ _ O
the _ _ O
formal _ _ O
definition _ _ O
of _ _ O
a _ _ O
TM _ _ O
M _ _ O
, _ _ O
followed _ _ O
by _ _ O
a _ _ O
# _ _ O
symbol _ _ O
, _ _ O
and _ _ O
an _ _ O
input _ _ O
string _ _ O
w _ _ O
Tape _ _ O
2 _ _ O
will _ _ O
be _ _ O
a _ _ O
working _ _ O
tape _ _ O
for _ _ O
TM _ _ O
M _ _ O
Tape _ _ O
3 _ _ O
will _ _ O
be _ _ O
used _ _ O
to _ _ O
keep _ _ O
track _ _ O
of _ _ O
the _ _ O
current _ _ O
state _ _ O
of _ _ O
TM _ _ O
M _ _ O
Initially _ _ O
: _ _ O
Copy _ _ O
input _ _ O
string _ _ O
w _ _ O
to _ _ O
tape _ _ O
2 _ _ O
Put _ _ O
the _ _ O
start _ _ O
state _ _ O
of _ _ O
TM _ _ O
M _ _ O
onto _ _ O
tape _ _ O
3 _ _ O
To _ _ O
run _ _ O
a _ _ O
step _ _ O
, _ _ O
simply _ _ O
search _ _ O
for _ _ O
δ _ _ O
( _ _ O
q _ _ O
, _ _ O
a _ _ O
) _ _ O
in _ _ O
the _ _ O
formal _ _ O
definition _ _ O
of _ _ O
TM _ _ O
M _ _ O
q _ _ O
is _ _ O
the _ _ O
current _ _ O
state _ _ O
of _ _ O
tape _ _ O
3 _ _ O
a _ _ O
is _ _ O
the _ _ O
symbol _ _ O
under _ _ O
the _ _ O
second _ _ O
tape _ _ O
head _ _ O
and _ _ O
update _ _ O
tapes _ _ O
2 _ _ O
and _ _ O
3 _ _ O
until _ _ O
tape _ _ O
3 _ _ O
contains _ _ O
qaccept _ _ O
or _ _ O
qreject _ _ O
A _ _ O
universal _ _ O
TM _ _ O
will _ _ O
loop _ _ O
indefinitely _ _ O
if _ _ O
the _ _ O
TM _ _ O
that _ _ O
it _ _ O
is _ _ O
running _ _ O
loop _ _ O
indefinitely _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machine _ _ O
03 _ _ O

The _ _ O
Church-Turing _ _ O
Thesis _ _ O
To _ _ O
say _ _ O
that _ _ O
the _ _ O
Turing _ _ O
machine _ _ O
is _ _ O
a _ _ O
general _ _ O
model _ _ O
of _ _ O
computation _ _ O
means _ _ O
that _ _ O
any _ _ O
algorithmic _ _ O
procedure _ _ O
that _ _ O
can _ _ O
be _ _ O
carried _ _ O
out _ _ O
at _ _ O
all _ _ O
, _ _ O
by _ _ O
a _ _ O
human _ _ O
computer _ _ O
or _ _ O
a _ _ O
team _ _ O
of _ _ O
humans _ _ O
or _ _ O
an _ _ O
electronic _ _ O
computer _ _ O
, _ _ O
can _ _ O
be _ _ O
carried _ _ O
out _ _ O
by _ _ O
a _ _ O
Turing _ _ O
machine _ _ O
. _ _ O
Note _ _ O
that _ _ O
a _ _ O
Turing _ _ O
machine _ _ O
depends _ _ O
on _ _ O
low-level _ _ O
operations _ _ O
A _ _ O
complex _ _ O
algorithm _ _ O
is _ _ O
simply _ _ O
a _ _ O
series _ _ O
of _ _ O
simple _ _ O
instruction _ _ O
( _ _ O
e.g. _ _ O
, _ _ O
assembly _ _ O
) _ _ O
that _ _ O
involve _ _ O
sophisticated _ _ O
logic _ _ O
( _ _ O
state _ _ O
machine _ _ O
) _ _ O
or _ _ O
complex _ _ O
bookkeeping _ _ O
( _ _ O
tape _ _ O
/ _ _ O
memory _ _ O
) _ _ O
strategies _ _ O
An _ _ O
algorithm _ _ O
is _ _ O
a _ _ O
procedure _ _ O
that _ _ O
can _ _ O
be _ _ O
carried _ _ O
out _ _ O
by _ _ O
a _ _ O
Turing _ _ O
machine _ _ O
. _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machine _ _ O
03 _ _ O



