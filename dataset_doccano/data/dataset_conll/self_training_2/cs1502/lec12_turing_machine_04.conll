self_training_2|cs1502|lec12_turing_machine_04
-DOCSTART- -X- -X- O

Turing _ _ O
Machine _ _ O
04 _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machine _ _ O
04 _ _ O

Recognizable _ _ O
and _ _ O
Decidable _ _ O
Given _ _ O
a _ _ O
language _ _ O
R _ _ O
, _ _ O
if _ _ O
some _ _ O
Turing _ _ O
machines _ _ O
accept _ _ O
every _ _ O
strings _ _ O
s _ _ O
∈ _ _ O
R _ _ O
and _ _ O
does _ _ O
not _ _ O
accept _ _ O
( _ _ O
either _ _ O
reject _ _ O
or _ _ O
loop _ _ O
indefinitely _ _ O
) _ _ O
every _ _ O
string _ _ O
s _ _ O
6∈ _ _ O
R _ _ O
, _ _ O
we _ _ O
say _ _ O
that _ _ O
“ _ _ O
R _ _ O
is _ _ O
recognizable _ _ O
” _ _ O
Note _ _ O
that _ _ O
these _ _ O
machines _ _ O
must _ _ O
accept _ _ O
on _ _ O
all _ _ O
input _ _ O
s _ _ O
∈ _ _ O
R _ _ O
However _ _ O
, _ _ O
if _ _ O
s _ _ O
6∈ _ _ O
R _ _ O
, _ _ O
these _ _ O
machines _ _ O
either _ _ O
reject _ _ O
or _ _ O
loop _ _ O
infinitely _ _ O
Given _ _ O
a _ _ O
language _ _ O
D _ _ O
, _ _ O
if _ _ O
some _ _ O
Turing _ _ O
machine _ _ O
accept _ _ O
every _ _ O
strings _ _ O
s _ _ O
∈ _ _ O
D _ _ O
and _ _ O
rejects _ _ O
every _ _ O
string _ _ O
s _ _ O
6∈ _ _ O
D _ _ O
, _ _ O
we _ _ O
say _ _ O
that _ _ O
“ _ _ O
D _ _ O
is _ _ O
decidable _ _ O
” _ _ O
Note _ _ O
that _ _ O
these _ _ O
Turing _ _ O
machines _ _ O
must _ _ O
be _ _ O
deciders _ _ O
These _ _ O
machine _ _ O
either _ _ O
accept _ _ O
or _ _ O
reject _ _ O
on _ _ O
all _ _ O
input _ _ O
strings _ _ O
These _ _ O
machine _ _ O
will _ _ O
not _ _ O
loop _ _ O
indefinitely _ _ O
on _ _ O
any _ _ O
strings _ _ O
If _ _ O
D _ _ O
is _ _ O
decidable _ _ O
, _ _ O
D _ _ O
is _ _ O
also _ _ O
recognizable _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machine _ _ O
04 _ _ O

Decidable _ _ O
Language _ _ O
Following _ _ O
languages _ _ O
are _ _ O
examples _ _ O
of _ _ O
decidable _ _ O
languages _ _ O
: _ _ O
n _ _ O
A _ _ O
= _ _ O
{ _ _ O
02 _ _ O
| _ _ O
n _ _ O
≥ _ _ O
0 _ _ O
} _ _ O
B _ _ O
= _ _ O
{ _ _ O
w#w _ _ O
| _ _ O
w _ _ O
∈ _ _ O
Σ∗ _ _ O
} _ _ O
We _ _ O
already _ _ O
demonstrated _ _ O
that _ _ O
there _ _ O
exists _ _ O
Turing _ _ O
machines _ _ O
( _ _ O
deciders _ _ O
) _ _ O
that _ _ O
decide _ _ O
above _ _ O
languages _ _ O
There _ _ O
are _ _ O
some _ _ O
languages _ _ O
that _ _ O
are _ _ O
recognizable _ _ O
but _ _ O
not _ _ O
decidable _ _ O
Suppose _ _ O
R _ _ O
is _ _ O
recognizable _ _ O
but _ _ O
not _ _ O
decidable _ _ O
There _ _ O
are _ _ O
TMs _ _ O
that _ _ O
accept _ _ O
all _ _ O
strings _ _ O
in _ _ O
R _ _ O
and _ _ O
does _ _ O
not _ _ O
accept _ _ O
all _ _ O
strings _ _ O
not _ _ O
in _ _ O
R _ _ O
No _ _ O
TM _ _ O
can _ _ O
accept _ _ O
all _ _ O
strings _ _ O
in _ _ O
R _ _ O
and _ _ O
reject _ _ O
all _ _ O
strings _ _ O
not _ _ O
in _ _ O
R _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machine _ _ O
04 _ _ O

Undecidable _ _ O
Language _ _ O
Consider _ _ O
a _ _ O
polynomial _ _ O
: _ _ O
6x3 _ _ O
yz _ _ O
2 _ _ O
+ _ _ O
3xy _ _ O
2 _ _ O
− _ _ O
x3 _ _ O
− _ _ O
10 _ _ O
A _ _ O
root _ _ O
of _ _ O
a _ _ O
polynomial _ _ O
is _ _ O
an _ _ O
assignment _ _ O
to _ _ O
its _ _ O
variables _ _ O
which _ _ O
results _ _ O
in _ _ O
that _ _ O
value _ _ O
of _ _ O
polynomial _ _ O
is _ _ O
0 _ _ O
A _ _ O
polynomial _ _ O
has _ _ O
an _ _ O
integral _ _ O
root _ _ O
if _ _ O
all _ _ O
variables _ _ O
are _ _ O
assigned _ _ O
integer _ _ O
values _ _ O
The _ _ O
above _ _ O
polynomial _ _ O
has _ _ O
an _ _ O
integral _ _ O
root _ _ O
x _ _ O
= _ _ O
5 _ _ O
, _ _ O
y _ _ O
= _ _ O
3 _ _ O
, _ _ O
and _ _ O
z=0 _ _ O
Given _ _ O
a _ _ O
polynomial _ _ O
with _ _ O
an _ _ O
integral _ _ O
root _ _ O
, _ _ O
can _ _ O
you _ _ O
find _ _ O
out _ _ O
its _ _ O
root _ _ O
? _ _ O
Yes _ _ O
, _ _ O
brute _ _ O
force _ _ O
Given _ _ O
a _ _ O
polynomial _ _ O
, _ _ O
can _ _ O
you _ _ O
find _ _ O
out _ _ O
whether _ _ O
it _ _ O
has _ _ O
an _ _ O
integral _ _ O
root _ _ O
? _ _ O
Not _ _ O
always _ _ O
Hilbert _ _ O
’s _ _ O
tenth _ _ O
problem _ _ O
stated _ _ O
that _ _ O
there _ _ O
is _ _ O
no _ _ O
algorithm _ _ O
that _ _ O
tests _ _ O
whether _ _ O
a _ _ O
polynomial _ _ O
has _ _ O
an _ _ O
integral _ _ O
root _ _ O
. _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machine _ _ O
04 _ _ O

Undecidable _ _ O
Language _ _ O
Let _ _ O
hxi _ _ O
be _ _ O
a _ _ O
string _ _ O
representation _ _ O
of _ _ O
the _ _ O
object _ _ O
x _ _ O
Let _ _ O
D _ _ O
be _ _ O
the _ _ O
set _ _ O
of _ _ O
all _ _ O
string _ _ O
representations _ _ O
of _ _ O
polynomials _ _ O
that _ _ O
have _ _ O
integral _ _ O
root _ _ O
Formally _ _ O
D _ _ O
= _ _ O
{ _ _ O
hpi _ _ O
| _ _ O
p _ _ O
is _ _ O
a _ _ O
polynomial _ _ O
with _ _ O
an _ _ O
integral _ _ O
root _ _ O
} _ _ O
Given _ _ O
hpi _ _ O
( _ _ O
a _ _ O
string _ _ O
representation _ _ O
of _ _ O
a _ _ O
polynomial _ _ O
p _ _ O
) _ _ O
, _ _ O
if _ _ O
a _ _ O
Turing _ _ O
machine _ _ O
can _ _ O
decide _ _ O
whether _ _ O
hpi _ _ O
∈ _ _ O
D _ _ O
( _ _ O
polynomial _ _ O
p _ _ O
has _ _ O
an _ _ O
integral _ _ O
root _ _ O
) _ _ O
or _ _ O
hpi _ _ O
6∈ _ _ O
D _ _ O
( _ _ O
polynomial _ _ O
p _ _ O
does _ _ O
not _ _ O
have _ _ O
an _ _ O
integral _ _ O
root _ _ O
) _ _ O
D _ _ O
is _ _ O
decidable _ _ O
Hilbert _ _ O
’s _ _ O
tenth _ _ O
problem _ _ O
simply _ _ O
stated _ _ O
that _ _ O
D _ _ O
is _ _ O
not _ _ O
decidable _ _ O
. _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machine _ _ O
04 _ _ O

Undecidable _ _ O
Language _ _ O
Consider _ _ O
polynomials _ _ O
with _ _ O
one _ _ O
variable _ _ O
( _ _ O
e.g. _ _ O
, _ _ O
2x2 _ _ O
+ _ _ O
x _ _ O
− _ _ O
7 _ _ O
) _ _ O
Let _ _ O
D1 _ _ O
= _ _ O
{ _ _ O
hpi _ _ O
| _ _ O
hpi _ _ O
is _ _ O
a _ _ O
polynomial _ _ O
over _ _ O
x _ _ O
with _ _ O
an _ _ O
integral _ _ O
root _ _ O
} _ _ O
Is _ _ O
D1 _ _ O
recognizable _ _ O
? _ _ O
Yes _ _ O
, _ _ O
if _ _ O
there _ _ O
exists _ _ O
a _ _ O
Turing _ _ O
machine _ _ O
that _ _ O
accepts _ _ O
every _ _ O
hpi _ _ O
∈ _ _ O
D1 _ _ O
and _ _ O
does _ _ O
not _ _ O
accept _ _ O
every _ _ O
hpi _ _ O
6∈ _ _ O
D1 _ _ O
Example _ _ O
: _ _ O
M1 _ _ O
that _ _ O
recognizes _ _ O
D1 _ _ O
using _ _ O
a _ _ O
brute _ _ O
force _ _ O
algorithm _ _ O
in _ _ O
high-level _ _ O
definition _ _ O
M1 _ _ O
= _ _ O
“ _ _ O
On _ _ O
input _ _ O
hpi _ _ O
where _ _ O
p _ _ O
is _ _ O
a _ _ O
polynomial _ _ O
over _ _ O
the _ _ O
variable _ _ O
x _ _ O
: _ _ O
1 _ _ O
Evaluate _ _ O
p _ _ O
with _ _ O
x _ _ O
set _ _ O
successively _ _ O
to _ _ O
the _ _ O
value _ _ O
0 _ _ O
, _ _ O
1 _ _ O
, _ _ O
-1 _ _ O
, _ _ O
2 _ _ O
, _ _ O
-2 _ _ O
, _ _ O
3 _ _ O
, _ _ O
-3 _ _ O
, _ _ O
. _ _ O
. _ _ O
. _ _ O
. _ _ O
If _ _ O
at _ _ O
any _ _ O
point _ _ O
the _ _ O
polynomial _ _ O
evaluates _ _ O
to _ _ O
0 _ _ O
, _ _ O
accept _ _ O
” _ _ O
Note _ _ O
that _ _ O
M1 _ _ O
accepts _ _ O
all _ _ O
hpi _ _ O
∈ _ _ O
D1 _ _ O
and _ _ O
loop _ _ O
indefinitely _ _ O
on _ _ O
all _ _ O
hpi _ _ O
6∈ _ _ O
D1 _ _ O
Therefore _ _ O
, _ _ O
D1 _ _ O
is _ _ O
recognizable _ _ O
. _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machine _ _ O
04 _ _ O

Undecidable _ _ O
Language _ _ O
Consider _ _ O
polynomials _ _ O
with _ _ O
one _ _ O
variable _ _ O
( _ _ O
e.g. _ _ O
, _ _ O
2x2 _ _ O
+ _ _ O
x _ _ O
− _ _ O
7 _ _ O
) _ _ O
Let _ _ O
D1 _ _ O
= _ _ O
{ _ _ O
hpi _ _ O
| _ _ O
hpi _ _ O
is _ _ O
a _ _ O
polynomial _ _ O
over _ _ O
x _ _ O
with _ _ O
an _ _ O
integral _ _ O
root _ _ O
} _ _ O
Is _ _ O
D1 _ _ O
decidable _ _ O
? _ _ O
Yes _ _ O
, _ _ O
if _ _ O
there _ _ O
exists _ _ O
a _ _ O
Turing _ _ O
machine _ _ O
that _ _ O
accepts _ _ O
every _ _ O
hpi _ _ O
∈ _ _ O
D1 _ _ O
and _ _ O
rejects _ _ O
every _ _ O
hpi _ _ O
6∈ _ _ O
D1 _ _ O
Luckily _ _ O
there _ _ O
is _ _ O
an _ _ O
upper _ _ O
/ _ _ O
lower _ _ O
bound _ _ O
of _ _ O
the _ _ O
value _ _ O
of _ _ O
x _ _ O
that _ _ O
a _ _ O
machine _ _ O
needs _ _ O
to _ _ O
test _ _ O
: _ _ O
±k _ _ O
cmax _ _ O
c1 _ _ O
where _ _ O
k _ _ O
is _ _ O
the _ _ O
number _ _ O
of _ _ O
terms _ _ O
in _ _ O
the _ _ O
polynomial _ _ O
, _ _ O
cmax _ _ O
is _ _ O
the _ _ O
coefficient _ _ O
with _ _ O
the _ _ O
largest _ _ O
absolute _ _ O
value _ _ O
, _ _ O
and _ _ O
c1 _ _ O
is _ _ O
the _ _ O
coefficient _ _ O
of _ _ O
the _ _ O
highest _ _ O
order _ _ O
term _ _ O
Change _ _ O
M1 _ _ O
such _ _ O
that _ _ O
it _ _ O
rejects _ _ O
after _ _ O
testing _ _ O
value _ _ O
goes _ _ O
out-of-bound _ _ O
Therefore _ _ O
, _ _ O
D1 _ _ O
is _ _ O
decidable _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machine _ _ O
04 _ _ O

Undecidable _ _ O
Language _ _ O
Let _ _ O
D _ _ O
be _ _ O
the _ _ O
set _ _ O
of _ _ O
all _ _ O
polynomials _ _ O
that _ _ O
have _ _ O
integral _ _ O
root _ _ O
D _ _ O
= _ _ O
{ _ _ O
hpi _ _ O
| _ _ O
hpi _ _ O
is _ _ O
a _ _ O
polynomial _ _ O
with _ _ O
an _ _ O
integral _ _ O
root _ _ O
} _ _ O
We _ _ O
can _ _ O
create _ _ O
a _ _ O
machine _ _ O
that _ _ O
tries _ _ O
all _ _ O
possible _ _ O
assignment _ _ O
values _ _ O
starting _ _ O
from _ _ O
0s _ _ O
For _ _ O
example _ _ O
, _ _ O
in _ _ O
case _ _ O
of _ _ O
two _ _ O
variables _ _ O
x _ _ O
and _ _ O
y _ _ O
, _ _ O
try _ _ O
the _ _ O
following _ _ O
values _ _ O
[ _ _ O
x _ _ O
, _ _ O
y _ _ O
] _ _ O
: _ _ O
[ _ _ O
0 _ _ O
, _ _ O
0 _ _ O
] _ _ O
, _ _ O
[ _ _ O
0 _ _ O
, _ _ O
1 _ _ O
] _ _ O
, _ _ O
[ _ _ O
1 _ _ O
, _ _ O
0 _ _ O
] _ _ O
, _ _ O
[ _ _ O
1 _ _ O
, _ _ O
1 _ _ O
] _ _ O
, _ _ O
[ _ _ O
0 _ _ O
, _ _ O
−1 _ _ O
] _ _ O
, _ _ O
[ _ _ O
−1 _ _ O
, _ _ O
0 _ _ O
] _ _ O
, _ _ O
[ _ _ O
−1 _ _ O
, _ _ O
−1 _ _ O
] _ _ O
, _ _ O
[ _ _ O
0 _ _ O
, _ _ O
2 _ _ O
] _ _ O
, _ _ O
. _ _ O
. _ _ O
. _ _ O
If _ _ O
a _ _ O
polynomial _ _ O
p _ _ O
has _ _ O
an _ _ O
integral _ _ O
root _ _ O
, _ _ O
eventually _ _ O
it _ _ O
will _ _ O
be _ _ O
evaluated _ _ O
to _ _ O
0 _ _ O
Therefore _ _ O
, _ _ O
D _ _ O
is _ _ O
recognizable _ _ O
Unfortunately _ _ O
, _ _ O
there _ _ O
is _ _ O
no _ _ O
bound _ _ O
that _ _ O
we _ _ O
can _ _ O
check _ _ O
and _ _ O
machine _ _ O
may _ _ O
loop _ _ O
infinitely _ _ O
If _ _ O
the _ _ O
polynomial _ _ O
p _ _ O
does _ _ O
not _ _ O
have _ _ O
an _ _ O
integral _ _ O
root _ _ O
, _ _ O
we _ _ O
will _ _ O
keep _ _ O
trying _ _ O
new _ _ O
values _ _ O
of _ _ O
[ _ _ O
x _ _ O
, _ _ O
y _ _ O
] _ _ O
forever _ _ O
( _ _ O
loop _ _ O
indefinitely _ _ O
) _ _ O
D _ _ O
is _ _ O
not _ _ O
decidable _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machine _ _ O
04 _ _ O

Describing _ _ O
Turing _ _ O
Machines _ _ O
A _ _ O
description _ _ O
of _ _ O
a _ _ O
Turing _ _ O
machine _ _ O
can _ _ O
be _ _ O
huge _ _ O
even _ _ O
for _ _ O
a _ _ O
very _ _ O
simple _ _ O
algorithm _ _ O
Example _ _ O
, _ _ O
compare _ _ O
two _ _ O
strings _ _ O
{ _ _ O
w#w _ _ O
| _ _ O
w _ _ O
∈ _ _ O
{ _ _ O
0 _ _ O
, _ _ O
1}∗ _ _ O
} _ _ O
1 _ _ O
x _ _ O
, _ _ O
R _ _ O
q1 _ _ O
0 _ _ O
R _ _ O
x _ _ O
, _ _ O
→ _ _ O
→ _ _ O
# _ _ O
→R _ _ O
0 _ _ O
, _ _ O
1 _ _ O
→ _ _ O
R _ _ O
x→R _ _ O
x→R _ _ O
q8 _ _ O
q2 _ _ O
# _ _ O
→R _ _ O
t _ _ O
# _ _ O
→R _ _ O
qaccept _ _ O
q4 _ _ O
0 _ _ O
, _ _ O
1 _ _ O
→ _ _ O
R _ _ O
q3 _ _ O
→R _ _ O
q5 _ _ O
0 _ _ O
1 _ _ O
L _ _ O
x _ _ O
, _ _ O
→ _ _ O
→ _ _ O
x _ _ O
, _ _ O
L _ _ O
x→R _ _ O
0 _ _ O
, _ _ O
1 _ _ O
, _ _ O
x _ _ O
→ _ _ O
L _ _ O
q6 _ _ O
# _ _ O
→L _ _ O
x→R _ _ O
q7 _ _ O
0 _ _ O
, _ _ O
1 _ _ O
→ _ _ O
L _ _ O
The _ _ O
above _ _ O
state _ _ O
diagram _ _ O
represents _ _ O
the _ _ O
formal _ _ O
description _ _ O
in _ _ O
a _ _ O
form _ _ O
of _ _ O
state _ _ O
diagram _ _ O
of _ _ O
a _ _ O
Turing _ _ O
machine _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machine _ _ O
04 _ _ O

Describing _ _ O
Turing _ _ O
Machines _ _ O
An _ _ O
implementation _ _ O
description _ _ O
of _ _ O
the _ _ O
previous _ _ O
Turing _ _ O
machine _ _ O
that _ _ O
decides _ _ O
{ _ _ O
w#w _ _ O
| _ _ O
w _ _ O
∈ _ _ O
{ _ _ O
0 _ _ O
, _ _ O
1}∗ _ _ O
} _ _ O
is _ _ O
shown _ _ O
below _ _ O
On _ _ O
input _ _ O
string _ _ O
w _ _ O
: _ _ O
1 _ _ O
2 _ _ O
Zig-zag _ _ O
across _ _ O
the _ _ O
tape _ _ O
to _ _ O
corresponding _ _ O
positions _ _ O
on _ _ O
either _ _ O
side _ _ O
of _ _ O
the _ _ O
# _ _ O
symbol _ _ O
to _ _ O
check _ _ O
whether _ _ O
those _ _ O
positions _ _ O
contain _ _ O
the _ _ O
same _ _ O
symbol _ _ O
. _ _ O
If _ _ O
they _ _ O
do _ _ O
not _ _ O
, _ _ O
or _ _ O
if _ _ O
no _ _ O
# _ _ O
is _ _ O
found _ _ O
, _ _ O
reject _ _ O
. _ _ O
Cross _ _ O
off _ _ O
symbols _ _ O
as _ _ O
they _ _ O
are _ _ O
checked _ _ O
to _ _ O
keep _ _ O
track _ _ O
of _ _ O
which _ _ O
symbols _ _ O
correspond _ _ O
. _ _ O
When _ _ O
all _ _ O
symbols _ _ O
to _ _ O
the _ _ O
left _ _ O
of _ _ O
the _ _ O
# _ _ O
have _ _ O
been _ _ O
crossed _ _ O
off _ _ O
, _ _ O
check _ _ O
for _ _ O
any _ _ O
remaining _ _ O
symbols _ _ O
to _ _ O
the _ _ O
right _ _ O
of _ _ O
the _ _ O
# _ _ O
. _ _ O
If _ _ O
any _ _ O
symbols _ _ O
remain _ _ O
, _ _ O
reject _ _ O
; _ _ O
otherwise _ _ O
, _ _ O
accept _ _ O
. _ _ O
Note _ _ O
that _ _ O
the _ _ O
above _ _ O
description _ _ O
describes _ _ O
the _ _ O
way _ _ O
the _ _ O
Turing _ _ O
machine _ _ O
moves _ _ O
its _ _ O
head _ _ O
and _ _ O
store _ _ O
data _ _ O
( _ _ O
cross _ _ O
off _ _ O
symbols _ _ O
) _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machine _ _ O
04 _ _ O

Describing _ _ O
Turing _ _ O
Machines _ _ O
An _ _ O
high-level _ _ O
description _ _ O
of _ _ O
the _ _ O
previous _ _ O
Turing _ _ O
machine _ _ O
that _ _ O
decides _ _ O
{ _ _ O
w#w _ _ O
| _ _ O
w _ _ O
∈ _ _ O
{ _ _ O
0 _ _ O
, _ _ O
1}∗ _ _ O
} _ _ O
is _ _ O
shown _ _ O
below _ _ O
: _ _ O
M _ _ O
= _ _ O
“ _ _ O
On _ _ O
input _ _ O
s _ _ O
where _ _ O
s _ _ O
= _ _ O
x#y _ _ O
for _ _ O
some _ _ O
string _ _ O
x _ _ O
and _ _ O
y _ _ O
: _ _ O
1 _ _ O
2 _ _ O
Compare _ _ O
whether _ _ O
the _ _ O
string _ _ O
x _ _ O
is _ _ O
identical _ _ O
to _ _ O
the _ _ O
string _ _ O
y. _ _ O
If _ _ O
they _ _ O
are _ _ O
identical _ _ O
, _ _ O
accept _ _ O
; _ _ O
otherwise _ _ O
, _ _ O
reject _ _ O
. _ _ O
” _ _ O
Note _ _ O
that _ _ O
the _ _ O
where _ _ O
clause _ _ O
behaves _ _ O
like _ _ O
a _ _ O
filter _ _ O
Any _ _ O
string _ _ O
that _ _ O
does _ _ O
not _ _ O
satisfy _ _ O
the _ _ O
where _ _ O
clause _ _ O
will _ _ O
be _ _ O
rejected _ _ O
immediately _ _ O
What _ _ O
a _ _ O
TM _ _ O
can _ _ O
do _ _ O
? _ _ O
From _ _ O
the _ _ O
Church-Turing _ _ O
thesis _ _ O
, _ _ O
if _ _ O
there _ _ O
is _ _ O
an _ _ O
algorithm _ _ O
to _ _ O
do _ _ O
something _ _ O
, _ _ O
a _ _ O
TM _ _ O
can _ _ O
do _ _ O
the _ _ O
same _ _ O
thing _ _ O
Examples _ _ O
: _ _ O
Compare _ _ O
two _ _ O
strings _ _ O
Check _ _ O
whether _ _ O
the _ _ O
length _ _ O
of _ _ O
a _ _ O
string _ _ O
is _ _ O
a _ _ O
power _ _ O
of _ _ O
2 _ _ O
Addition _ _ O
, _ _ O
subtraction _ _ O
, _ _ O
multiplication _ _ O
, _ _ O
division _ _ O
, _ _ O
modulo _ _ O
Any _ _ O
algorithms _ _ O
discussed _ _ O
in _ _ O
Chapter _ _ O
1 _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machine _ _ O
04 _ _ O

Describing _ _ O
Turing _ _ O
Machines _ _ O
High-level _ _ O
description _ _ O
of _ _ O
a _ _ O
Turing _ _ O
machine _ _ O
is _ _ O
suitable _ _ O
for _ _ O
describing _ _ O
universal _ _ O
Turing _ _ O
machine _ _ O
Consider _ _ O
the _ _ O
following _ _ O
language _ _ O
: _ _ O
A _ _ O
= _ _ O
{ _ _ O
x1 _ _ O
# _ _ O
x2 _ _ O
# _ _ O
. _ _ O
. _ _ O
. _ _ O
# _ _ O
xn _ _ O
| _ _ O
xi _ _ O
= _ _ O
xj _ _ O
for _ _ O
every _ _ O
i _ _ O
and _ _ O
j _ _ O
} _ _ O
The _ _ O
following _ _ O
machine _ _ O
M _ _ O
0 _ _ O
decides _ _ O
A _ _ O
using _ _ O
TM _ _ O
M _ _ O
as _ _ O
a _ _ O
subroutine _ _ O
: _ _ O
M _ _ O
0 _ _ O
= _ _ O
“ _ _ O
On _ _ O
input _ _ O
s _ _ O
where _ _ O
s _ _ O
= _ _ O
x1 _ _ O
# _ _ O
x2 _ _ O
# _ _ O
. _ _ O
. _ _ O
. _ _ O
# _ _ O
xn _ _ O
: _ _ O
1 _ _ O
2 _ _ O
3 _ _ O
4 _ _ O
For _ _ O
every _ _ O
i _ _ O
where _ _ O
1 _ _ O
≤ _ _ O
i _ _ O
≤ _ _ O
n _ _ O
− _ _ O
1 _ _ O
: _ _ O
Run _ _ O
M _ _ O
on _ _ O
input _ _ O
xi _ _ O
# _ _ O
xi+1 _ _ O
. _ _ O
If _ _ O
M _ _ O
rejects _ _ O
, _ _ O
reject _ _ O
. _ _ O
accept _ _ O
” _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machine _ _ O
04 _ _ O

Conclusions _ _ O
Algorithm _ _ O
and _ _ O
Turing _ _ O
Machine _ _ O
are _ _ O
consider _ _ O
equivalent _ _ O
Anything _ _ O
that _ _ O
an _ _ O
algorithm _ _ O
can _ _ O
do _ _ O
, _ _ O
there _ _ O
exists _ _ O
a _ _ O
TM _ _ O
that _ _ O
can _ _ O
do _ _ O
the _ _ O
same _ _ O
thing _ _ O
Simply _ _ O
convert _ _ O
the _ _ O
algorithm _ _ O
to _ _ O
TM _ _ O
Anything _ _ O
that _ _ O
a _ _ O
Turing _ _ O
machine _ _ O
can _ _ O
do _ _ O
, _ _ O
there _ _ O
exists _ _ O
an _ _ O
algorithm _ _ O
that _ _ O
can _ _ O
do _ _ O
the _ _ O
same _ _ O
thing _ _ O
Simply _ _ O
convert _ _ O
the _ _ O
TM _ _ O
to _ _ O
algorithm _ _ O
Because _ _ O
of _ _ O
this _ _ O
, _ _ O
if _ _ O
there _ _ O
is _ _ O
a _ _ O
problem _ _ O
that _ _ O
a _ _ O
TM _ _ O
can _ _ O
not _ _ O
solve _ _ O
, _ _ O
no _ _ O
algorithm _ _ O
can _ _ O
solve _ _ O
the _ _ O
same _ _ O
thing _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machine _ _ O
04 _ _ O



