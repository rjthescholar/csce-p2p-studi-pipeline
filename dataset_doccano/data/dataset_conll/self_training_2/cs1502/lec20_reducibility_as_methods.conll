self_training_2|cs1502|lec20_reducibility_as_methods
-DOCSTART- -X- -X- O

Turing _ _ O
Machines _ _ O
as _ _ O
Methods _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machines _ _ O
as _ _ O
Methods _ _ O

Language _ _ O
of _ _ O
a _ _ O
Turing _ _ O
Machine _ _ O
The _ _ O
language _ _ O
of _ _ O
a _ _ O
Turing _ _ O
machine _ _ O
M _ _ O
denoted _ _ O
by _ _ O
L _ _ O
( _ _ O
M _ _ O
) _ _ O
is _ _ O
the _ _ O
set _ _ O
of _ _ O
all _ _ O
strings _ _ O
accepted _ _ O
by _ _ O
the _ _ O
Turing _ _ O
machine _ _ O
Given _ _ O
a _ _ O
Turing _ _ O
machine _ _ O
M _ _ O
and _ _ O
a _ _ O
string _ _ O
w _ _ O
If _ _ O
M _ _ O
accepts _ _ O
w _ _ O
, _ _ O
w _ _ O
∈ _ _ O
L _ _ O
( _ _ O
M _ _ O
) _ _ O
If _ _ O
M _ _ O
rejects _ _ O
w _ _ O
, _ _ O
w _ _ O
6∈ _ _ O
L _ _ O
( _ _ O
M _ _ O
) _ _ O
If _ _ O
M _ _ O
loops _ _ O
indefinitely _ _ O
on _ _ O
w _ _ O
, _ _ O
w _ _ O
6∈ _ _ O
L _ _ O
( _ _ O
M _ _ O
) _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machines _ _ O
as _ _ O
Methods _ _ O

Language _ _ O
of _ _ O
a _ _ O
Method _ _ O
Lets _ _ O
think _ _ O
about _ _ O
Turing _ _ O
machines _ _ O
as _ _ O
Java _ _ O
methods _ _ O
with _ _ O
the _ _ O
following _ _ O
signature _ _ O
: _ _ O
boolean _ _ O
method_name _ _ O
( _ _ O
String _ _ O
x _ _ O
) _ _ O
Lets _ _ O
true _ _ O
in _ _ O
Java _ _ O
means _ _ O
accept _ _ O
false _ _ O
in _ _ O
Java _ _ O
means _ _ O
reject _ _ O
Now _ _ O
, _ _ O
we _ _ O
can _ _ O
define _ _ O
the _ _ O
language _ _ O
of _ _ O
a _ _ O
method _ _ O
as _ _ O
the _ _ O
set _ _ O
of _ _ O
all _ _ O
strings _ _ O
that _ _ O
the _ _ O
method _ _ O
returns _ _ O
true _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machines _ _ O
as _ _ O
Methods _ _ O

Language _ _ O
of _ _ O
a _ _ O
Method _ _ O
Consider _ _ O
the _ _ O
following _ _ O
method _ _ O
boolean _ _ O
M1 _ _ O
( _ _ O
String _ _ O
x _ _ O
) _ _ O
{ _ _ O
return _ _ O
true _ _ O
; _ _ O
} _ _ O
What _ _ O
is _ _ O
the _ _ O
language _ _ O
of _ _ O
the _ _ O
above _ _ O
method _ _ O
? _ _ O
Obviously _ _ O
, _ _ O
M1 _ _ O
( _ _ O
) _ _ O
returns _ _ O
true _ _ O
no _ _ O
matter _ _ O
what _ _ O
argument _ _ O
of _ _ O
type _ _ O
String _ _ O
you _ _ O
use _ _ O
Thus _ _ O
, _ _ O
the _ _ O
language _ _ O
of _ _ O
the _ _ O
method _ _ O
M1 _ _ O
( _ _ O
) _ _ O
is _ _ O
Σ∗ _ _ O
The _ _ O
above _ _ O
method _ _ O
is _ _ O
pretty _ _ O
much _ _ O
the _ _ O
same _ _ O
as _ _ O
the _ _ O
Turing _ _ O
machine _ _ O
below _ _ O
: _ _ O
M1 _ _ O
= _ _ O
“ _ _ O
On _ _ O
input _ _ O
x _ _ O
: _ _ O
1 _ _ O
accept _ _ O
” _ _ O
Note _ _ O
that _ _ O
L _ _ O
( _ _ O
M1 _ _ O
) _ _ O
= _ _ O
Σ∗ _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machines _ _ O
as _ _ O
Methods _ _ O

Language _ _ O
of _ _ O
a _ _ O
Method _ _ O
Consider _ _ O
the _ _ O
following _ _ O
method _ _ O
boolean _ _ O
M2 _ _ O
( _ _ O
String _ _ O
x _ _ O
) _ _ O
{ _ _ O
return _ _ O
false _ _ O
; _ _ O
} _ _ O
What _ _ O
is _ _ O
the _ _ O
language _ _ O
of _ _ O
the _ _ O
above _ _ O
method _ _ O
? _ _ O
Obviously _ _ O
, _ _ O
M2 _ _ O
( _ _ O
) _ _ O
returns _ _ O
false _ _ O
no _ _ O
matter _ _ O
what _ _ O
argument _ _ O
of _ _ O
type _ _ O
String _ _ O
you _ _ O
use _ _ O
Thus _ _ O
, _ _ O
the _ _ O
language _ _ O
of _ _ O
the _ _ O
method _ _ O
M2 _ _ O
( _ _ O
) _ _ O
is _ _ O
∅ _ _ O
The _ _ O
above _ _ O
method _ _ O
is _ _ O
pretty _ _ O
much _ _ O
the _ _ O
same _ _ O
as _ _ O
the _ _ O
Turing _ _ O
machine _ _ O
below _ _ O
: _ _ O
M2 _ _ O
= _ _ O
“ _ _ O
On _ _ O
input _ _ O
x _ _ O
: _ _ O
1 _ _ O
reject _ _ O
” _ _ O
Note _ _ O
that _ _ O
L _ _ O
( _ _ O
M2 _ _ O
) _ _ O
= _ _ O
∅ _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machines _ _ O
as _ _ O
Methods _ _ O

Language _ _ O
of _ _ O
a _ _ O
Method _ _ O
Consider _ _ O
the _ _ O
following _ _ O
method _ _ O
boolean _ _ O
M3 _ _ O
( _ _ O
String _ _ O
x _ _ O
) _ _ O
{ _ _ O
if _ _ O
( _ _ O
x.equals _ _ O
( _ _ O
" _ _ O
" _ _ O
) _ _ O
) _ _ O
return _ _ O
true _ _ O
; _ _ O
else _ _ O
return _ _ O
false _ _ O
; _ _ O
} _ _ O
What _ _ O
is _ _ O
the _ _ O
language _ _ O
of _ _ O
the _ _ O
above _ _ O
method _ _ O
? _ _ O
The _ _ O
above _ _ O
method _ _ O
only _ _ O
returns _ _ O
true _ _ O
if _ _ O
we _ _ O
call _ _ O
use _ _ O
the _ _ O
empty _ _ O
string _ _ O
as _ _ O
the _ _ O
argument _ _ O
For _ _ O
any _ _ O
other _ _ O
arguments _ _ O
that _ _ O
are _ _ O
not _ _ O
the _ _ O
empty _ _ O
string _ _ O
, _ _ O
it _ _ O
will _ _ O
always _ _ O
return _ _ O
false _ _ O
Thus _ _ O
, _ _ O
the _ _ O
language _ _ O
of _ _ O
the _ _ O
method _ _ O
M3 _ _ O
( _ _ O
) _ _ O
is _ _ O
{ _ _ O
ε _ _ O
} _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machines _ _ O
as _ _ O
Methods _ _ O

Language _ _ O
of _ _ O
a _ _ O
Method _ _ O
The _ _ O
method _ _ O
M3 _ _ O
( _ _ O
) _ _ O
is _ _ O
pretty _ _ O
much _ _ O
the _ _ O
same _ _ O
as _ _ O
the _ _ O
Turing _ _ O
machine _ _ O
below _ _ O
: _ _ O
M3 _ _ O
= _ _ O
“ _ _ O
On _ _ O
input _ _ O
x _ _ O
: _ _ O
1 _ _ O
2 _ _ O
If _ _ O
x _ _ O
= _ _ O
ε _ _ O
, _ _ O
accept _ _ O
If _ _ O
x _ _ O
6= _ _ O
ε _ _ O
, _ _ O
reject _ _ O
Note _ _ O
that _ _ O
L _ _ O
( _ _ O
M3 _ _ O
) _ _ O
= _ _ O
{ _ _ O
ε _ _ O
} _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machines _ _ O
as _ _ O
Methods _ _ O

Language _ _ O
of _ _ O
a _ _ O
Method _ _ O
Suppose _ _ O
we _ _ O
have _ _ O
the _ _ O
method _ _ O
named _ _ O
is _ _ O
0n1n _ _ O
with _ _ O
the _ _ O
following _ _ O
signature _ _ O
: _ _ O
boolean _ _ O
is_0n1n _ _ O
( _ _ O
String _ _ O
s _ _ O
) _ _ O
This _ _ O
method _ _ O
returns _ _ O
true _ _ O
if _ _ O
the _ _ O
string _ _ O
s _ _ O
is _ _ O
in _ _ O
the _ _ O
form _ _ O
of _ _ O
0n _ _ O
1n _ _ O
for _ _ O
any _ _ O
n _ _ O
≥ _ _ O
0 _ _ O
It _ _ O
returns _ _ O
false _ _ O
for _ _ O
any _ _ O
other _ _ O
strings _ _ O
Examples _ _ O
: _ _ O
is _ _ O
0n1n _ _ O
( _ _ O
" _ _ O
" _ _ O
) _ _ O
is _ _ O
true _ _ O
is _ _ O
0n1n _ _ O
( _ _ O
"0101 _ _ O
" _ _ O
) _ _ O
is _ _ O
false _ _ O
is _ _ O
0n1n _ _ O
( _ _ O
"01 _ _ O
" _ _ O
) _ _ O
is _ _ O
true _ _ O
is _ _ O
0n1n _ _ O
( _ _ O
"00111 _ _ O
" _ _ O
) _ _ O
is _ _ O
false _ _ O
is _ _ O
0n1n _ _ O
( _ _ O
"000111 _ _ O
" _ _ O
) _ _ O
is _ _ O
true _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machines _ _ O
as _ _ O
Methods _ _ O

Language _ _ O
of _ _ O
a _ _ O
Method _ _ O
Consider _ _ O
the _ _ O
following _ _ O
method _ _ O
boolean _ _ O
M4 _ _ O
( _ _ O
String _ _ O
x _ _ O
) _ _ O
{ _ _ O
boolean _ _ O
p _ _ O
= _ _ O
is_0n1n _ _ O
( _ _ O
x _ _ O
) _ _ O
; _ _ O
if _ _ O
( _ _ O
p _ _ O
) _ _ O
return _ _ O
true _ _ O
; _ _ O
else _ _ O
return _ _ O
false _ _ O
; _ _ O
} _ _ O
What _ _ O
is _ _ O
the _ _ O
language _ _ O
of _ _ O
the _ _ O
above _ _ O
method _ _ O
? _ _ O
Obviously _ _ O
, _ _ O
M4 _ _ O
( _ _ O
) _ _ O
returns _ _ O
true _ _ O
for _ _ O
any _ _ O
argument _ _ O
of _ _ O
type _ _ O
String _ _ O
of _ _ O
the _ _ O
form _ _ O
0n _ _ O
1n _ _ O
for _ _ O
any _ _ O
n _ _ O
≥ _ _ O
0 _ _ O
For _ _ O
any _ _ O
other _ _ O
strings _ _ O
, _ _ O
it _ _ O
will _ _ O
return _ _ O
false _ _ O
Thus _ _ O
, _ _ O
the _ _ O
language _ _ O
of _ _ O
the _ _ O
method _ _ O
M4 _ _ O
( _ _ O
) _ _ O
is _ _ O
{ _ _ O
0n _ _ O
1n _ _ O
| _ _ O
n _ _ O
≥ _ _ O
0 _ _ O
} _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machines _ _ O
as _ _ O
Methods _ _ O

Language _ _ O
of _ _ O
a _ _ O
Method _ _ O
The _ _ O
method _ _ O
M4 _ _ O
( _ _ O
) _ _ O
is _ _ O
pretty _ _ O
much _ _ O
the _ _ O
same _ _ O
as _ _ O
the _ _ O
Turing _ _ O
machine _ _ O
below _ _ O
: _ _ O
M4 _ _ O
= _ _ O
“ _ _ O
On _ _ O
input _ _ O
x _ _ O
: _ _ O
1 _ _ O
2 _ _ O
If _ _ O
x _ _ O
is _ _ O
in _ _ O
the _ _ O
form _ _ O
of _ _ O
0n _ _ O
1n _ _ O
, _ _ O
accept _ _ O
If _ _ O
x _ _ O
is _ _ O
not _ _ O
in _ _ O
the _ _ O
form _ _ O
of _ _ O
0n _ _ O
1n _ _ O
, _ _ O
reject _ _ O
The _ _ O
language _ _ O
of _ _ O
the _ _ O
above _ _ O
machine _ _ O
is _ _ O
L _ _ O
( _ _ O
M4 _ _ O
) _ _ O
= _ _ O
{ _ _ O
0n _ _ O
1n _ _ O
| _ _ O
n _ _ O
≥ _ _ O
0 _ _ O
} _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machines _ _ O
as _ _ O
Methods _ _ O

Language _ _ O
of _ _ O
a _ _ O
Method _ _ O
Consider _ _ O
the _ _ O
following _ _ O
method _ _ O
boolean _ _ O
M5 _ _ O
( _ _ O
String _ _ O
x _ _ O
) _ _ O
{ _ _ O
while _ _ O
( _ _ O
true _ _ O
) _ _ O
; _ _ O
return _ _ O
true _ _ O
; _ _ O
} _ _ O
What _ _ O
is _ _ O
the _ _ O
language _ _ O
of _ _ O
the _ _ O
above _ _ O
method _ _ O
? _ _ O
Obviously _ _ O
, _ _ O
no _ _ O
matter _ _ O
what _ _ O
argument _ _ O
of _ _ O
type _ _ O
String _ _ O
you _ _ O
use _ _ O
when _ _ O
call _ _ O
the _ _ O
above _ _ O
method _ _ O
, _ _ O
it _ _ O
will _ _ O
not _ _ O
return _ _ O
It _ _ O
loops _ _ O
indefinitely _ _ O
on _ _ O
all _ _ O
arguments _ _ O
. _ _ O
Thus _ _ O
, _ _ O
the _ _ O
language _ _ O
of _ _ O
the _ _ O
method _ _ O
M5 _ _ O
( _ _ O
) _ _ O
is _ _ O
∅ _ _ O
The _ _ O
above _ _ O
method _ _ O
M5 _ _ O
( _ _ O
) _ _ O
is _ _ O
pretty _ _ O
much _ _ O
the _ _ O
same _ _ O
as _ _ O
the _ _ O
Turing _ _ O
machine _ _ O
below _ _ O
: _ _ O
M5 _ _ O
= _ _ O
“ _ _ O
On _ _ O
input _ _ O
x _ _ O
: _ _ O
1 _ _ O
2 _ _ O
Enter _ _ O
infinite _ _ O
loop _ _ O
accept _ _ O
” _ _ O
Note _ _ O
that _ _ O
L _ _ O
( _ _ O
M5 _ _ O
) _ _ O
= _ _ O
∅ _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machines _ _ O
as _ _ O
Methods _ _ O

Language _ _ O
of _ _ O
a _ _ O
Method _ _ O
Now _ _ O
suppose _ _ O
we _ _ O
have _ _ O
a _ _ O
method _ _ O
named _ _ O
M _ _ O
( _ _ O
) _ _ O
and _ _ O
and _ _ O
a _ _ O
string _ _ O
named _ _ O
w _ _ O
as _ _ O
follows _ _ O
: _ _ O
boolean _ _ O
M _ _ O
( _ _ O
String _ _ O
s _ _ O
) _ _ O
{ _ _ O
... _ _ O
} _ _ O
String _ _ O
w _ _ O
= _ _ O
" _ _ O
... _ _ O
" _ _ O
; _ _ O
Note _ _ O
that _ _ O
we _ _ O
have _ _ O
no _ _ O
idea _ _ O
what _ _ O
is _ _ O
the _ _ O
method _ _ O
M _ _ O
( _ _ O
) _ _ O
It _ _ O
just _ _ O
a _ _ O
method _ _ O
that _ _ O
takes _ _ O
an _ _ O
argument _ _ O
of _ _ O
type _ _ O
String _ _ O
and _ _ O
returns _ _ O
boolean _ _ O
Just _ _ O
imagine _ _ O
that _ _ O
it _ _ O
can _ _ O
be _ _ O
any _ _ O
method _ _ O
with _ _ O
the _ _ O
above _ _ O
signature _ _ O
Can _ _ O
even _ _ O
thing _ _ O
of _ _ O
M _ _ O
as _ _ O
a _ _ O
reference _ _ O
variable _ _ O
that _ _ O
refers _ _ O
to _ _ O
a _ _ O
method _ _ O
of _ _ O
the _ _ O
above _ _ O
signature _ _ O
Obviously _ _ O
, _ _ O
w _ _ O
is _ _ O
a _ _ O
variable _ _ O
of _ _ O
type _ _ O
String _ _ O
. _ _ O
What _ _ O
if _ _ O
we _ _ O
call _ _ O
M _ _ O
( _ _ O
w _ _ O
) _ _ O
? _ _ O
We _ _ O
do _ _ O
not _ _ O
know _ _ O
whether _ _ O
it _ _ O
will _ _ O
return _ _ O
true _ _ O
, _ _ O
or _ _ O
false _ _ O
It _ _ O
may _ _ O
not _ _ O
return _ _ O
at _ _ O
all _ _ O
( _ _ O
loops _ _ O
indefinitely _ _ O
) _ _ O
We _ _ O
have _ _ O
no _ _ O
idea _ _ O
what _ _ O
are _ _ O
M _ _ O
and _ _ O
w _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machines _ _ O
as _ _ O
Methods _ _ O

Language _ _ O
of _ _ O
a _ _ O
Method _ _ O
Consider _ _ O
the _ _ O
following _ _ O
method _ _ O
boolean _ _ O
N1 _ _ O
( _ _ O
String _ _ O
x _ _ O
) _ _ O
{ _ _ O
boolean _ _ O
p _ _ O
= _ _ O
M _ _ O
( _ _ O
w _ _ O
) _ _ O
; _ _ O
if _ _ O
( _ _ O
p _ _ O
) _ _ O
return _ _ O
true _ _ O
; _ _ O
else _ _ O
return _ _ O
false _ _ O
; _ _ O
} _ _ O
In _ _ O
this _ _ O
case _ _ O
, _ _ O
we _ _ O
have _ _ O
no _ _ O
idea _ _ O
about _ _ O
the _ _ O
language _ _ O
of _ _ O
the _ _ O
method _ _ O
N1 _ _ O
( _ _ O
) _ _ O
This _ _ O
is _ _ O
because _ _ O
have _ _ O
no _ _ O
idea _ _ O
what _ _ O
does _ _ O
M _ _ O
( _ _ O
w _ _ O
) _ _ O
return _ _ O
when _ _ O
called _ _ O
It _ _ O
may _ _ O
return _ _ O
true _ _ O
It _ _ O
may _ _ O
return _ _ O
false _ _ O
It _ _ O
may _ _ O
not _ _ O
return _ _ O
at _ _ O
all _ _ O
( _ _ O
M _ _ O
( _ _ O
w _ _ O
) _ _ O
loops _ _ O
indefinitely _ _ O
) _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machines _ _ O
as _ _ O
Methods _ _ O

Language _ _ O
of _ _ O
a _ _ O
Method _ _ O
Suppose _ _ O
M _ _ O
( _ _ O
w _ _ O
) _ _ O
returns _ _ O
true _ _ O
, _ _ O
we _ _ O
can _ _ O
replace _ _ O
M _ _ O
( _ _ O
w _ _ O
) _ _ O
by _ _ O
true _ _ O
as _ _ O
shown _ _ O
below _ _ O
: _ _ O
boolean _ _ O
N1 _ _ O
( _ _ O
String _ _ O
x _ _ O
) _ _ O
{ _ _ O
boolean _ _ O
p _ _ O
= _ _ O
true _ _ O
; _ _ O
if _ _ O
( _ _ O
p _ _ O
) _ _ O
return _ _ O
true _ _ O
; _ _ O
else _ _ O
return _ _ O
false _ _ O
; _ _ O
} _ _ O
/ _ _ O
/ _ _ O
Used _ _ O
to _ _ O
be _ _ O
boolean _ _ O
p _ _ O
= _ _ O
M _ _ O
( _ _ O
w _ _ O
) _ _ O
; _ _ O
Now _ _ O
, _ _ O
what _ _ O
is _ _ O
the _ _ O
language _ _ O
of _ _ O
the _ _ O
above _ _ O
method _ _ O
N1 _ _ O
? _ _ O
The _ _ O
language _ _ O
of _ _ O
the _ _ O
method _ _ O
N1 _ _ O
is _ _ O
Σ∗ _ _ O
This _ _ O
is _ _ O
under _ _ O
the _ _ O
assumption _ _ O
that _ _ O
M _ _ O
( _ _ O
w _ _ O
) _ _ O
returns _ _ O
true _ _ O
So _ _ O
, _ _ O
here _ _ O
is _ _ O
what _ _ O
we _ _ O
can _ _ O
say _ _ O
about _ _ O
the _ _ O
method _ _ O
N1 _ _ O
( _ _ O
) _ _ O
so _ _ O
far _ _ O
: _ _ O
If _ _ O
M _ _ O
( _ _ O
w _ _ O
) _ _ O
returns _ _ O
true _ _ O
, _ _ O
the _ _ O
language _ _ O
of _ _ O
N1 _ _ O
( _ _ O
) _ _ O
is _ _ O
Σ∗ _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machines _ _ O
as _ _ O
Methods _ _ O

Language _ _ O
of _ _ O
a _ _ O
Method _ _ O
Suppose _ _ O
M _ _ O
( _ _ O
w _ _ O
) _ _ O
returns _ _ O
false _ _ O
, _ _ O
we _ _ O
can _ _ O
replace _ _ O
M _ _ O
( _ _ O
w _ _ O
) _ _ O
by _ _ O
false _ _ O
as _ _ O
shown _ _ O
below _ _ O
: _ _ O
boolean _ _ O
N1 _ _ O
( _ _ O
String _ _ O
x _ _ O
) _ _ O
{ _ _ O
boolean _ _ O
p _ _ O
= _ _ O
false _ _ O
; _ _ O
if _ _ O
( _ _ O
p _ _ O
) _ _ O
return _ _ O
true _ _ O
; _ _ O
else _ _ O
return _ _ O
false _ _ O
; _ _ O
} _ _ O
/ _ _ O
/ _ _ O
Used _ _ O
to _ _ O
be _ _ O
boolean _ _ O
p _ _ O
= _ _ O
M _ _ O
( _ _ O
w _ _ O
) _ _ O
; _ _ O
Now _ _ O
, _ _ O
what _ _ O
is _ _ O
the _ _ O
language _ _ O
of _ _ O
the _ _ O
above _ _ O
method _ _ O
N1 _ _ O
? _ _ O
The _ _ O
language _ _ O
of _ _ O
the _ _ O
method _ _ O
N1 _ _ O
( _ _ O
) _ _ O
is _ _ O
∅ _ _ O
This _ _ O
is _ _ O
under _ _ O
the _ _ O
assumption _ _ O
that _ _ O
M _ _ O
( _ _ O
w _ _ O
) _ _ O
returns _ _ O
false _ _ O
So _ _ O
, _ _ O
here _ _ O
is _ _ O
what _ _ O
we _ _ O
can _ _ O
say _ _ O
about _ _ O
the _ _ O
method _ _ O
N1 _ _ O
( _ _ O
) _ _ O
so _ _ O
far _ _ O
: _ _ O
If _ _ O
M _ _ O
( _ _ O
w _ _ O
) _ _ O
returns _ _ O
true _ _ O
, _ _ O
the _ _ O
language _ _ O
of _ _ O
N1 _ _ O
( _ _ O
) _ _ O
is _ _ O
Σ∗ _ _ O
If _ _ O
M _ _ O
( _ _ O
w _ _ O
) _ _ O
returns _ _ O
false _ _ O
, _ _ O
the _ _ O
language _ _ O
of _ _ O
N1 _ _ O
( _ _ O
) _ _ O
is _ _ O
∅ _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machines _ _ O
as _ _ O
Methods _ _ O

Language _ _ O
of _ _ O
a _ _ O
Method _ _ O
Suppose _ _ O
M _ _ O
( _ _ O
w _ _ O
) _ _ O
does _ _ O
not _ _ O
return _ _ O
at _ _ O
all _ _ O
It _ _ O
loops _ _ O
indefinitely _ _ O
when _ _ O
called _ _ O
Since _ _ O
N1 _ _ O
( _ _ O
) _ _ O
calls _ _ O
M _ _ O
( _ _ O
w _ _ O
) _ _ O
and _ _ O
M _ _ O
( _ _ O
w _ _ O
) _ _ O
loops _ _ O
indefinitely _ _ O
, _ _ O
N1 _ _ O
( _ _ O
) _ _ O
also _ _ O
loops _ _ O
indefinitely _ _ O
. _ _ O
In _ _ O
this _ _ O
case _ _ O
, _ _ O
we _ _ O
can _ _ O
insert _ _ O
the _ _ O
statement _ _ O
while _ _ O
( _ _ O
true _ _ O
) _ _ O
; _ _ O
as _ _ O
shown _ _ O
below _ _ O
boolean _ _ O
N1 _ _ O
( _ _ O
String _ _ O
x _ _ O
) _ _ O
{ _ _ O
while _ _ O
( _ _ O
true _ _ O
) _ _ O
; _ _ O
boolean _ _ O
p _ _ O
= _ _ O
M _ _ O
( _ _ O
w _ _ O
) _ _ O
; _ _ O
if _ _ O
( _ _ O
p _ _ O
) _ _ O
return _ _ O
true _ _ O
; _ _ O
else _ _ O
return _ _ O
false _ _ O
; _ _ O
} _ _ O
/ _ _ O
/ _ _ O
Inserted _ _ O
to _ _ O
make _ _ O
N1 _ _ O
loops _ _ O
indefinitely _ _ O
Now _ _ O
, _ _ O
what _ _ O
is _ _ O
the _ _ O
language _ _ O
of _ _ O
the _ _ O
above _ _ O
method _ _ O
N1 _ _ O
? _ _ O
Since _ _ O
N1 _ _ O
( _ _ O
) _ _ O
does _ _ O
not _ _ O
return _ _ O
true _ _ O
on _ _ O
any _ _ O
argument _ _ O
of _ _ O
type _ _ O
String _ _ O
The _ _ O
language _ _ O
of _ _ O
the _ _ O
method _ _ O
N1 _ _ O
is _ _ O
∅ _ _ O
This _ _ O
is _ _ O
under _ _ O
the _ _ O
assumption _ _ O
that _ _ O
M _ _ O
( _ _ O
w _ _ O
) _ _ O
loops _ _ O
indefinitely _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machines _ _ O
as _ _ O
Methods _ _ O

Language _ _ O
of _ _ O
a _ _ O
Method _ _ O
So _ _ O
, _ _ O
here _ _ O
is _ _ O
what _ _ O
we _ _ O
can _ _ O
say _ _ O
about _ _ O
the _ _ O
method _ _ O
N1 _ _ O
( _ _ O
) _ _ O
below _ _ O
: _ _ O
boolean _ _ O
N1 _ _ O
( _ _ O
String _ _ O
x _ _ O
) _ _ O
{ _ _ O
boolean _ _ O
p _ _ O
= _ _ O
M _ _ O
( _ _ O
w _ _ O
) _ _ O
; _ _ O
if _ _ O
( _ _ O
p _ _ O
) _ _ O
return _ _ O
true _ _ O
; _ _ O
else _ _ O
return _ _ O
false _ _ O
; _ _ O
} _ _ O
If _ _ O
M _ _ O
( _ _ O
w _ _ O
) _ _ O
returns _ _ O
true _ _ O
, _ _ O
the _ _ O
language _ _ O
of _ _ O
N1 _ _ O
( _ _ O
) _ _ O
is _ _ O
Σ∗ _ _ O
If _ _ O
M _ _ O
( _ _ O
w _ _ O
) _ _ O
returns _ _ O
false _ _ O
, _ _ O
the _ _ O
language _ _ O
of _ _ O
N1 _ _ O
( _ _ O
) _ _ O
is _ _ O
∅ _ _ O
If _ _ O
M _ _ O
( _ _ O
w _ _ O
) _ _ O
loops _ _ O
indefinitely _ _ O
, _ _ O
the _ _ O
language _ _ O
of _ _ O
N1 _ _ O
( _ _ O
) _ _ O
is _ _ O
∅ _ _ O
The _ _ O
behavior _ _ O
of _ _ O
the _ _ O
methods _ _ O
N1 _ _ O
( _ _ O
) _ _ O
depends _ _ O
on _ _ O
what _ _ O
happen _ _ O
when _ _ O
M _ _ O
( _ _ O
w _ _ O
) _ _ O
is _ _ O
called _ _ O
But _ _ O
again _ _ O
, _ _ O
we _ _ O
have _ _ O
no _ _ O
idea _ _ O
what _ _ O
are _ _ O
M _ _ O
( _ _ O
) _ _ O
and _ _ O
w _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machines _ _ O
as _ _ O
Methods _ _ O

Language _ _ O
of _ _ O
a _ _ O
Method _ _ O
Given _ _ O
a _ _ O
Turing _ _ O
machine _ _ O
M _ _ O
and _ _ O
a _ _ O
string _ _ O
w _ _ O
, _ _ O
the _ _ O
method _ _ O
N1 _ _ O
( _ _ O
) _ _ O
is _ _ O
pretty _ _ O
much _ _ O
the _ _ O
same _ _ O
as _ _ O
the _ _ O
Turing _ _ O
machine _ _ O
below _ _ O
: _ _ O
N1 _ _ O
= _ _ O
“ _ _ O
On _ _ O
input _ _ O
x _ _ O
: _ _ O
1 _ _ O
2 _ _ O
Run _ _ O
M _ _ O
on _ _ O
input _ _ O
w _ _ O
If _ _ O
M _ _ O
accepts _ _ O
w _ _ O
, _ _ O
accept _ _ O
If _ _ O
M _ _ O
rejects _ _ O
w _ _ O
, _ _ O
reject _ _ O
” _ _ O
Similarly _ _ O
, _ _ O
we _ _ O
have _ _ O
no _ _ O
idea _ _ O
what _ _ O
is _ _ O
the _ _ O
language _ _ O
of _ _ O
N1 _ _ O
but _ _ O
at _ _ O
least _ _ O
we _ _ O
know _ _ O
that _ _ O
If _ _ O
M _ _ O
accepts _ _ O
w _ _ O
, _ _ O
L _ _ O
( _ _ O
N1 _ _ O
) _ _ O
= _ _ O
Σ∗ _ _ O
If _ _ O
M _ _ O
rejects _ _ O
w _ _ O
, _ _ O
L _ _ O
( _ _ O
N1 _ _ O
) _ _ O
= _ _ O
∅ _ _ O
If _ _ O
M _ _ O
loops _ _ O
indefinitely _ _ O
on _ _ O
w _ _ O
, _ _ O
L _ _ O
( _ _ O
N1 _ _ O
) _ _ O
= _ _ O
∅ _ _ O
We _ _ O
can _ _ O
also _ _ O
conclude _ _ O
that _ _ O
If _ _ O
M _ _ O
accepts _ _ O
w _ _ O
, _ _ O
the _ _ O
language _ _ O
of _ _ O
N1 _ _ O
is _ _ O
not _ _ O
empty _ _ O
If _ _ O
M _ _ O
does _ _ O
not _ _ O
accept _ _ O
w _ _ O
, _ _ O
the _ _ O
language _ _ O
of _ _ O
N1 _ _ O
is _ _ O
empty _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Turing _ _ O
Machines _ _ O
as _ _ O
Methods _ _ O



