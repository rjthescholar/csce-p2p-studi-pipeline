self_training_2|cs1502|lec29_time_complexity_04
-DOCSTART- -X- -X- O

Time _ _ O
Complexity _ _ O
04 _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Time _ _ O
Complexity _ _ O
04 _ _ O

NP-COMPLETENESS _ _ O
NP-Complete _ _ O
is _ _ O
a _ _ O
class _ _ O
of _ _ O
problems _ _ O
discovered _ _ O
by _ _ O
Cook _ _ O
and _ _ O
Levin _ _ O
Complexity _ _ O
of _ _ O
these _ _ O
problems _ _ O
are _ _ O
closely _ _ O
related _ _ O
If _ _ O
a _ _ O
polynomial _ _ O
time _ _ O
algorithm _ _ O
exists _ _ O
for _ _ O
a _ _ O
problem _ _ O
in _ _ O
this _ _ O
class _ _ O
, _ _ O
problems _ _ O
of _ _ O
entire _ _ O
class _ _ O
can _ _ O
be _ _ O
solved _ _ O
in _ _ O
polynomial _ _ O
time _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Time _ _ O
Complexity _ _ O
04 _ _ O

Polynomial _ _ O
Time _ _ O
Reducibility _ _ O
Definition _ _ O
7.28 _ _ O
A _ _ O
function _ _ O
f _ _ O
: _ _ O
Σ∗ _ _ O
→ _ _ O
Σ∗ _ _ O
is _ _ O
a _ _ O
polynomial _ _ O
time _ _ O
computable _ _ O
function _ _ O
if _ _ O
some _ _ O
polynomial _ _ O
time _ _ O
Turing _ _ O
machine _ _ O
M _ _ O
exists _ _ O
that _ _ O
halts _ _ O
with _ _ O
just _ _ O
f _ _ O
( _ _ O
w _ _ O
) _ _ O
on _ _ O
its _ _ O
tape _ _ O
, _ _ O
when _ _ O
started _ _ O
on _ _ O
any _ _ O
input _ _ O
w. _ _ O
Definition _ _ O
7.29 _ _ O
Language _ _ O
A _ _ O
is _ _ O
polynomial _ _ O
time _ _ O
mapping _ _ O
reducible _ _ O
, _ _ O
or _ _ O
simply _ _ O
polynomial _ _ O
time _ _ O
reducible _ _ O
, _ _ O
to _ _ O
language _ _ O
B _ _ O
, _ _ O
written _ _ O
A _ _ O
≤p _ _ O
B _ _ O
, _ _ O
if _ _ O
a _ _ O
polynomial _ _ O
time _ _ O
computable _ _ O
function _ _ O
f _ _ O
: _ _ O
Σ∗ _ _ O
→ _ _ O
Σ∗ _ _ O
exists _ _ O
, _ _ O
where _ _ O
for _ _ O
every _ _ O
w _ _ O
, _ _ O
w _ _ O
∈ _ _ O
A _ _ O
↔ _ _ O
f _ _ O
( _ _ O
w _ _ O
) _ _ O
∈ _ _ O
B. _ _ O
The _ _ O
function _ _ O
f _ _ O
is _ _ O
called _ _ O
the _ _ O
polynomial _ _ O
time _ _ O
reduction _ _ O
of _ _ O
A _ _ O
to _ _ O
B. _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Time _ _ O
Complexity _ _ O
04 _ _ O

Polynomial _ _ O
Time _ _ O
Reducibility _ _ O
Recall _ _ O
the _ _ O
property _ _ O
from _ _ O
previous _ _ O
slide _ _ O
: _ _ O
w _ _ O
∈ _ _ O
A _ _ O
↔ _ _ O
f _ _ O
( _ _ O
w _ _ O
) _ _ O
∈ _ _ O
B _ _ O
This _ _ O
is _ _ O
exactly _ _ O
the _ _ O
same _ _ O
as _ _ O
mapping _ _ O
reducibility _ _ O
property _ _ O
Recall _ _ O
that _ _ O
if _ _ O
A _ _ O
≤m _ _ O
B _ _ O
and _ _ O
B _ _ O
is _ _ O
decidable _ _ O
, _ _ O
A _ _ O
is _ _ O
decidable _ _ O
A _ _ O
≤p _ _ O
B _ _ O
gives _ _ O
you _ _ O
exactly _ _ O
the _ _ O
same _ _ O
as _ _ O
A _ _ O
≤m _ _ O
B _ _ O
with _ _ O
one _ _ O
extra _ _ O
property _ _ O
that _ _ O
the _ _ O
reduction _ _ O
f _ _ O
runs _ _ O
in _ _ O
polynomial _ _ O
time _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Time _ _ O
Complexity _ _ O
04 _ _ O

Polynomial _ _ O
Time _ _ O
Reducibility _ _ O
Theorem _ _ O
7.31 _ _ O
If _ _ O
A _ _ O
≤p _ _ O
B _ _ O
and _ _ O
B _ _ O
∈ _ _ O
P _ _ O
, _ _ O
then _ _ O
A _ _ O
∈ _ _ O
P _ _ O
. _ _ O
If _ _ O
you _ _ O
can _ _ O
convert _ _ O
an _ _ O
instance _ _ O
of _ _ O
a _ _ O
problem _ _ O
A _ _ O
into _ _ O
an _ _ O
instance _ _ O
of _ _ O
a _ _ O
problem _ _ O
B _ _ O
in _ _ O
polynomial _ _ O
time _ _ O
If _ _ O
the _ _ O
problem _ _ O
B _ _ O
can _ _ O
be _ _ O
solved _ _ O
in _ _ O
polynomial _ _ O
time _ _ O
The _ _ O
problem _ _ O
A _ _ O
can _ _ O
be _ _ O
solved _ _ O
in _ _ O
polynomial _ _ O
time _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Time _ _ O
Complexity _ _ O
04 _ _ O

Polynomial _ _ O
Time _ _ O
Reducibility _ _ O
Theorem _ _ O
7.31 _ _ O
If _ _ O
A _ _ O
≤p _ _ O
B _ _ O
and _ _ O
B _ _ O
∈ _ _ O
P _ _ O
, _ _ O
then _ _ O
A _ _ O
∈ _ _ O
P _ _ O
. _ _ O
Proof _ _ O
: _ _ O
Assume _ _ O
that _ _ O
A _ _ O
≤p _ _ O
B _ _ O
There _ _ O
exists _ _ O
a _ _ O
polynomial _ _ O
time _ _ O
reduction _ _ O
f _ _ O
satisfying _ _ O
: _ _ O
w _ _ O
∈ _ _ O
A _ _ O
↔ _ _ O
f _ _ O
( _ _ O
w _ _ O
) _ _ O
∈ _ _ O
B _ _ O
Assume _ _ O
that _ _ O
B _ _ O
∈ _ _ O
P _ _ O
There _ _ O
exists _ _ O
a _ _ O
TM _ _ O
MB _ _ O
that _ _ O
decides _ _ O
B _ _ O
MB _ _ O
runs _ _ O
in _ _ O
polynomial _ _ O
time _ _ O
We _ _ O
need _ _ O
to _ _ O
show _ _ O
that _ _ O
we _ _ O
can _ _ O
decide _ _ O
A _ _ O
in _ _ O
polynomial _ _ O
time _ _ O
Need _ _ O
a _ _ O
TM _ _ O
MA _ _ O
that _ _ O
decides _ _ O
A _ _ O
in _ _ O
polynomial _ _ O
time _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Time _ _ O
Complexity _ _ O
04 _ _ O

Polynomial _ _ O
Time _ _ O
Reducibility _ _ O
This _ _ O
TM _ _ O
MA _ _ O
decides _ _ O
A _ _ O
: _ _ O
MA _ _ O
= _ _ O
“ _ _ O
On _ _ O
input _ _ O
w _ _ O
: _ _ O
1 _ _ O
2 _ _ O
3 _ _ O
Compute _ _ O
f _ _ O
( _ _ O
w _ _ O
) _ _ O
where _ _ O
f _ _ O
is _ _ O
a _ _ O
polynomial _ _ O
time _ _ O
reduction _ _ O
from _ _ O
A _ _ O
to _ _ O
B. _ _ O
Run _ _ O
MB _ _ O
( _ _ O
a _ _ O
decider _ _ O
of _ _ O
B _ _ O
) _ _ O
on _ _ O
f _ _ O
( _ _ O
w _ _ O
) _ _ O
. _ _ O
If _ _ O
MB _ _ O
accepts _ _ O
f _ _ O
( _ _ O
w _ _ O
) _ _ O
, _ _ O
accept _ _ O
. _ _ O
If _ _ O
MB _ _ O
rejects _ _ O
f _ _ O
( _ _ O
w _ _ O
) _ _ O
, _ _ O
reject _ _ O
. _ _ O
” _ _ O
Prove _ _ O
that _ _ O
MA _ _ O
is _ _ O
a _ _ O
decider _ _ O
for _ _ O
A _ _ O
: _ _ O
w∈A _ _ O
w _ _ O
6∈ _ _ O
A _ _ O
f _ _ O
( _ _ O
w _ _ O
) _ _ O
∈ _ _ O
B _ _ O
f _ _ O
( _ _ O
w _ _ O
) _ _ O
6∈ _ _ O
B _ _ O
MB _ _ O
accepts _ _ O
f _ _ O
( _ _ O
w _ _ O
) _ _ O
MB _ _ O
rejects _ _ O
f _ _ O
( _ _ O
w _ _ O
) _ _ O
MA _ _ O
accepts _ _ O
w _ _ O
MA _ _ O
rejects _ _ O
w _ _ O
Since _ _ O
f _ _ O
runs _ _ O
in _ _ O
polynomial _ _ O
time _ _ O
and _ _ O
MB _ _ O
can _ _ O
decide _ _ O
B _ _ O
in _ _ O
polynomial _ _ O
time _ _ O
, _ _ O
MA _ _ O
runs _ _ O
in _ _ O
polynomial _ _ O
time _ _ O
Since _ _ O
MA _ _ O
decides _ _ O
A _ _ O
in _ _ O
polynomial _ _ O
time _ _ O
, _ _ O
A _ _ O
∈ _ _ O
P _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Time _ _ O
Complexity _ _ O
04 _ _ O

Satisfiability _ _ O
Problem _ _ O
A _ _ O
formula _ _ O
φ _ _ O
can _ _ O
be _ _ O
construed _ _ O
from _ _ O
boolean _ _ O
variables _ _ O
and _ _ O
boolean _ _ O
operators _ _ O
( _ _ O
∧ _ _ O
, _ _ O
∨ _ _ O
, _ _ O
and _ _ O
¬ _ _ O
) _ _ O
Sometimes _ _ O
we _ _ O
use _ _ O
x _ _ O
instead _ _ O
of _ _ O
¬x _ _ O
for _ _ O
a _ _ O
boolean _ _ O
variable _ _ O
x _ _ O
For _ _ O
simplicity _ _ O
, _ _ O
this _ _ O
textbook _ _ O
uses _ _ O
1 _ _ O
for _ _ O
true _ _ O
and _ _ O
0 _ _ O
for _ _ O
false _ _ O
For _ _ O
example _ _ O
, _ _ O
φ _ _ O
= _ _ O
( _ _ O
x _ _ O
∧ _ _ O
y _ _ O
) _ _ O
∨ _ _ O
( _ _ O
x _ _ O
∧ _ _ O
z _ _ O
) _ _ O
A _ _ O
formula _ _ O
is _ _ O
satisfiable _ _ O
if _ _ O
there _ _ O
exists _ _ O
an _ _ O
assignment _ _ O
of _ _ O
0s _ _ O
and _ _ O
1s _ _ O
to _ _ O
the _ _ O
variables _ _ O
which _ _ O
makes _ _ O
the _ _ O
formula _ _ O
evaluate _ _ O
to _ _ O
1 _ _ O
In _ _ O
the _ _ O
above _ _ O
example _ _ O
, _ _ O
φ _ _ O
is _ _ O
1 _ _ O
when _ _ O
x _ _ O
= _ _ O
0 _ _ O
, _ _ O
y _ _ O
= _ _ O
1 _ _ O
, _ _ O
and _ _ O
z _ _ O
= _ _ O
0 _ _ O
. _ _ O
The _ _ O
satisfiability _ _ O
problem _ _ O
is _ _ O
defined _ _ O
formally _ _ O
as _ _ O
follows _ _ O
: _ _ O
SAT _ _ O
= _ _ O
{ _ _ O
hφi _ _ O
| _ _ O
φ _ _ O
is _ _ O
a _ _ O
satisfiable _ _ O
Boolean _ _ O
formula _ _ O
} _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Time _ _ O
Complexity _ _ O
04 _ _ O

Conjunctive _ _ O
Normal _ _ O
Form _ _ O
( _ _ O
CNF _ _ O
) _ _ O
We _ _ O
will _ _ O
use _ _ O
a _ _ O
special _ _ O
form _ _ O
of _ _ O
boolean _ _ O
formula _ _ O
called _ _ O
Conjunctive _ _ O
Normal _ _ O
Form _ _ O
( _ _ O
cnf _ _ O
) _ _ O
A _ _ O
literal _ _ O
is _ _ O
a _ _ O
Boolean _ _ O
variable _ _ O
or _ _ O
a _ _ O
negation _ _ O
of _ _ O
a _ _ O
boolean _ _ O
variable _ _ O
, _ _ O
as _ _ O
in _ _ O
x _ _ O
or _ _ O
x _ _ O
A _ _ O
clause _ _ O
is _ _ O
several _ _ O
literals _ _ O
connected _ _ O
with _ _ O
∨s _ _ O
( _ _ O
x1 _ _ O
∨ _ _ O
x2 _ _ O
∨ _ _ O
x3 _ _ O
∨ _ _ O
x4 _ _ O
) _ _ O
A _ _ O
cnf-formula _ _ O
comprises _ _ O
several _ _ O
clauses _ _ O
connected _ _ O
with _ _ O
∧s _ _ O
( _ _ O
x1 _ _ O
∨ _ _ O
x2 _ _ O
∨ _ _ O
x3 _ _ O
∨ _ _ O
x4 _ _ O
) _ _ O
∧ _ _ O
( _ _ O
x3 _ _ O
∨ _ _ O
x5 _ _ O
∨ _ _ O
x6 _ _ O
) _ _ O
∧ _ _ O
( _ _ O
x3 _ _ O
∨ _ _ O
x6 _ _ O
) _ _ O
A _ _ O
3cnf-formula _ _ O
is _ _ O
a _ _ O
cnf-formula _ _ O
where _ _ O
all _ _ O
the _ _ O
clauses _ _ O
have _ _ O
exactly _ _ O
three _ _ O
literals _ _ O
, _ _ O
as _ _ O
in _ _ O
( _ _ O
x1 _ _ O
∨ _ _ O
x2 _ _ O
∨ _ _ O
x3 _ _ O
) _ _ O
∧ _ _ O
( _ _ O
x3 _ _ O
∨ _ _ O
x5 _ _ O
∨ _ _ O
x6 _ _ O
) _ _ O
∧ _ _ O
( _ _ O
x3 _ _ O
∨ _ _ O
x6 _ _ O
∨ _ _ O
x4 _ _ O
) _ _ O
∧ _ _ O
( _ _ O
x4 _ _ O
∨ _ _ O
x5 _ _ O
∨ _ _ O
x6 _ _ O
) _ _ O
Let _ _ O
3SAT _ _ O
= _ _ O
{ _ _ O
hφi _ _ O
| _ _ O
φ _ _ O
is _ _ O
a _ _ O
satisfiable _ _ O
3cnf-formula _ _ O
} _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Time _ _ O
Complexity _ _ O
04 _ _ O

3SAT _ _ O
≤p _ _ O
CLIQUE _ _ O
Is _ _ O
3SAT _ _ O
≤p _ _ O
CLIQUE _ _ O
? _ _ O
We _ _ O
need _ _ O
to _ _ O
create _ _ O
a _ _ O
polynomial _ _ O
time _ _ O
reduction _ _ O
f _ _ O
: _ _ O
Σ∗ _ _ O
→ _ _ O
Σ∗ _ _ O
such _ _ O
that _ _ O
w _ _ O
∈ _ _ O
3SAT _ _ O
↔ _ _ O
f _ _ O
( _ _ O
w _ _ O
) _ _ O
∈ _ _ O
CLIQUE _ _ O
Recall _ _ O
3SAT _ _ O
and _ _ O
CLIQUE _ _ O
: _ _ O
3SAT _ _ O
= _ _ O
{ _ _ O
hφi _ _ O
| _ _ O
φ _ _ O
is _ _ O
a _ _ O
satisfiable _ _ O
3cnf-formula _ _ O
} _ _ O
CLIQUE _ _ O
= _ _ O
{ _ _ O
hG _ _ O
, _ _ O
ki _ _ O
| _ _ O
G _ _ O
is _ _ O
an _ _ O
undirected _ _ O
graph _ _ O
with _ _ O
a _ _ O
k-clique _ _ O
} _ _ O
These _ _ O
are _ _ O
two _ _ O
totally _ _ O
different _ _ O
problems _ _ O
We _ _ O
need _ _ O
to _ _ O
convert _ _ O
hφi _ _ O
to _ _ O
hG _ _ O
, _ _ O
ki _ _ O
such _ _ O
that _ _ O
φ _ _ O
is _ _ O
satisfiable _ _ O
if _ _ O
and _ _ O
only _ _ O
if _ _ O
graph _ _ O
G _ _ O
contains _ _ O
k-clique _ _ O
for _ _ O
some _ _ O
k _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Time _ _ O
Complexity _ _ O
04 _ _ O

3SAT _ _ O
≤p _ _ O
CLIQUE _ _ O
A _ _ O
3cnf-formula _ _ O
is _ _ O
of _ _ O
the _ _ O
form _ _ O
φ _ _ O
= _ _ O
c1 _ _ O
∧ _ _ O
c2 _ _ O
∧ _ _ O
. _ _ O
. _ _ O
. _ _ O
cn _ _ O
for _ _ O
some _ _ O
n≥1 _ _ O
φ _ _ O
is _ _ O
evaluated _ _ O
to _ _ O
1 _ _ O
if _ _ O
ci _ _ O
= _ _ O
1 _ _ O
for _ _ O
every _ _ O
1 _ _ O
≤ _ _ O
i _ _ O
≤ _ _ O
n _ _ O
Every _ _ O
clause _ _ O
ci _ _ O
in _ _ O
φ _ _ O
depends _ _ O
on _ _ O
other _ _ O
clauses _ _ O
cj _ _ O
in _ _ O
φ _ _ O
to _ _ O
be _ _ O
1 _ _ O
to _ _ O
make _ _ O
φ _ _ O
evaluated _ _ O
to _ _ O
1 _ _ O
Each _ _ O
clause _ _ O
c _ _ O
in _ _ O
a _ _ O
3cnf-formula _ _ O
is _ _ O
of _ _ O
the _ _ O
form _ _ O
c _ _ O
= _ _ O
( _ _ O
xp _ _ O
∨ _ _ O
xq _ _ O
∨ _ _ O
xr _ _ O
) _ _ O
for _ _ O
literals _ _ O
xp _ _ O
, _ _ O
xq _ _ O
, _ _ O
and _ _ O
xr _ _ O
The _ _ O
clause _ _ O
c _ _ O
is _ _ O
evaluated _ _ O
to _ _ O
1 _ _ O
if _ _ O
one _ _ O
of _ _ O
its _ _ O
literal _ _ O
is _ _ O
1 _ _ O
If _ _ O
a _ _ O
literal _ _ O
in _ _ O
a _ _ O
clause _ _ O
is _ _ O
1 _ _ O
, _ _ O
for _ _ O
φ _ _ O
to _ _ O
be _ _ O
evaluated _ _ O
to _ _ O
1 _ _ O
, _ _ O
it _ _ O
depends _ _ O
on _ _ O
at _ _ O
least _ _ O
one _ _ O
literal _ _ O
in _ _ O
other _ _ O
clauses _ _ O
to _ _ O
be _ _ O
1 _ _ O
Note _ _ O
that _ _ O
it _ _ O
can _ _ O
not _ _ O
depend _ _ O
on _ _ O
its _ _ O
negation _ _ O
literals _ _ O
It _ _ O
does _ _ O
not _ _ O
depend _ _ O
on _ _ O
the _ _ O
other _ _ O
two _ _ O
literals _ _ O
in _ _ O
its _ _ O
clause _ _ O
since _ _ O
its _ _ O
clause _ _ O
is _ _ O
already _ _ O
evaluated _ _ O
to _ _ O
1 _ _ O
This _ _ O
create _ _ O
relations _ _ O
among _ _ O
n _ _ O
literals _ _ O
( _ _ O
one _ _ O
from _ _ O
each _ _ O
clause _ _ O
) _ _ O
which _ _ O
can _ _ O
be _ _ O
represented _ _ O
using _ _ O
edges _ _ O
in _ _ O
an _ _ O
indirected _ _ O
graph _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Time _ _ O
Complexity _ _ O
04 _ _ O

3SAT _ _ O
≤p _ _ O
CLIQUE _ _ O
Let _ _ O
φ _ _ O
be _ _ O
a _ _ O
formula _ _ O
with _ _ O
k _ _ O
clauses _ _ O
as _ _ O
φ _ _ O
= _ _ O
( _ _ O
a1 _ _ O
∨ _ _ O
b1 _ _ O
∨ _ _ O
c1 _ _ O
) _ _ O
∧ _ _ O
( _ _ O
a2 _ _ O
∨ _ _ O
b2 _ _ O
∨ _ _ O
c2 _ _ O
) _ _ O
∧ _ _ O
· _ _ O
· _ _ O
· _ _ O
∧ _ _ O
( _ _ O
ak _ _ O
∨ _ _ O
bk _ _ O
∨ _ _ O
ck _ _ O
) _ _ O
Nodes _ _ O
in _ _ O
G _ _ O
are _ _ O
organized _ _ O
in _ _ O
k _ _ O
groups _ _ O
of _ _ O
tree _ _ O
nodes _ _ O
each _ _ O
call _ _ O
triples _ _ O
Each _ _ O
triple _ _ O
corresponds _ _ O
to _ _ O
one _ _ O
of _ _ O
the _ _ O
clauses _ _ O
in _ _ O
φ _ _ O
Each _ _ O
node _ _ O
in _ _ O
a _ _ O
triple _ _ O
corresponds _ _ O
to _ _ O
a _ _ O
literal _ _ O
in _ _ O
its _ _ O
associated _ _ O
clause _ _ O
Edges _ _ O
connect _ _ O
every _ _ O
two _ _ O
nodes _ _ O
in _ _ O
G _ _ O
except _ _ O
the _ _ O
following _ _ O
: _ _ O
No _ _ O
edge _ _ O
among _ _ O
nodes _ _ O
in _ _ O
the _ _ O
same _ _ O
triple _ _ O
No _ _ O
edge _ _ O
is _ _ O
present _ _ O
between _ _ O
two _ _ O
nodes _ _ O
with _ _ O
contradictory _ _ O
labels _ _ O
, _ _ O
as _ _ O
in _ _ O
x2 _ _ O
and _ _ O
x2 _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Time _ _ O
Complexity _ _ O
04 _ _ O

3SAT _ _ O
≤p _ _ O
CLIQUE _ _ O
x1 _ _ O
x2 _ _ O
x2 _ _ O
x1 _ _ O
x1 _ _ O
x1 _ _ O
x2 _ _ O
x2 _ _ O
x2 _ _ O
φ _ _ O
= _ _ O
( _ _ O
x1 _ _ O
∨ _ _ O
x1 _ _ O
∨ _ _ O
x2 _ _ O
) _ _ O
∧ _ _ O
( _ _ O
x1 _ _ O
∨ _ _ O
x2 _ _ O
∨ _ _ O
x2 _ _ O
) _ _ O
∧ _ _ O
( _ _ O
x1 _ _ O
∨ _ _ O
x2 _ _ O
∨ _ _ O
x2 _ _ O
) _ _ O
3SAT _ _ O
≤p _ _ O
CLIQUE _ _ O
If _ _ O
a _ _ O
boolean _ _ O
3cnf _ _ O
formular _ _ O
φ _ _ O
with _ _ O
k _ _ O
clauses _ _ O
is _ _ O
satisfiable _ _ O
, _ _ O
the _ _ O
graph _ _ O
converted _ _ O
from _ _ O
φ _ _ O
will _ _ O
contain _ _ O
k _ _ O
clique _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Time _ _ O
Complexity _ _ O
04 _ _ O

3SAT _ _ O
≤p _ _ O
CLIQUE _ _ O
If _ _ O
φ _ _ O
is _ _ O
satisfiable _ _ O
, _ _ O
there _ _ O
exists _ _ O
an _ _ O
assignment _ _ O
that _ _ O
makes _ _ O
φ _ _ O
= _ _ O
1 _ _ O
For _ _ O
each _ _ O
clause _ _ O
, _ _ O
select _ _ O
exactly _ _ O
one _ _ O
true _ _ O
literal _ _ O
based _ _ O
on _ _ O
the _ _ O
assignment _ _ O
If _ _ O
there _ _ O
are _ _ O
k _ _ O
clauses _ _ O
, _ _ O
selected _ _ O
literals _ _ O
form _ _ O
k-clique _ _ O
If _ _ O
graph _ _ O
G _ _ O
has _ _ O
a _ _ O
k-clique _ _ O
Each _ _ O
node _ _ O
in _ _ O
k-clique _ _ O
corresponds _ _ O
to _ _ O
a _ _ O
node _ _ O
( _ _ O
literal _ _ O
) _ _ O
in _ _ O
a _ _ O
triple _ _ O
( _ _ O
clause _ _ O
) _ _ O
Assign _ _ O
true _ _ O
to _ _ O
those _ _ O
literals _ _ O
Recall _ _ O
the _ _ O
theorem _ _ O
7.31 _ _ O
: _ _ O
If _ _ O
A _ _ O
≤p _ _ O
B _ _ O
and _ _ O
B _ _ O
∈ _ _ O
P _ _ O
, _ _ O
then _ _ O
A _ _ O
∈ _ _ O
P _ _ O
If _ _ O
we _ _ O
can _ _ O
solve _ _ O
CLIQUE _ _ O
in _ _ O
polynomial _ _ O
time _ _ O
, _ _ O
we _ _ O
can _ _ O
solve _ _ O
3SAT _ _ O
in _ _ O
polynomial _ _ O
time _ _ O
by _ _ O
simply _ _ O
convert _ _ O
hφi _ _ O
to _ _ O
hG _ _ O
, _ _ O
ki _ _ O
( _ _ O
in _ _ O
polynomial _ _ O
time _ _ O
) _ _ O
and _ _ O
then _ _ O
solve _ _ O
it _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Time _ _ O
Complexity _ _ O
04 _ _ O

NP-Completeness _ _ O
Recall _ _ O
that _ _ O
NP-Complete _ _ O
is _ _ O
a _ _ O
class _ _ O
of _ _ O
problems _ _ O
that _ _ O
are _ _ O
closely _ _ O
related _ _ O
If _ _ O
you _ _ O
can _ _ O
solve _ _ O
one _ _ O
problem _ _ O
in _ _ O
this _ _ O
class _ _ O
in _ _ O
polynomial _ _ O
time _ _ O
, _ _ O
all _ _ O
problems _ _ O
in _ _ O
this _ _ O
class _ _ O
can _ _ O
be _ _ O
solved _ _ O
in _ _ O
polynomial _ _ O
time _ _ O
Definition _ _ O
7.34 _ _ O
A _ _ O
language _ _ O
B _ _ O
is _ _ O
NP-Complete _ _ O
if _ _ O
it _ _ O
satisfies _ _ O
two _ _ O
conditions _ _ O
: _ _ O
1 _ _ O
B _ _ O
is _ _ O
in _ _ O
NP _ _ O
, _ _ O
and _ _ O
2 _ _ O
Every _ _ O
language _ _ O
A _ _ O
in _ _ O
NP _ _ O
is _ _ O
polynomial _ _ O
time _ _ O
reducible _ _ O
to _ _ O
B. _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Time _ _ O
Complexity _ _ O
04 _ _ O

NP-Completeness _ _ O
In _ _ O
other _ _ O
words _ _ O
, _ _ O
to _ _ O
show _ _ O
that _ _ O
a _ _ O
language _ _ O
B _ _ O
is _ _ O
NP-Complete _ _ O
we _ _ O
need _ _ O
to _ _ O
show _ _ O
the _ _ O
following _ _ O
: _ _ O
1 _ _ O
Show _ _ O
that _ _ O
B _ _ O
is _ _ O
in _ _ O
NP _ _ O
which _ _ O
can _ _ O
be _ _ O
done _ _ O
by _ _ O
one _ _ O
of _ _ O
the _ _ O
following _ _ O
: _ _ O
1 _ _ O
2 _ _ O
2 _ _ O
Show _ _ O
a _ _ O
polynomial _ _ O
time _ _ O
verifier _ _ O
V _ _ O
for _ _ O
B _ _ O
, _ _ O
or _ _ O
Show _ _ O
a _ _ O
NTM _ _ O
N _ _ O
that _ _ O
decide _ _ O
B _ _ O
in _ _ O
polynomial _ _ O
time _ _ O
Show _ _ O
that _ _ O
every _ _ O
language _ _ O
A _ _ O
in _ _ O
NP _ _ O
is _ _ O
polynomial _ _ O
time _ _ O
reducible _ _ O
to _ _ O
B _ _ O
Show _ _ O
an _ _ O
polynomial _ _ O
time _ _ O
reduction _ _ O
f _ _ O
: _ _ O
Σ∗ _ _ O
→ _ _ O
Σ∗ _ _ O
satisfying _ _ O
w _ _ O
∈ _ _ O
A _ _ O
↔ _ _ O
f _ _ O
( _ _ O
w _ _ O
) _ _ O
∈ _ _ O
B _ _ O
for _ _ O
every _ _ O
language _ _ O
A _ _ O
∈ _ _ O
NP _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Time _ _ O
Complexity _ _ O
04 _ _ O

SAT _ _ O
is _ _ O
NP-Complete _ _ O
So _ _ O
, _ _ O
to _ _ O
show _ _ O
that _ _ O
SAT _ _ O
is _ _ O
NP-Complete _ _ O
, _ _ O
we _ _ O
need _ _ O
to _ _ O
show _ _ O
the _ _ O
following _ _ O
: _ _ O
1 _ _ O
SAT _ _ O
∈ _ _ O
NP _ _ O
Simply _ _ O
construct _ _ O
a _ _ O
NTM _ _ O
that _ _ O
generates _ _ O
all _ _ O
possible _ _ O
assignments _ _ O
If _ _ O
one _ _ O
of _ _ O
them _ _ O
evaluated _ _ O
to _ _ O
1 _ _ O
, _ _ O
accept _ _ O
2 _ _ O
Show _ _ O
that _ _ O
a _ _ O
every _ _ O
language _ _ O
A _ _ O
in _ _ O
NP _ _ O
is _ _ O
polynomial _ _ O
time _ _ O
reducible _ _ O
to _ _ O
SAT _ _ O
Unfortunately _ _ O
, _ _ O
there _ _ O
are _ _ O
a _ _ O
lot _ _ O
of _ _ O
languages _ _ O
in _ _ O
NP _ _ O
But _ _ O
if _ _ O
we _ _ O
have _ _ O
an _ _ O
NP-Complete _ _ O
language _ _ O
B _ _ O
B _ _ O
is _ _ O
in _ _ O
NP _ _ O
Every _ _ O
language _ _ O
A _ _ O
∈ _ _ O
NP _ _ O
, _ _ O
A _ _ O
≤p _ _ O
B _ _ O
If _ _ O
we _ _ O
can _ _ O
show _ _ O
that _ _ O
B _ _ O
≤p _ _ O
SAT _ _ O
, _ _ O
every _ _ O
language _ _ O
A _ _ O
∈ _ _ O
NP _ _ O
, _ _ O
A _ _ O
≤p _ _ O
SAT _ _ O
But _ _ O
we _ _ O
do _ _ O
not _ _ O
have _ _ O
an _ _ O
NP-Complete _ _ O
problem _ _ O
yet _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Time _ _ O
Complexity _ _ O
04 _ _ O

SAT _ _ O
is _ _ O
NP-Complete _ _ O
Suppose _ _ O
a _ _ O
language _ _ O
A _ _ O
is _ _ O
in _ _ O
NP _ _ O
There _ _ O
exists _ _ O
a _ _ O
NTM _ _ O
M _ _ O
that _ _ O
decides _ _ O
A _ _ O
in _ _ O
polynomial _ _ O
time _ _ O
Note _ _ O
that _ _ O
we _ _ O
do _ _ O
not _ _ O
specify _ _ O
what _ _ O
is _ _ O
the _ _ O
language _ _ O
A _ _ O
and _ _ O
what _ _ O
is _ _ O
the _ _ O
description _ _ O
of _ _ O
NTM _ _ O
M _ _ O
The _ _ O
language _ _ O
A _ _ O
can _ _ O
be _ _ O
any _ _ O
language _ _ O
that _ _ O
is _ _ O
in _ _ O
NP _ _ O
and _ _ O
M _ _ O
is _ _ O
an _ _ O
NTM _ _ O
that _ _ O
decides _ _ O
A _ _ O
in _ _ O
polynomial _ _ O
time _ _ O
What _ _ O
we _ _ O
need _ _ O
is _ _ O
to _ _ O
show _ _ O
that _ _ O
A _ _ O
≤p _ _ O
SAT _ _ O
? _ _ O
Since _ _ O
we _ _ O
do _ _ O
not _ _ O
know _ _ O
what _ _ O
is _ _ O
the _ _ O
language _ _ O
A _ _ O
, _ _ O
we _ _ O
can _ _ O
not _ _ O
simply _ _ O
use _ _ O
the _ _ O
description _ _ O
of _ _ O
A _ _ O
Even _ _ O
though _ _ O
we _ _ O
do _ _ O
not _ _ O
have _ _ O
the _ _ O
description _ _ O
of _ _ O
NTM _ _ O
M _ _ O
but _ _ O
we _ _ O
know _ _ O
the _ _ O
following _ _ O
: _ _ O
M _ _ O
is _ _ O
a _ _ O
nondeterministic _ _ O
Turing _ _ O
machine _ _ O
NTM _ _ O
M _ _ O
is _ _ O
a _ _ O
decider _ _ O
for _ _ O
the _ _ O
language _ _ O
A _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Time _ _ O
Complexity _ _ O
04 _ _ O

SAT _ _ O
is _ _ O
NP-Complete _ _ O
About _ _ O
NTM _ _ O
M _ _ O
that _ _ O
decides _ _ O
A _ _ O
w∈A _ _ O
the _ _ O
accepting _ _ O
computation _ _ O
If _ _ O
M _ _ O
accepts _ _ O
w _ _ O
history _ _ O
for _ _ O
M _ _ O
on _ _ O
input _ _ O
w _ _ O
exists _ _ O
If _ _ O
M _ _ O
rejects _ _ O
w _ _ O
w _ _ O
6∈ _ _ O
A _ _ O
the _ _ O
accepting _ _ O
computation _ _ O
history _ _ O
for _ _ O
M _ _ O
on _ _ O
input _ _ O
w _ _ O
does _ _ O
not _ _ O
exists _ _ O
This _ _ O
is _ _ O
an _ _ O
NTM _ _ O
, _ _ O
there _ _ O
can _ _ O
be _ _ O
multiple _ _ O
computation _ _ O
histories _ _ O
We _ _ O
need _ _ O
to _ _ O
use _ _ O
reduction _ _ O
via _ _ O
computation _ _ O
histories _ _ O
Convert _ _ O
computation _ _ O
histories _ _ O
of _ _ O
M _ _ O
on _ _ O
input _ _ O
w _ _ O
to _ _ O
a _ _ O
formula _ _ O
φ _ _ O
such _ _ O
that _ _ O
If _ _ O
the _ _ O
accepting _ _ O
computation _ _ O
history _ _ O
for _ _ O
M _ _ O
on _ _ O
input _ _ O
w _ _ O
exists _ _ O
, _ _ O
φ _ _ O
is _ _ O
satisfiable _ _ O
( _ _ O
φ _ _ O
∈ _ _ O
SAT _ _ O
) _ _ O
If _ _ O
the _ _ O
accepting _ _ O
computation _ _ O
history _ _ O
for _ _ O
M _ _ O
on _ _ O
input _ _ O
w _ _ O
does _ _ O
not _ _ O
exists _ _ O
, _ _ O
φ _ _ O
is _ _ O
not _ _ O
satisfiable _ _ O
( _ _ O
φ _ _ O
6∈ _ _ O
SAT _ _ O
) _ _ O
Cook-Levin _ _ O
Theorem _ _ O
shows _ _ O
the _ _ O
method _ _ O
describe _ _ O
above _ _ O
and _ _ O
conclude _ _ O
that _ _ O
SAT _ _ O
is _ _ O
NP-Complete _ _ O
. _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Time _ _ O
Complexity _ _ O
04 _ _ O

3SAT _ _ O
is _ _ O
NP-Complete _ _ O
Since _ _ O
we _ _ O
already _ _ O
know _ _ O
that _ _ O
SAT _ _ O
is _ _ O
NP-Complete _ _ O
, _ _ O
to _ _ O
show _ _ O
that _ _ O
3SAT _ _ O
is _ _ O
NP-Complete _ _ O
, _ _ O
we _ _ O
need _ _ O
to _ _ O
show _ _ O
the _ _ O
following _ _ O
: _ _ O
1 _ _ O
3SAT _ _ O
∈ _ _ O
NP _ _ O
: _ _ O
Construct _ _ O
an _ _ O
NTM _ _ O
that _ _ O
generates _ _ O
all _ _ O
possible _ _ O
assignments _ _ O
If _ _ O
one _ _ O
of _ _ O
them _ _ O
evaluate _ _ O
to _ _ O
1 _ _ O
, _ _ O
accept _ _ O
2 _ _ O
SAT _ _ O
≤p _ _ O
3SAT _ _ O
: _ _ O
Convert _ _ O
the _ _ O
formula _ _ O
φ _ _ O
into _ _ O
a _ _ O
3cnf _ _ O
f _ _ O
( _ _ O
φ _ _ O
) _ _ O
satisfying _ _ O
φ _ _ O
∈ _ _ O
SAT _ _ O
↔ _ _ O
f _ _ O
( _ _ O
φ _ _ O
) _ _ O
∈ _ _ O
3SAT _ _ O
where _ _ O
f _ _ O
is _ _ O
a _ _ O
polynomial _ _ O
time _ _ O
reduction _ _ O
from _ _ O
SAT _ _ O
to _ _ O
3SAT _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Time _ _ O
Complexity _ _ O
04 _ _ O

From _ _ O
SAT _ _ O
to _ _ O
3SAT _ _ O
If _ _ O
a _ _ O
clause _ _ O
has _ _ O
less _ _ O
than _ _ O
three _ _ O
literal _ _ O
, _ _ O
add _ _ O
one _ _ O
or _ _ O
two _ _ O
literals _ _ O
from _ _ O
the _ _ O
same _ _ O
clause _ _ O
x1 _ _ O
( _ _ O
x1 _ _ O
∨ _ _ O
x1 _ _ O
∨ _ _ O
x1 _ _ O
) _ _ O
( _ _ O
x1 _ _ O
∨ _ _ O
x2 _ _ O
) _ _ O
( _ _ O
x1 _ _ O
∨ _ _ O
x1 _ _ O
∨ _ _ O
x2 _ _ O
) _ _ O
( _ _ O
x1 _ _ O
∨ _ _ O
x2 _ _ O
) _ _ O
( _ _ O
x1 _ _ O
∨ _ _ O
x2 _ _ O
∨ _ _ O
x2 _ _ O
) _ _ O
These _ _ O
results _ _ O
are _ _ O
logically _ _ O
equivalent _ _ O
with _ _ O
their _ _ O
original _ _ O
clauses _ _ O
If _ _ O
a _ _ O
clause _ _ O
has _ _ O
more _ _ O
than _ _ O
tree _ _ O
literals _ _ O
, _ _ O
split _ _ O
it _ _ O
into _ _ O
a _ _ O
number _ _ O
of _ _ O
clauses _ _ O
of _ _ O
three _ _ O
literals _ _ O
each _ _ O
. _ _ O
( _ _ O
x1 _ _ O
∨ _ _ O
x2 _ _ O
∨ _ _ O
x3 _ _ O
∨ _ _ O
x4 _ _ O
) _ _ O
( _ _ O
x1 _ _ O
∨ _ _ O
x2 _ _ O
∨ _ _ O
z _ _ O
) _ _ O
∧ _ _ O
( _ _ O
z _ _ O
∨ _ _ O
x3 _ _ O
∨ _ _ O
x4 _ _ O
) _ _ O
This _ _ O
is _ _ O
not _ _ O
logically _ _ O
equivalent _ _ O
It _ _ O
is _ _ O
equivalent _ _ O
in _ _ O
terms _ _ O
of _ _ O
satisfiability _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Time _ _ O
Complexity _ _ O
04 _ _ O

Additional _ _ O
NP-Complete _ _ O
Problems _ _ O
CLIQUE _ _ O
is _ _ O
NP-Complete _ _ O
We _ _ O
already _ _ O
show _ _ O
that _ _ O
3SAT _ _ O
≤p _ _ O
CLIQUE _ _ O
VERTEX _ _ O
−COVER _ _ O
is _ _ O
NP-Complete _ _ O
where _ _ O
VERTEX _ _ O
−COVER _ _ O
= _ _ O
{ _ _ O
hG _ _ O
, _ _ O
ki _ _ O
| _ _ O
G _ _ O
is _ _ O
an _ _ O
undirected _ _ O
graph _ _ O
that _ _ O
has _ _ O
a _ _ O
k-node _ _ O
vertex _ _ O
cover _ _ O
} _ _ O
Textbook _ _ O
shows _ _ O
that _ _ O
3SAT _ _ O
≤p _ _ O
VERTEX _ _ O
−COVER _ _ O
HAMPATH _ _ O
is _ _ O
NP-Complete _ _ O
Textbook _ _ O
shows _ _ O
that _ _ O
3SAT _ _ O
≤p _ _ O
HAMPATH _ _ O
SUBSET _ _ O
−SUM _ _ O
is _ _ O
NP-Complete _ _ O
Textbook _ _ O
shows _ _ O
that _ _ O
3SAT _ _ O
≤p _ _ O
SUBSET _ _ O
−SUM _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Time _ _ O
Complexity _ _ O
04 _ _ O



