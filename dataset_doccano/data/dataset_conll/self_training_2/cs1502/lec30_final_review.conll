self_training_2|cs1502|lec30_final_review
-DOCSTART- -X- -X- O

Review _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Review _ _ O

PSUBSETDFA _ _ O
Question _ _ O
Prove _ _ O
that _ _ O
PSUBSETDFA _ _ O
= _ _ O
{ _ _ O
hA _ _ O
, _ _ O
Bi|A _ _ O
and _ _ O
B _ _ O
are _ _ O
DFAs _ _ O
and _ _ O
L _ _ O
( _ _ O
A _ _ O
) _ _ O
⊂ _ _ O
L _ _ O
( _ _ O
B _ _ O
) _ _ O
} _ _ O
is _ _ O
decidable _ _ O
. _ _ O
Recall _ _ O
that _ _ O
you _ _ O
need _ _ O
to _ _ O
perform _ _ O
two _ _ O
tasks _ _ O
: _ _ O
1 _ _ O
2 _ _ O
Construct _ _ O
a _ _ O
TM _ _ O
that _ _ O
you _ _ O
think _ _ O
it _ _ O
decides _ _ O
PSUBSETDFA _ _ O
Prove _ _ O
that _ _ O
your _ _ O
TM _ _ O
is _ _ O
actually _ _ O
a _ _ O
decider _ _ O
for _ _ O
PSUBSETDFA _ _ O
Recall _ _ O
L _ _ O
( _ _ O
A _ _ O
) _ _ O
⊂ _ _ O
L _ _ O
( _ _ O
B _ _ O
) _ _ O
( _ _ O
proper _ _ O
subset _ _ O
) _ _ O
L _ _ O
( _ _ O
A _ _ O
) _ _ O
6= _ _ O
L _ _ O
( _ _ O
B _ _ O
) _ _ O
and _ _ O
L _ _ O
( _ _ O
A _ _ O
) _ _ O
is _ _ O
a _ _ O
subset _ _ O
of _ _ O
L _ _ O
( _ _ O
B _ _ O
) _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Review _ _ O

PSUBSETDFA _ _ O
is _ _ O
Decidable _ _ O
Solution _ _ O
: _ _ O
Construct _ _ O
a _ _ O
TM _ _ O
M _ _ O
0 _ _ O
to _ _ O
decide _ _ O
PSUBSETDFA _ _ O
as _ _ O
follows _ _ O
: _ _ O
M _ _ O
0 _ _ O
= _ _ O
“ _ _ O
On _ _ O
input _ _ O
hA _ _ O
, _ _ O
Bi _ _ O
where _ _ O
A _ _ O
and _ _ O
B _ _ O
are _ _ O
DFAs _ _ O
: _ _ O
1 _ _ O
Run _ _ O
TM _ _ O
F _ _ O
on _ _ O
input _ _ O
hA _ _ O
, _ _ O
Bi _ _ O
2 _ _ O
If _ _ O
F _ _ O
accepts _ _ O
hA _ _ O
, _ _ O
Bi _ _ O
, _ _ O
reject _ _ O
. _ _ O
3 _ _ O
Construct _ _ O
a _ _ O
DFA _ _ O
C _ _ O
such _ _ O
that _ _ O
L _ _ O
( _ _ O
C _ _ O
) _ _ O
= _ _ O
L _ _ O
( _ _ O
A _ _ O
) _ _ O
∩ _ _ O
L _ _ O
( _ _ O
B _ _ O
) _ _ O
4 _ _ O
Run _ _ O
TM _ _ O
T _ _ O
on _ _ O
input _ _ O
hCi _ _ O
5 _ _ O
If _ _ O
T _ _ O
accepts _ _ O
hCi _ _ O
, _ _ O
accept _ _ O
. _ _ O
If _ _ O
T _ _ O
rejects _ _ O
hCi _ _ O
, _ _ O
reject _ _ O
. _ _ O
” _ _ O
Next _ _ O
, _ _ O
we _ _ O
need _ _ O
to _ _ O
prove _ _ O
that _ _ O
the _ _ O
above _ _ O
TM _ _ O
M _ _ O
0 _ _ O
is _ _ O
a _ _ O
decider _ _ O
for _ _ O
PSUBSETDFA _ _ O
. _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Review _ _ O

PSUBSETTM _ _ O
is _ _ O
Decidable _ _ O
To _ _ O
show _ _ O
that _ _ O
TM _ _ O
M _ _ O
0 _ _ O
is _ _ O
a _ _ O
decider _ _ O
for _ _ O
PSUBSETDFA _ _ O
, _ _ O
we _ _ O
need _ _ O
to _ _ O
perform _ _ O
the _ _ O
following _ _ O
: _ _ O
Show _ _ O
that _ _ O
if _ _ O
hA _ _ O
, _ _ O
Bi _ _ O
∈ _ _ O
PSUBSETDFA _ _ O
, _ _ O
M _ _ O
0 _ _ O
will _ _ O
accept _ _ O
hA _ _ O
, _ _ O
Bi _ _ O
. _ _ O
Assume _ _ O
that _ _ O
hA _ _ O
, _ _ O
Bi _ _ O
∈ _ _ O
PSUBSETDFA _ _ O
. _ _ O
Since _ _ O
hA _ _ O
, _ _ O
Bi _ _ O
∈ _ _ O
PSUBSETDFA _ _ O
, _ _ O
A _ _ O
and _ _ O
B _ _ O
are _ _ O
DFAs _ _ O
and _ _ O
L _ _ O
( _ _ O
A _ _ O
) _ _ O
is _ _ O
a _ _ O
proper _ _ O
subset _ _ O
of _ _ O
L _ _ O
( _ _ O
B _ _ O
) _ _ O
. _ _ O
In _ _ O
other _ _ O
words _ _ O
, _ _ O
L _ _ O
( _ _ O
A _ _ O
) _ _ O
is _ _ O
not _ _ O
equal _ _ O
to _ _ O
L _ _ O
( _ _ O
B _ _ O
) _ _ O
and _ _ O
L _ _ O
( _ _ O
A _ _ O
) _ _ O
is _ _ O
a _ _ O
subset _ _ O
of _ _ O
L _ _ O
( _ _ O
B _ _ O
) _ _ O
. _ _ O
Since _ _ O
L _ _ O
( _ _ O
A _ _ O
) _ _ O
is _ _ O
not _ _ O
equal _ _ O
to _ _ O
L _ _ O
( _ _ O
B _ _ O
) _ _ O
, _ _ O
hA _ _ O
, _ _ O
Bi _ _ O
6∈ _ _ O
EQDFA _ _ O
. _ _ O
Since _ _ O
F _ _ O
is _ _ O
a _ _ O
decider _ _ O
for _ _ O
EQDFA _ _ O
, _ _ O
by _ _ O
running _ _ O
F _ _ O
on _ _ O
input _ _ O
hA _ _ O
, _ _ O
Bi _ _ O
, _ _ O
F _ _ O
will _ _ O
reject _ _ O
hA _ _ O
, _ _ O
Bi _ _ O
. _ _ O
Since _ _ O
L _ _ O
( _ _ O
A _ _ O
) _ _ O
is _ _ O
a _ _ O
subset _ _ O
of _ _ O
L _ _ O
( _ _ O
B _ _ O
) _ _ O
, _ _ O
L _ _ O
( _ _ O
C _ _ O
) _ _ O
will _ _ O
be _ _ O
empty _ _ O
. _ _ O
Since _ _ O
L _ _ O
( _ _ O
C _ _ O
) _ _ O
is _ _ O
empty _ _ O
, _ _ O
hCi _ _ O
∈ _ _ O
EDFA _ _ O
. _ _ O
Since _ _ O
T _ _ O
is _ _ O
a _ _ O
decider _ _ O
for _ _ O
EDFA _ _ O
, _ _ O
by _ _ O
running _ _ O
T _ _ O
on _ _ O
input _ _ O
hCi _ _ O
, _ _ O
T _ _ O
will _ _ O
accept _ _ O
hCi _ _ O
. _ _ O
Since _ _ O
T _ _ O
accepts _ _ O
hCi _ _ O
, _ _ O
M _ _ O
0 _ _ O
accepts _ _ O
hA _ _ O
, _ _ O
Bi _ _ O
. _ _ O
Show _ _ O
that _ _ O
if _ _ O
hA _ _ O
, _ _ O
Bi _ _ O
6∈ _ _ O
PSUBSETTM _ _ O
, _ _ O
M _ _ O
0 _ _ O
will _ _ O
reject _ _ O
hA _ _ O
, _ _ O
Bi _ _ O
. _ _ O
Assume _ _ O
that _ _ O
hA _ _ O
, _ _ O
Bi _ _ O
6∈ _ _ O
PSUBSETDFA _ _ O
. _ _ O
Since _ _ O
hA _ _ O
, _ _ O
Bi _ _ O
6∈ _ _ O
PSUBSETDFA _ _ O
, _ _ O
A _ _ O
and _ _ O
B _ _ O
are _ _ O
DFAs _ _ O
and _ _ O
L _ _ O
( _ _ O
A _ _ O
) _ _ O
is _ _ O
not _ _ O
a _ _ O
proper _ _ O
subset _ _ O
of _ _ O
L _ _ O
( _ _ O
B _ _ O
) _ _ O
. _ _ O
In _ _ O
other _ _ O
words _ _ O
, _ _ O
L _ _ O
( _ _ O
A _ _ O
) _ _ O
= _ _ O
L _ _ O
( _ _ O
B _ _ O
) _ _ O
or _ _ O
L _ _ O
( _ _ O
A _ _ O
) _ _ O
is _ _ O
not _ _ O
a _ _ O
subset _ _ O
of _ _ O
L _ _ O
( _ _ O
B _ _ O
) _ _ O
. _ _ O
Suppose _ _ O
L _ _ O
( _ _ O
A _ _ O
) _ _ O
= _ _ O
L _ _ O
( _ _ O
B _ _ O
) _ _ O
. _ _ O
Since _ _ O
L _ _ O
( _ _ O
A _ _ O
) _ _ O
= _ _ O
L _ _ O
( _ _ O
B _ _ O
) _ _ O
, _ _ O
hA _ _ O
, _ _ O
Bi _ _ O
∈ _ _ O
EQDFA _ _ O
. _ _ O
Since _ _ O
F _ _ O
is _ _ O
a _ _ O
decider _ _ O
for _ _ O
EQDFA _ _ O
, _ _ O
by _ _ O
running _ _ O
F _ _ O
on _ _ O
input _ _ O
hA _ _ O
, _ _ O
Bi _ _ O
, _ _ O
F _ _ O
will _ _ O
accept _ _ O
hA _ _ O
, _ _ O
Bi _ _ O
. _ _ O
Since _ _ O
F _ _ O
accepts _ _ O
hA _ _ O
, _ _ O
Bi _ _ O
, _ _ O
M _ _ O
0 _ _ O
rejects _ _ O
hA _ _ O
, _ _ O
Bi _ _ O
. _ _ O
Suppose _ _ O
L _ _ O
( _ _ O
A _ _ O
) _ _ O
is _ _ O
not _ _ O
a _ _ O
subset _ _ O
of _ _ O
L _ _ O
( _ _ O
B _ _ O
) _ _ O
. _ _ O
Since _ _ O
L _ _ O
( _ _ O
A _ _ O
) _ _ O
is _ _ O
not _ _ O
a _ _ O
subset _ _ O
of _ _ O
L _ _ O
( _ _ O
B _ _ O
) _ _ O
, _ _ O
L _ _ O
( _ _ O
C _ _ O
) _ _ O
will _ _ O
not _ _ O
be _ _ O
empty _ _ O
. _ _ O
Since _ _ O
L _ _ O
( _ _ O
C _ _ O
) _ _ O
is _ _ O
not _ _ O
empty _ _ O
, _ _ O
hCi _ _ O
6∈ _ _ O
EDFA _ _ O
. _ _ O
Since _ _ O
T _ _ O
is _ _ O
a _ _ O
decider _ _ O
for _ _ O
EDFA _ _ O
, _ _ O
by _ _ O
running _ _ O
T _ _ O
on _ _ O
input _ _ O
hCi _ _ O
, _ _ O
T _ _ O
will _ _ O
reject _ _ O
hCi _ _ O
. _ _ O
Since _ _ O
T _ _ O
rejects _ _ O
hCi _ _ O
, _ _ O
M _ _ O
0 _ _ O
rejects _ _ O
hA _ _ O
, _ _ O
Bi _ _ O
. _ _ O
This _ _ O
shows _ _ O
that _ _ O
M _ _ O
0 _ _ O
is _ _ O
a _ _ O
decider _ _ O
for _ _ O
PSUBSETDFA _ _ O
DFA _ _ O
. _ _ O
Therefore _ _ O
, _ _ O
PSUBSETDFA _ _ O
is _ _ O
decidable _ _ O
. _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Review _ _ O

ALLBUTONETM _ _ O
Question _ _ O
Prove _ _ O
that _ _ O
ALLBUTONETM _ _ O
= _ _ O
{ _ _ O
hM _ _ O
i|M _ _ O
is _ _ O
a _ _ O
TM _ _ O
that _ _ O
accepts _ _ O
all _ _ O
but _ _ O
one _ _ O
string _ _ O
} _ _ O
is _ _ O
undecidable _ _ O
. _ _ O
Note _ _ O
that _ _ O
if _ _ O
TM _ _ O
M _ _ O
accepts _ _ O
all _ _ O
but _ _ O
one _ _ O
string _ _ O
, _ _ O
L _ _ O
( _ _ O
M _ _ O
) _ _ O
= _ _ O
Σ∗ _ _ O
− _ _ O
{ _ _ O
w _ _ O
} _ _ O
for _ _ O
a _ _ O
string _ _ O
w. _ _ O
Recall _ _ O
that _ _ O
there _ _ O
are _ _ O
two _ _ O
methods _ _ O
: _ _ O
1 _ _ O
2 _ _ O
Show _ _ O
that _ _ O
if _ _ O
ALLBUTONETM _ _ O
is _ _ O
decidable _ _ O
, _ _ O
ATM _ _ O
is _ _ O
decidable _ _ O
Use _ _ O
mapping _ _ O
reducibility _ _ O
to _ _ O
show _ _ O
that _ _ O
ATM _ _ O
≤m _ _ O
ALLBUTONETM _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Review _ _ O

ALLBUTONETM _ _ O
is _ _ O
Undecidable _ _ O
( _ _ O
Method _ _ O
1 _ _ O
) _ _ O
Assume _ _ O
that _ _ O
ALLBUTONETM _ _ O
is _ _ O
decidable _ _ O
. _ _ O
Since _ _ O
ALLBUTONETM _ _ O
is _ _ O
decidable _ _ O
, _ _ O
there _ _ O
exists _ _ O
a _ _ O
TM _ _ O
R _ _ O
that _ _ O
decides _ _ O
ALLBUTONETM _ _ O
. _ _ O
Construct _ _ O
a _ _ O
TM _ _ O
S _ _ O
to _ _ O
decide _ _ O
ATM _ _ O
as _ _ O
follows _ _ O
: _ _ O
S _ _ O
= _ _ O
“ _ _ O
On _ _ O
input _ _ O
hM _ _ O
, _ _ O
wi _ _ O
where _ _ O
M _ _ O
is _ _ O
a _ _ O
TM _ _ O
and _ _ O
w _ _ O
is _ _ O
a _ _ O
string _ _ O
: _ _ O
1 _ _ O
Construct _ _ O
a _ _ O
TM _ _ O
M _ _ O
0 _ _ O
as _ _ O
follows _ _ O
: _ _ O
M _ _ O
0 _ _ O
= _ _ O
“ _ _ O
On _ _ O
input _ _ O
x _ _ O
: _ _ O
1 _ _ O
2 _ _ O
3 _ _ O
If _ _ O
x _ _ O
= _ _ O
= _ _ O
ε _ _ O
, _ _ O
reject _ _ O
. _ _ O
Run _ _ O
M _ _ O
on _ _ O
input _ _ O
w. _ _ O
If _ _ O
M _ _ O
accepts _ _ O
w _ _ O
, _ _ O
accept _ _ O
. _ _ O
If _ _ O
M _ _ O
rejects _ _ O
w _ _ O
, _ _ O
reject _ _ O
. _ _ O
” _ _ O
2 _ _ O
Run _ _ O
TM _ _ O
R _ _ O
on _ _ O
input _ _ O
hM _ _ O
0 _ _ O
i. _ _ O
3 _ _ O
If _ _ O
R _ _ O
accepts _ _ O
hM _ _ O
0 _ _ O
i _ _ O
, _ _ O
accept _ _ O
. _ _ O
If _ _ O
R _ _ O
rejects _ _ O
hM _ _ O
0 _ _ O
i _ _ O
, _ _ O
reject _ _ O
. _ _ O
” _ _ O
Next _ _ O
, _ _ O
we _ _ O
need _ _ O
to _ _ O
show _ _ O
that _ _ O
the _ _ O
above _ _ O
TM _ _ O
S _ _ O
is _ _ O
a _ _ O
decider _ _ O
for _ _ O
ATM _ _ O
. _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Review _ _ O

ALLBUTONETM _ _ O
is _ _ O
Undecidable _ _ O
( _ _ O
Method _ _ O
1 _ _ O
) _ _ O
To _ _ O
show _ _ O
that _ _ O
TM _ _ O
M _ _ O
0 _ _ O
is _ _ O
a _ _ O
decider _ _ O
for _ _ O
ALLBUTONETM _ _ O
, _ _ O
we _ _ O
need _ _ O
to _ _ O
perform _ _ O
the _ _ O
following _ _ O
: _ _ O
If _ _ O
hM _ _ O
, _ _ O
wi _ _ O
∈ _ _ O
ATM _ _ O
, _ _ O
S _ _ O
will _ _ O
accept _ _ O
hM _ _ O
, _ _ O
wi _ _ O
. _ _ O
Assume _ _ O
that _ _ O
hM _ _ O
, _ _ O
wi _ _ O
∈ _ _ O
ATM _ _ O
. _ _ O
Since _ _ O
hM _ _ O
, _ _ O
wi _ _ O
∈ _ _ O
ATM _ _ O
, _ _ O
M _ _ O
is _ _ O
a _ _ O
TM _ _ O
that _ _ O
accepts _ _ O
w. _ _ O
Since _ _ O
M _ _ O
accepts _ _ O
w _ _ O
, _ _ O
from _ _ O
the _ _ O
description _ _ O
of _ _ O
TM _ _ O
M _ _ O
0 _ _ O
, _ _ O
L _ _ O
( _ _ O
M _ _ O
0 _ _ O
) _ _ O
= _ _ O
Σ∗ _ _ O
− _ _ O
{ _ _ O
ε _ _ O
} _ _ O
. _ _ O
Since _ _ O
L _ _ O
( _ _ O
M _ _ O
0 _ _ O
) _ _ O
= _ _ O
Σ∗ _ _ O
− _ _ O
{ _ _ O
ε _ _ O
} _ _ O
, _ _ O
hM _ _ O
0 _ _ O
i _ _ O
∈ _ _ O
ALLBUTONETM _ _ O
. _ _ O
Since _ _ O
R _ _ O
is _ _ O
a _ _ O
decider _ _ O
for _ _ O
ALLBUTONETM _ _ O
, _ _ O
by _ _ O
running _ _ O
R _ _ O
on _ _ O
input _ _ O
ALLBUTONETM _ _ O
, _ _ O
R _ _ O
will _ _ O
accept _ _ O
hM _ _ O
0 _ _ O
i. _ _ O
Since _ _ O
R _ _ O
accepts _ _ O
hM _ _ O
0 _ _ O
i _ _ O
, _ _ O
S _ _ O
accepts _ _ O
hM _ _ O
, _ _ O
wi _ _ O
. _ _ O
If _ _ O
hM _ _ O
, _ _ O
wi _ _ O
6∈ _ _ O
ATM _ _ O
, _ _ O
S _ _ O
will _ _ O
reject _ _ O
hM _ _ O
, _ _ O
wi _ _ O
. _ _ O
Assume _ _ O
that _ _ O
hM _ _ O
, _ _ O
wi _ _ O
6∈ _ _ O
ATM _ _ O
. _ _ O
Since _ _ O
hM _ _ O
, _ _ O
wi _ _ O
6∈ _ _ O
ATM _ _ O
, _ _ O
M _ _ O
is _ _ O
a _ _ O
TM _ _ O
that _ _ O
does _ _ O
not _ _ O
accept _ _ O
w. _ _ O
Since _ _ O
M _ _ O
does _ _ O
not _ _ O
accept _ _ O
w _ _ O
, _ _ O
from _ _ O
the _ _ O
description _ _ O
of _ _ O
TM _ _ O
M _ _ O
0 _ _ O
, _ _ O
L _ _ O
( _ _ O
M _ _ O
0 _ _ O
) _ _ O
= _ _ O
∅. _ _ O
Since _ _ O
L _ _ O
( _ _ O
M _ _ O
0 _ _ O
) _ _ O
= _ _ O
∅ _ _ O
, _ _ O
L _ _ O
( _ _ O
M _ _ O
0 _ _ O
) _ _ O
6= _ _ O
Σ∗ _ _ O
− _ _ O
{ _ _ O
w _ _ O
} _ _ O
for _ _ O
a _ _ O
string _ _ O
w. _ _ O
In _ _ O
other _ _ O
words _ _ O
, _ _ O
hM _ _ O
0 _ _ O
i _ _ O
6∈ _ _ O
ALLBUTONETM _ _ O
. _ _ O
Since _ _ O
R _ _ O
is _ _ O
a _ _ O
decider _ _ O
for _ _ O
ALLBUTONETM _ _ O
, _ _ O
by _ _ O
running _ _ O
R _ _ O
on _ _ O
input _ _ O
ALLBUTONETM _ _ O
, _ _ O
R _ _ O
will _ _ O
reject _ _ O
hM _ _ O
0 _ _ O
i. _ _ O
Since _ _ O
R _ _ O
rejects _ _ O
hM _ _ O
0 _ _ O
i _ _ O
, _ _ O
S _ _ O
rejects _ _ O
hM _ _ O
, _ _ O
wi _ _ O
. _ _ O
This _ _ O
shows _ _ O
that _ _ O
S _ _ O
is _ _ O
a _ _ O
decider _ _ O
for _ _ O
ATM _ _ O
. _ _ O
In _ _ O
other _ _ O
words _ _ O
ATM _ _ O
is _ _ O
decidable _ _ O
. _ _ O
This _ _ O
contradicts _ _ O
with _ _ O
the _ _ O
fact _ _ O
that _ _ O
ATM _ _ O
is _ _ O
undecidable _ _ O
. _ _ O
Therefore _ _ O
, _ _ O
ALLBUTONETM _ _ O
is _ _ O
undecidable _ _ O
. _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Review _ _ O

ALLBUTONETM _ _ O
is _ _ O
Undecidable _ _ O
( _ _ O
Method _ _ O
2 _ _ O
) _ _ O
Need _ _ O
to _ _ O
show _ _ O
that _ _ O
ATM _ _ O
≤m _ _ O
ALLBUTONETM _ _ O
. _ _ O
Construct _ _ O
a _ _ O
TM _ _ O
F _ _ O
as _ _ O
follows _ _ O
: _ _ O
F _ _ O
= _ _ O
“ _ _ O
On _ _ O
input _ _ O
hM _ _ O
, _ _ O
wi _ _ O
where _ _ O
M _ _ O
is _ _ O
a _ _ O
TM _ _ O
and _ _ O
w _ _ O
is _ _ O
a _ _ O
string _ _ O
: _ _ O
1 _ _ O
Construct _ _ O
a _ _ O
TM _ _ O
M _ _ O
0 _ _ O
as _ _ O
follows _ _ O
: _ _ O
M _ _ O
0 _ _ O
= _ _ O
“ _ _ O
On _ _ O
input _ _ O
x _ _ O
: _ _ O
1 _ _ O
2 _ _ O
3 _ _ O
2 _ _ O
If _ _ O
x _ _ O
= _ _ O
= _ _ O
ε _ _ O
, _ _ O
reject _ _ O
. _ _ O
Run _ _ O
M _ _ O
on _ _ O
input _ _ O
w. _ _ O
If _ _ O
M _ _ O
accepts _ _ O
w _ _ O
, _ _ O
accept _ _ O
. _ _ O
If _ _ O
M _ _ O
rejects _ _ O
w _ _ O
, _ _ O
reject _ _ O
. _ _ O
” _ _ O
Output _ _ O
hM _ _ O
0 _ _ O
i. _ _ O
Next _ _ O
, _ _ O
we _ _ O
need _ _ O
to _ _ O
show _ _ O
that _ _ O
the _ _ O
above _ _ O
TM _ _ O
F _ _ O
is _ _ O
a _ _ O
reduction _ _ O
from _ _ O
ATM _ _ O
to _ _ O
ALLBUTONETM _ _ O
. _ _ O
In _ _ O
other _ _ O
word _ _ O
, _ _ O
we _ _ O
have _ _ O
to _ _ O
show _ _ O
that _ _ O
it _ _ O
satisfies _ _ O
: _ _ O
hM _ _ O
, _ _ O
wi _ _ O
∈ _ _ O
ATM _ _ O
↔ _ _ O
F _ _ O
( _ _ O
hM _ _ O
, _ _ O
wi _ _ O
) _ _ O
∈ _ _ O
ALLBUTONETM _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Review _ _ O

ALLBUTONETM _ _ O
is _ _ O
Undecidable _ _ O
( _ _ O
Method _ _ O
2 _ _ O
) _ _ O
To _ _ O
show _ _ O
that _ _ O
TM _ _ O
F _ _ O
is _ _ O
a _ _ O
reduction _ _ O
from _ _ O
ATM _ _ O
to _ _ O
ALLBUTONETM _ _ O
, _ _ O
we _ _ O
need _ _ O
to _ _ O
perform _ _ O
the _ _ O
following _ _ O
: _ _ O
If _ _ O
hM _ _ O
, _ _ O
wi _ _ O
∈ _ _ O
ATM _ _ O
, _ _ O
F _ _ O
( _ _ O
hM _ _ O
, _ _ O
wi _ _ O
) _ _ O
∈ _ _ O
ALLBUTONETM _ _ O
. _ _ O
Assume _ _ O
that _ _ O
hM _ _ O
, _ _ O
wi _ _ O
∈ _ _ O
ATM _ _ O
. _ _ O
Since _ _ O
hM _ _ O
, _ _ O
wi _ _ O
∈ _ _ O
ATM _ _ O
, _ _ O
M _ _ O
is _ _ O
a _ _ O
TM _ _ O
that _ _ O
accepts _ _ O
w. _ _ O
Since _ _ O
M _ _ O
accepts _ _ O
w _ _ O
, _ _ O
from _ _ O
the _ _ O
description _ _ O
of _ _ O
TM _ _ O
M _ _ O
0 _ _ O
, _ _ O
L _ _ O
( _ _ O
M _ _ O
0 _ _ O
) _ _ O
= _ _ O
Σ∗ _ _ O
− _ _ O
{ _ _ O
ε _ _ O
} _ _ O
. _ _ O
Since _ _ O
L _ _ O
( _ _ O
M _ _ O
0 _ _ O
) _ _ O
= _ _ O
Σ∗ _ _ O
− _ _ O
{ _ _ O
ε _ _ O
} _ _ O
, _ _ O
hM _ _ O
0 _ _ O
i _ _ O
∈ _ _ O
ALLBUTONETM _ _ O
. _ _ O
Since _ _ O
F _ _ O
( _ _ O
hM _ _ O
, _ _ O
wi _ _ O
) _ _ O
= _ _ O
hM _ _ O
0 _ _ O
i _ _ O
, _ _ O
F _ _ O
( _ _ O
hM _ _ O
, _ _ O
wi _ _ O
) _ _ O
∈ _ _ O
ALLBUTONETM _ _ O
. _ _ O
If _ _ O
hM _ _ O
, _ _ O
wi _ _ O
6∈ _ _ O
ATM _ _ O
, _ _ O
F _ _ O
( _ _ O
hM _ _ O
, _ _ O
wi _ _ O
) _ _ O
6∈ _ _ O
ALLBUTONETM _ _ O
. _ _ O
Assume _ _ O
that _ _ O
hM _ _ O
, _ _ O
wi _ _ O
6∈ _ _ O
ATM _ _ O
. _ _ O
Since _ _ O
hM _ _ O
, _ _ O
wi _ _ O
6∈ _ _ O
ATM _ _ O
, _ _ O
M _ _ O
is _ _ O
a _ _ O
TM _ _ O
that _ _ O
does _ _ O
not _ _ O
accept _ _ O
w. _ _ O
Since _ _ O
M _ _ O
does _ _ O
not _ _ O
accept _ _ O
w _ _ O
, _ _ O
from _ _ O
the _ _ O
description _ _ O
of _ _ O
TM _ _ O
M _ _ O
0 _ _ O
, _ _ O
L _ _ O
( _ _ O
M _ _ O
0 _ _ O
) _ _ O
= _ _ O
∅. _ _ O
Since _ _ O
L _ _ O
( _ _ O
M _ _ O
0 _ _ O
) _ _ O
= _ _ O
∅ _ _ O
, _ _ O
L _ _ O
( _ _ O
M _ _ O
0 _ _ O
) _ _ O
6= _ _ O
Σ∗ _ _ O
− _ _ O
{ _ _ O
w _ _ O
} _ _ O
for _ _ O
a _ _ O
string _ _ O
w. _ _ O
In _ _ O
other _ _ O
words _ _ O
, _ _ O
hM _ _ O
0 _ _ O
i _ _ O
6∈ _ _ O
ALLBUTONETM _ _ O
. _ _ O
Since _ _ O
F _ _ O
( _ _ O
hM _ _ O
, _ _ O
wi _ _ O
) _ _ O
= _ _ O
hM _ _ O
0 _ _ O
i _ _ O
, _ _ O
F _ _ O
( _ _ O
hM _ _ O
, _ _ O
wi _ _ O
) _ _ O
6∈ _ _ O
ALLBUTONETM _ _ O
. _ _ O
This _ _ O
shows _ _ O
that _ _ O
F _ _ O
is _ _ O
a _ _ O
reduction _ _ O
from _ _ O
ATM _ _ O
to _ _ O
ALLBUTONETM _ _ O
. _ _ O
Since _ _ O
ATM _ _ O
is _ _ O
undecidable _ _ O
, _ _ O
ALLBUTONETM _ _ O
is _ _ O
undecidable _ _ O
. _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Review _ _ O

NOTPRIME _ _ O
Question _ _ O
Consider _ _ O
the _ _ O
following _ _ O
language _ _ O
NOTPRIME _ _ O
= _ _ O
{ _ _ O
hni|n _ _ O
is _ _ O
a _ _ O
natural _ _ O
number _ _ O
and _ _ O
n _ _ O
is _ _ O
not _ _ O
a _ _ O
prime _ _ O
number _ _ O
} _ _ O
Perform _ _ O
the _ _ O
following _ _ O
: _ _ O
1 _ _ O
Construct _ _ O
a _ _ O
verifier _ _ O
for _ _ O
the _ _ O
language _ _ O
NOTPRIME _ _ O
2 _ _ O
Construct _ _ O
an _ _ O
NTM _ _ O
that _ _ O
decides _ _ O
NOTPRIME _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Review _ _ O

A _ _ O
Verifier _ _ O
of _ _ O
NOTPRIME _ _ O
Given _ _ O
a _ _ O
language _ _ O
A _ _ O
, _ _ O
a _ _ O
verifier _ _ O
V _ _ O
of _ _ O
the _ _ O
language _ _ O
A _ _ O
is _ _ O
a _ _ O
TM _ _ O
satisfying _ _ O
A _ _ O
= _ _ O
{ _ _ O
w _ _ O
| _ _ O
V _ _ O
accepts _ _ O
hw _ _ O
, _ _ O
ci _ _ O
for _ _ O
some _ _ O
c _ _ O
} _ _ O
From _ _ O
the _ _ O
above _ _ O
description _ _ O
Given _ _ O
a _ _ O
string _ _ O
w _ _ O
∈ _ _ O
A _ _ O
, _ _ O
V _ _ O
must _ _ O
accept _ _ O
hw _ _ O
, _ _ O
ci _ _ O
for _ _ O
some _ _ O
c _ _ O
Given _ _ O
a _ _ O
string _ _ O
w _ _ O
6∈ _ _ O
A _ _ O
, _ _ O
V _ _ O
must _ _ O
reject _ _ O
hw _ _ O
, _ _ O
ci _ _ O
for _ _ O
all _ _ O
c _ _ O
A _ _ O
verifier _ _ O
for _ _ O
NOTPRIME _ _ O
must _ _ O
satisfies _ _ O
NOTPRIME _ _ O
= _ _ O
{ _ _ O
hni _ _ O
| _ _ O
V _ _ O
accepts _ _ O
hn _ _ O
, _ _ O
ci _ _ O
for _ _ O
some _ _ O
c _ _ O
} _ _ O
An _ _ O
example _ _ O
of _ _ O
a _ _ O
verifier _ _ O
for _ _ O
the _ _ O
language _ _ O
NOTPRIME _ _ O
: _ _ O
V _ _ O
= _ _ O
“ _ _ O
On _ _ O
input _ _ O
hn _ _ O
, _ _ O
ci _ _ O
where _ _ O
n _ _ O
and _ _ O
c _ _ O
are _ _ O
natural _ _ O
numbers _ _ O
: _ _ O
1 _ _ O
2 _ _ O
If _ _ O
c _ _ O
= _ _ O
= _ _ O
1 _ _ O
or _ _ O
c _ _ O
≥ _ _ O
n _ _ O
, _ _ O
reject _ _ O
. _ _ O
If _ _ O
n _ _ O
mod _ _ O
c _ _ O
= _ _ O
= _ _ O
0 _ _ O
, _ _ O
accept _ _ O
. _ _ O
” _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Review _ _ O

An _ _ O
NTM _ _ O
that _ _ O
decides _ _ O
NOTPRIME _ _ O
Think _ _ O
about _ _ O
how _ _ O
brute _ _ O
force _ _ O
algorithm _ _ O
should _ _ O
work _ _ O
Generate _ _ O
all _ _ O
possible _ _ O
strings _ _ O
between _ _ O
2 _ _ O
and _ _ O
n _ _ O
− _ _ O
1 _ _ O
( _ _ O
inclusive _ _ O
) _ _ O
If _ _ O
n _ _ O
is _ _ O
divisible _ _ O
by _ _ O
one _ _ O
of _ _ O
them _ _ O
, _ _ O
n _ _ O
is _ _ O
not _ _ O
a _ _ O
prime _ _ O
number _ _ O
An _ _ O
example _ _ O
of _ _ O
an _ _ O
NTM _ _ O
that _ _ O
decides _ _ O
the _ _ O
language _ _ O
NOTPRIME _ _ O
: _ _ O
N _ _ O
= _ _ O
“ _ _ O
On _ _ O
input _ _ O
hni _ _ O
where _ _ O
n _ _ O
is _ _ O
a _ _ O
natural _ _ O
numbers _ _ O
: _ _ O
1 _ _ O
2 _ _ O
Select _ _ O
a _ _ O
number _ _ O
c _ _ O
where _ _ O
c _ _ O
is _ _ O
nondeterministically _ _ O
selected _ _ O
between _ _ O
2 _ _ O
and _ _ O
n _ _ O
− _ _ O
1 _ _ O
( _ _ O
inclusive _ _ O
) _ _ O
If _ _ O
n _ _ O
mod _ _ O
c _ _ O
= _ _ O
= _ _ O
0 _ _ O
, _ _ O
accept _ _ O
. _ _ O
” _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
tkosiyat@cs.pitt.edu _ _ O
Review _ _ O



