['test_set', 'labeled']|cs0449|lec17
-DOCSTART- -X- -X- O

17 _ _ O
Files _ _ O
and _ _ O
Directories _ _ O
Introduction _ _ O
to _ _ O
Systems _ _ O
Software _ _ O
wilkie _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O

The _ _ O
Nature _ _ O
of _ _ O
Data _ _ O
The _ _ O
Lord _ _ O
of _ _ O
the _ _ O
Files _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
2 _ _ O

Files _ _ O
and _ _ O
Data _ _ O
• _ _ O
What _ _ O
is _ _ O
a _ _ O
file _ _ O
? _ _ O
What _ _ O
is _ _ O
“ _ _ O
data _ _ O
” _ _ O
? _ _ O
What _ _ O
is _ _ O
a _ _ O
binary _ _ O
file _ _ O
vs. _ _ O
a _ _ O
text _ _ O
file _ _ O
? _ _ O
files.c _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
files.o _ _ O
cat.gif _ _ O
3 _ _ O

Formats _ _ O
• _ _ O
What _ _ O
is _ _ O
a _ _ O
file _ _ O
“ _ _ O
format _ _ O
” _ _ O
? _ _ O
Why _ _ O
are _ _ O
there _ _ O
so _ _ O
many _ _ O
different _ _ O
image _ _ O
types _ _ O
? _ _ O
? _ _ O
▪ _ _ O
All _ _ O
files _ _ O
are _ _ O
flat _ _ O
binary _ _ O
blobs _ _ O
of _ _ O
information _ _ O
. _ _ O
How _ _ O
can _ _ O
we _ _ O
tell _ _ O
them _ _ O
apart _ _ O
? _ _ O
• _ _ O
Well _ _ O
, _ _ O
remember _ _ O
ELF _ _ O
? _ _ O
Our _ _ O
executable _ _ O
format _ _ O
? _ _ O
▪ _ _ O
And _ _ O
the _ _ O
MAGIC _ _ O
NUMBER _ _ O
inside _ _ O
the _ _ O
box _ _ O
? _ _ O
• _ _ O
This _ _ O
is _ _ O
one _ _ O
way _ _ O
we _ _ O
differentiate _ _ O
different _ _ O
files _ _ O
. _ _ O
▪ _ _ O
Archivists _ _ O
and _ _ O
librarians _ _ O
keep _ _ O
track _ _ O
of _ _ O
different _ _ O
file _ _ O
formats _ _ O
when _ _ O
they _ _ O
digitize _ _ O
, _ _ O
store _ _ O
, _ _ O
and _ _ O
retrieve _ _ O
data _ _ O
. _ _ O
They _ _ O
maintain _ _ O
the _ _ O
PRONOM _ _ O
database _ _ O
of _ _ O
formats _ _ O
. _ _ O
• _ _ O
Ok _ _ O
. _ _ O
How _ _ O
do _ _ O
we _ _ O
read _ _ O
files _ _ O
? _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
4 _ _ O

C _ _ O
Programming _ _ O
: _ _ O
Manipulating _ _ O
Files _ _ O
with _ _ O
stdio _ _ O
C _ _ O
( _ _ O
) _ _ O
• _ _ O
Here _ _ O
is _ _ O
a _ _ O
simple _ _ O
C _ _ O
program _ _ O
that _ _ O
creates _ _ O
a _ _ O
file _ _ O
called _ _ O
“ _ _ O
” _ _ O
and _ _ O
writes _ _ O
a _ _ O
string _ _ O
to _ _ O
it _ _ O
, _ _ O
then _ _ O
opens _ _ O
it _ _ O
again _ _ O
to _ _ O
print _ _ O
it _ _ O
out _ _ O
. _ _ O
Open _ _ O
for _ _ O
writing _ _ O
• _ _ O
: _ _ O
Open _ _ O
read-only _ _ O
Opens _ _ O
a _ _ O
file _ _ O
with _ _ O
the _ _ O
given _ _ O
path _ _ O
. _ _ O
The _ _ O
string _ _ O
that _ _ O
follows _ _ O
is _ _ O
the _ _ O
access _ _ O
mode _ _ O
. _ _ O
“ _ _ O
” _ _ O
opens _ _ O
for _ _ O
writing _ _ O
; _ _ O
overwrites _ _ O
file _ _ O
. _ _ O
“ _ _ O
” _ _ O
opens _ _ O
read-only _ _ O
. _ _ O
• _ _ O
: _ _ O
Reads _ _ O
to _ _ O
the _ _ O
provided _ _ O
buffer _ _ O
the _ _ O
given _ _ O
number _ _ O
of _ _ O
bytes _ _ O
. _ _ O
( _ _ O
The _ _ O
“ _ _ O
” _ _ O
is _ _ O
the _ _ O
number _ _ O
of _ _ O
elements _ _ O
to _ _ O
read _ _ O
if _ _ O
reading _ _ O
an _ _ O
array _ _ O
. _ _ O
) _ _ O
Seek _ _ O
0 _ _ O
from _ _ O
end _ _ O
Seek _ _ O
to _ _ O
byte _ _ O
0 _ _ O
• _ _ O
Politely _ _ O
close _ _ O
the _ _ O
file _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
: _ _ O
Writes _ _ O
from _ _ O
the _ _ O
provided _ _ O
buffer _ _ O
the _ _ O
given _ _ O
number _ _ O
of _ _ O
bytes _ _ O
. _ _ O
( _ _ O
Similar _ _ O
to _ _ O
) _ _ O
• _ _ O
: _ _ O
Moves _ _ O
the _ _ O
current _ _ O
file _ _ O
position _ _ O
. _ _ O
• _ _ O
: _ _ O
Returns _ _ O
the _ _ O
current _ _ O
file _ _ O
position _ _ O
. _ _ O
5 _ _ O

C _ _ O
Programming _ _ O
: _ _ O
Manipulating _ _ O
Files _ _ O
with _ _ O
syscalls _ _ O
C _ _ O
( _ _ O
) _ _ O
Open _ _ O
for _ _ O
writing _ _ O
• _ _ O
Here _ _ O
is _ _ O
a _ _ O
simple _ _ O
C _ _ O
program _ _ O
that _ _ O
creates _ _ O
a _ _ O
file _ _ O
called _ _ O
“ _ _ O
” _ _ O
and _ _ O
writes _ _ O
a _ _ O
string _ _ O
to _ _ O
it _ _ O
, _ _ O
then _ _ O
opens _ _ O
it _ _ O
again _ _ O
to _ _ O
print _ _ O
it _ _ O
out _ _ O
. _ _ O
• _ _ O
: _ _ O
Opens _ _ O
a _ _ O
file _ _ O
with _ _ O
the _ _ O
given _ _ O
path _ _ O
. _ _ O
The _ _ O
value _ _ O
that _ _ O
follows _ _ O
is _ _ O
the _ _ O
access _ _ O
mode _ _ O
. _ _ O
opens _ _ O
for _ _ O
writing _ _ O
. _ _ O
creates _ _ O
the _ _ O
file _ _ O
, _ _ O
if _ _ O
needed _ _ O
. _ _ O
removes _ _ O
the _ _ O
data _ _ O
in _ _ O
the _ _ O
file _ _ O
. _ _ O
opens _ _ O
read-only _ _ O
. _ _ O
• _ _ O
: _ _ O
Reads _ _ O
to _ _ O
the _ _ O
provided _ _ O
buffer _ _ O
the _ _ O
given _ _ O
number _ _ O
of _ _ O
bytes _ _ O
. _ _ O
Open _ _ O
read-only _ _ O
Seek _ _ O
to _ _ O
end _ _ O
Seek _ _ O
to _ _ O
byte _ _ O
0 _ _ O
Politely _ _ O
close _ _ O
the _ _ O
file _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
• _ _ O
: _ _ O
Writes _ _ O
from _ _ O
the _ _ O
provided _ _ O
buffer _ _ O
the _ _ O
given _ _ O
number _ _ O
of _ _ O
bytes _ _ O
. _ _ O
( _ _ O
Similar _ _ O
to _ _ O
) _ _ O
• _ _ O
: _ _ O
Moves _ _ O
the _ _ O
current _ _ O
file _ _ O
position _ _ O
. _ _ O
Returns _ _ O
the _ _ O
new _ _ O
position _ _ O
. _ _ O
6 _ _ O

Everything _ _ O
is _ _ O
a _ _ O
“ _ _ O
file _ _ O
” _ _ O
• _ _ O
UNIX _ _ B-Concept
makes _ _ O
lots _ _ O
of _ _ O
things _ _ O
“ _ _ O
files _ _ O
” _ _ O
in _ _ O
a _ _ O
non-traditional _ _ O
sense _ _ O
. _ _ O
• _ _ O
Sockets _ _ O
, _ _ O
named _ _ O
pipes _ _ O
, _ _ O
all _ _ O
kinds _ _ O
of _ _ O
exotic _ _ O
things _ _ O
. _ _ O
Directories _ _ O
are _ _ O
files _ _ O
in _ _ O
the _ _ O
traditional _ _ O
sense _ _ O
( _ _ O
stored _ _ O
on _ _ O
disk _ _ O
properly _ _ O
) _ _ O
• _ _ O
You _ _ O
can _ _ O
use _ _ O
the _ _ O
, _ _ O
, _ _ O
and _ _ O
system _ _ O
calls _ _ O
with _ _ O
any _ _ O
of _ _ O
these _ _ O
diverse _ _ O
set _ _ O
of _ _ O
data _ _ O
streams _ _ O
. _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
The _ _ O
Internet _ _ O
7 _ _ O

How _ _ O
data _ _ O
is _ _ O
stored _ _ O
… _ _ O
• _ _ O
Data _ _ O
in _ _ O
RAM _ _ O
is _ _ O
generally _ _ O
volatile _ _ B-Concept
memory _ _ I-Concept
. _ _ O
▪ _ _ O
It _ _ O
disappears _ _ O
after _ _ O
you _ _ O
shut _ _ O
off _ _ O
your _ _ O
computer _ _ O
. _ _ O
• _ _ O
So _ _ O
, _ _ O
you _ _ O
want _ _ O
some _ _ O
kind _ _ O
of _ _ O
persistent _ _ B-Concept
memory _ _ I-Concept
. _ _ O
▪ _ _ O
Storing _ _ O
data _ _ O
on _ _ O
disk _ _ O
involves _ _ O
creating _ _ O
a _ _ O
physical _ _ O
representation _ _ O
of _ _ O
that _ _ O
binary _ _ O
data _ _ O
. _ _ O
• _ _ O
Fun _ _ O
fact _ _ O
: _ _ O
there _ _ O
are _ _ O
non-volatile _ _ O
( _ _ O
persistent _ _ O
) _ _ O
main _ _ O
memories _ _ O
in _ _ O
development _ _ O
. _ _ O
( _ _ O
NVRAM _ _ O
) _ _ O
▪ _ _ O
They _ _ O
are _ _ O
really _ _ O
neat _ _ O
! _ _ O
( _ _ O
and _ _ O
slow _ _ O
! _ _ O
) _ _ O
▪ _ _ O
But _ _ O
wow _ _ O
they _ _ O
really _ _ O
complicate _ _ O
things _ _ O
! _ _ O
! _ _ O
• _ _ O
Consider _ _ O
the _ _ O
implications _ _ O
. _ _ O
• _ _ O
Let _ _ O
’s _ _ O
dig _ _ O
in _ _ O
… _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
8 _ _ O

Disks _ _ O
You _ _ O
throw _ _ O
them _ _ O
and _ _ O
dogs _ _ O
chase _ _ O
them _ _ O
. _ _ O
Wait _ _ O
.. _ _ O
no _ _ O
… _ _ O
do _ _ O
n’t _ _ O
do _ _ O
that _ _ O
. _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
9 _ _ O

Floppy _ _ O
Disks _ _ O
• _ _ O
Data _ _ O
is _ _ O
stored _ _ O
in _ _ O
analog _ _ O
on _ _ O
magnetic _ _ O
material _ _ O
. _ _ O
▪ _ _ O
I _ _ O
love _ _ O
them _ _ O
. _ _ O
• _ _ O
Buy _ _ O
me _ _ O
a _ _ O
random _ _ O
box _ _ O
for _ _ O
my _ _ O
birthday _ _ O
, _ _ O
please _ _ O
. _ _ O
• _ _ O
When _ _ O
is _ _ O
my _ _ O
birthday _ _ O
? _ _ O
It _ _ O
is _ _ O
everyday _ _ O
. _ _ O
• _ _ O
Termed _ _ O
“ _ _ O
floppy _ _ O
” _ _ O
due _ _ O
to _ _ O
the _ _ O
soft _ _ O
, _ _ O
flexible _ _ O
nature _ _ O
of _ _ O
the _ _ O
magnetic _ _ O
material _ _ O
. _ _ O
• _ _ O
Wait _ _ O
. _ _ O
Magnets _ _ O
? _ _ O
• _ _ O
How _ _ O
do _ _ O
you _ _ O
store _ _ O
data _ _ O
… _ _ O
with _ _ O
magnets _ _ O
? _ _ O
▪ _ _ O
If _ _ O
you _ _ O
’re _ _ O
thinking _ _ O
“ _ _ O
they _ _ O
have _ _ O
two _ _ O
poles _ _ O
… _ _ O
so _ _ O
they _ _ O
are _ _ O
binary _ _ O
natured _ _ O
, _ _ O
” _ _ O
then _ _ O
you _ _ O
are _ _ O
on _ _ O
to _ _ O
something _ _ O
. _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
10 _ _ O

Representing _ _ O
continuous _ _ O
data _ _ O
… _ _ O
• _ _ O
If _ _ O
you _ _ O
have _ _ O
some _ _ O
( _ _ O
continuous _ _ O
) _ _ O
data _ _ O
, _ _ O
represented _ _ O
by _ _ O
a _ _ O
waveform _ _ O
… _ _ O
• _ _ O
How _ _ O
to _ _ O
transmit _ _ O
/ _ _ O
store _ _ O
that _ _ O
wave _ _ O
? _ _ O
• _ _ O
Amplitude _ _ B-Concept
modulation _ _ I-Concept
… _ _ O
▪ _ _ O
Send _ _ O
pulses _ _ O
of _ _ O
data _ _ O
sampling _ _ O
the _ _ O
wave _ _ O
. _ _ O
▪ _ _ O
Data _ _ O
encoded _ _ O
in _ _ O
the _ _ O
amplitude _ _ O
of _ _ O
pulse _ _ O
. _ _ O
• _ _ O
Frequency _ _ B-Concept
modulation _ _ I-Concept
… _ _ O
Different _ _ O
waveform _ _ O
streams _ _ O
▪ _ _ O
Data _ _ O
encoded _ _ O
in _ _ O
variation _ _ O
of _ _ O
frequency _ _ O
of _ _ O
pulse _ _ O
. _ _ O
( _ _ O
Yes _ _ O
, _ _ O
like _ _ O
FM _ _ O
radio _ _ O
) _ _ O
▪ _ _ O
Disks _ _ O
actually _ _ O
store _ _ O
data _ _ O
using _ _ O
a _ _ O
form _ _ O
of _ _ O
this _ _ O
encoding _ _ O
! _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
11 _ _ O

Data _ _ O
and _ _ O
magnets _ _ O
… _ _ O
how _ _ O
do _ _ O
they _ _ O
work _ _ O
• _ _ O
We _ _ O
can _ _ O
use _ _ O
magnets _ _ O
to _ _ O
represent _ _ O
and _ _ O
( _ _ O
discrete _ _ O
binary _ _ O
) _ _ O
▪ _ _ O
The _ _ O
drive _ _ O
’s _ _ O
read _ _ O
head _ _ O
contains _ _ O
a _ _ O
sensor _ _ O
that _ _ O
detects _ _ O
the _ _ O
“ _ _ O
magnetic _ _ O
flux _ _ O
” _ _ O
▪ _ _ O
It _ _ O
can _ _ O
sense _ _ O
a _ _ O
change _ _ O
in _ _ O
magnetism _ _ O
over _ _ O
time _ _ O
. _ _ O
• _ _ O
This _ _ O
shows _ _ O
the _ _ O
ideal _ _ O
world _ _ O
, _ _ O
without _ _ O
any _ _ O
modulation _ _ O
: _ _ O
N _ _ O
S _ _ O
S _ _ O
N _ _ O
N _ _ O
N _ _ O
S _ _ O
S _ _ O
S _ _ O
S _ _ O
N _ _ O
N _ _ O
S _ _ O
S _ _ O
S _ _ O
N _ _ O
N _ _ O
N _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
North _ _ O
and _ _ O
South _ _ O
poles _ _ O
indicate _ _ O
stored _ _ O
values _ _ O
12 _ _ O

The _ _ O
peril _ _ O
of _ _ O
nature _ _ O
… _ _ O
• _ _ O
The _ _ O
magnetic _ _ O
drives _ _ O
read _ _ O
the _ _ O
change _ _ O
in _ _ O
magnetism _ _ O
. _ _ O
▪ _ _ O
It _ _ O
is _ _ O
difficult _ _ O
to _ _ O
tell _ _ O
the _ _ O
difference _ _ O
between _ _ O
two _ _ O
consecutive _ _ O
magnets _ _ O
… _ _ O
▪ _ _ O
This _ _ O
is _ _ O
also _ _ O
because _ _ O
co-aligned _ _ O
magnets _ _ O
HATE _ _ O
being _ _ O
next _ _ O
to _ _ O
each _ _ O
other _ _ O
. _ _ O
• _ _ O
Opposites _ _ O
attract _ _ O
, _ _ O
n’at _ _ O
. _ _ O
( _ _ O
They _ _ O
repel _ _ O
and _ _ O
affect _ _ O
each _ _ O
other _ _ O
’s _ _ O
signal _ _ O
) _ _ O
N _ _ O
S _ _ O
S _ _ O
N _ _ O
N _ _ O
N _ _ O
S _ _ O
S _ _ O
S _ _ O
S _ _ O
N _ _ O
N _ _ O
S _ _ O
S _ _ O
S _ _ O
N _ _ O
N _ _ O
N _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
13 _ _ O

The _ _ O
peril _ _ O
of _ _ O
nature _ _ O
… _ _ O
• _ _ O
So _ _ O
, _ _ O
we _ _ O
can _ _ O
give _ _ O
up _ _ O
almost _ _ O
half _ _ O
of _ _ O
our _ _ O
data _ _ O
to _ _ O
add _ _ O
synchronization _ _ O
. _ _ O
▪ _ _ O
When _ _ O
we _ _ O
read _ _ O
, _ _ O
every _ _ O
other _ _ O
“ _ _ O
sense _ _ O
” _ _ O
affects _ _ O
the _ _ O
next _ _ O
read _ _ O
. _ _ O
▪ _ _ O
If _ _ O
we _ _ O
read _ _ O
a _ _ O
“ _ _ O
0 _ _ O
” _ _ O
and _ _ O
then _ _ O
sense _ _ O
a _ _ O
change _ _ O
, _ _ O
the _ _ O
next _ _ O
bit _ _ O
stays _ _ O
the _ _ O
same _ _ O
. _ _ O
• _ _ O
If _ _ O
we _ _ O
sense _ _ O
a _ _ O
delay _ _ O
( _ _ O
long _ _ O
frequency _ _ O
) _ _ O
, _ _ O
it _ _ O
is _ _ O
a _ _ O
“ _ _ O
1 _ _ O
” _ _ O
and _ _ O
we _ _ O
continue _ _ O
. _ _ O
( _ _ O
Modified-FM _ _ O
Encoding _ _ O
) _ _ O
Senses _ _ O
delay _ _ O
Swaps _ _ O
bit _ _ O
S _ _ O
N _ _ O
S _ _ O
N _ _ O
S _ _ O
S _ _ O
N _ _ O
S _ _ O
N _ _ O
N _ _ O
S _ _ O
N _ _ O
S _ _ O
N _ _ O
N _ _ O
S _ _ O
N _ _ O
S _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
Bounds _ _ O
the _ _ O
amount _ _ O
of _ _ O
“ _ _ O
0”s _ _ O
physically _ _ O
stored _ _ O
. _ _ O
14 _ _ O

Disk _ _ O
Drives _ _ O
• _ _ O
Also _ _ O
known _ _ O
as _ _ O
a _ _ O
“ _ _ O
hard _ _ O
disk _ _ O
” _ _ O
due _ _ O
to _ _ O
the _ _ O
inflexible _ _ O
nature _ _ O
of _ _ O
its _ _ O
magnetic _ _ O
material _ _ O
. _ _ O
• _ _ O
Data _ _ O
is _ _ O
also _ _ O
stored _ _ O
digitally _ _ O
using _ _ O
a _ _ O
physical _ _ O
medium _ _ O
, _ _ O
such _ _ O
as _ _ O
, _ _ O
again _ _ O
, _ _ O
magnets _ _ O
. _ _ O
▪ _ _ O
Uses _ _ O
a _ _ O
similar _ _ O
yet _ _ O
stronger _ _ O
encoding _ _ O
scheme _ _ O
. _ _ O
Platter _ _ O
Head _ _ O
• _ _ O
Mechanical _ _ O
parts _ _ O
. _ _ O
▪ _ _ O
Can _ _ O
read _ _ O
random _ _ O
access _ _ O
, _ _ O
but _ _ O
it _ _ O
is _ _ O
slower _ _ O
than _ _ O
reading _ _ O
data _ _ O
sequentially _ _ O
( _ _ O
in _ _ O
physical _ _ O
order _ _ O
) _ _ O
. _ _ O
• _ _ O
Bits _ _ O
are _ _ O
hard _ _ O
… _ _ O
let _ _ O
’s _ _ O
start _ _ O
abstracting _ _ O
… _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
15 _ _ O

The _ _ O
platter _ _ O
matters _ _ O
: _ _ O
• _ _ O
Magnetic _ _ O
disk _ _ O
is _ _ O
represented _ _ O
by _ _ O
a _ _ O
set _ _ O
of _ _ O
stacked _ _ O
platters _ _ O
with _ _ O
magnetic _ _ O
bits _ _ O
. _ _ O
• _ _ O
A _ _ O
cylinder _ _ B-Concept
is _ _ O
a _ _ O
subdivision _ _ O
of _ _ O
platters _ _ O
( _ _ O
a _ _ O
track _ _ B-Concept
is _ _ O
such _ _ O
a _ _ O
subdivision _ _ O
on _ _ O
a _ _ O
single _ _ O
platter _ _ O
. _ _ O
) _ _ O
• _ _ O
A _ _ O
sector _ _ B-Concept
is _ _ O
a _ _ O
subdivision _ _ O
of _ _ O
a _ _ O
cylinder _ _ B-Concept
/ _ _ O
track _ _ B-Concept
. _ _ O
▪ _ _ O
You _ _ O
typically _ _ O
read _ _ O
information _ _ O
from _ _ O
a _ _ O
disk _ _ B-Concept
in _ _ O
units _ _ O
of _ _ O
sectors _ _ B-Concept
. _ _ O
▪ _ _ O
Files _ _ O
are _ _ O
, _ _ O
generally _ _ O
, _ _ O
a _ _ O
set _ _ O
of _ _ O
sectors _ _ O
. _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
Sector _ _ B-Concept
Cylinder _ _ B-Concept
16 _ _ O

Making _ _ O
heads _ _ O
turn _ _ O
( _ _ O
actually _ _ O
, _ _ O
they _ _ O
do _ _ O
n’t _ _ O
turn _ _ O
at _ _ O
all _ _ O
) _ _ O
• _ _ O
Magnetic _ _ O
disk _ _ B-Concept
is _ _ O
represented _ _ O
by _ _ O
a _ _ O
set _ _ O
of _ _ O
stacked _ _ O
platters _ _ B-Concept
with _ _ O
magnetic _ _ O
bits _ _ O
. _ _ O
▪ _ _ O
There _ _ O
may _ _ O
be _ _ O
several _ _ O
platters _ _ B-Concept
. _ _ O
▪ _ _ O
Each _ _ O
read _ _ O
by _ _ O
at _ _ O
least _ _ O
one _ _ O
head _ _ B-Concept
. _ _ O
▪ _ _ O
Access _ _ O
time _ _ O
is _ _ O
how _ _ O
long _ _ O
it _ _ O
takes _ _ O
to _ _ O
read _ _ O
a _ _ O
sector _ _ B-Concept
. _ _ O
• _ _ O
As _ _ O
a _ _ O
head _ _ B-Concept
moves _ _ O
, _ _ O
it _ _ O
goes _ _ O
to _ _ O
a _ _ O
different _ _ O
cylinder _ _ B-Concept
. _ _ O
▪ _ _ O
As _ _ O
the _ _ O
platter _ _ B-Concept
spins _ _ O
, _ _ O
the _ _ O
head _ _ B-Concept
reads _ _ O
a _ _ O
different _ _ O
sector _ _ B-Concept
. _ _ O
• _ _ O
You _ _ O
can _ _ O
potentially _ _ O
read _ _ O
multiple _ _ O
sectors _ _ B-Concept
in _ _ O
parallel _ _ O
. _ _ O
▪ _ _ O
So _ _ O
how _ _ O
should _ _ O
we _ _ O
layout _ _ O
data _ _ O
on _ _ O
disk _ _ B-Concept
to _ _ O
take _ _ O
advantage _ _ O
of _ _ O
this _ _ O
? _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
17 _ _ O

Making _ _ O
best _ _ O
use _ _ O
of _ _ O
sequential _ _ O
access _ _ O
• _ _ O
Seek _ _ B-Concept
time _ _ I-Concept
is _ _ O
the _ _ O
time _ _ O
it _ _ O
takes _ _ O
for _ _ O
the _ _ O
head _ _ O
to _ _ O
get _ _ O
into _ _ O
position _ _ O
. _ _ O
Latency _ _ B-Concept
: _ _ O
the _ _ O
time _ _ O
for _ _ O
the _ _ O
platter _ _ O
to _ _ O
spin _ _ O
. _ _ O
▪ _ _ O
Data _ _ O
is _ _ O
located _ _ O
at _ _ O
a _ _ O
two-dimensional _ _ O
coordinate _ _ O
on _ _ O
a _ _ O
spinning _ _ O
surface _ _ O
. _ _ O
• _ _ O
so _ _ O
the _ _ O
math _ _ O
is _ _ O
not _ _ O
trivial _ _ O
. _ _ O
• _ _ O
Seek _ _ B-Concept
time _ _ I-Concept
is _ _ O
relative _ _ O
to _ _ O
the _ _ O
current _ _ O
position _ _ O
of _ _ O
the _ _ O
head _ _ B-Concept
. _ _ O
▪ _ _ O
The _ _ O
closer _ _ O
the _ _ O
next _ _ O
bit _ _ O
of _ _ O
data _ _ O
you _ _ O
need _ _ O
… _ _ O
• _ _ O
The _ _ O
sooner _ _ O
it _ _ O
will _ _ O
get _ _ O
there _ _ O
. _ _ O
• _ _ O
So _ _ O
… _ _ O
to _ _ O
reduce _ _ O
the _ _ O
seek _ _ O
time _ _ O
to _ _ O
nil _ _ O
… _ _ O
▪ _ _ O
We _ _ O
position _ _ O
adjacent _ _ O
data _ _ O
in _ _ O
the _ _ O
same _ _ O
cylinder _ _ B-Concept
and _ _ O
respective _ _ O
sector _ _ B-Concept
. _ _ O
▪ _ _ O
Next _ _ O
set _ _ O
goes _ _ O
into _ _ O
subsequent _ _ O
sector _ _ B-Concept
. _ _ O
Heads _ _ O
do _ _ O
n’t _ _ O
move _ _ O
; _ _ O
the _ _ O
platters _ _ B-Concept
spin _ _ O
. _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
18 _ _ O

Ai _ _ O
n’t _ _ O
no _ _ O
platter _ _ B-Concept
like _ _ O
a _ _ O
hard _ _ O
disk _ _ O
platter _ _ B-Concept
‘ _ _ O
cause _ _ O
a _ _ O
hard _ _ O
disk _ _ O
platter _ _ B-Concept
do _ _ O
n’t _ _ O
stop _ _ O
• _ _ O
Seek _ _ B-Concept
time _ _ I-Concept
is _ _ O
the _ _ O
time _ _ O
it _ _ O
takes _ _ O
for _ _ O
the _ _ O
head _ _ B-Concept
to _ _ O
get _ _ O
into _ _ O
position _ _ O
. _ _ O
Latency _ _ B-Concept
: _ _ O
the _ _ O
time _ _ O
for _ _ O
the _ _ O
platter _ _ O
to _ _ O
spin _ _ O
. _ _ O
▪ _ _ O
Data _ _ O
is _ _ O
located _ _ O
at _ _ O
a _ _ O
two-dimensional _ _ O
coordinate _ _ O
on _ _ O
a _ _ O
spinning _ _ O
surface _ _ O
. _ _ O
• _ _ O
so _ _ O
the _ _ O
math _ _ O
is _ _ O
not _ _ O
trivial _ _ O
. _ _ O
• _ _ O
Seek _ _ B-Concept
time _ _ I-Concept
is _ _ O
relative _ _ O
to _ _ O
the _ _ O
current _ _ O
position _ _ O
of _ _ O
the _ _ O
head _ _ B-Concept
. _ _ O
▪ _ _ O
The _ _ O
closer _ _ O
the _ _ O
next _ _ O
bit _ _ O
of _ _ O
data _ _ O
you _ _ O
need _ _ O
… _ _ O
• _ _ O
The _ _ O
sooner _ _ O
it _ _ O
will _ _ O
get _ _ O
there _ _ O
. _ _ O
• _ _ O
Here _ _ O
, _ _ O
the _ _ O
head _ _ B-Concept
does _ _ O
not _ _ O
have _ _ O
to _ _ O
move _ _ O
at _ _ O
all _ _ O
and _ _ O
blocks _ _ O
0 _ _ O
and _ _ O
1 _ _ O
are _ _ O
read _ _ O
easily _ _ O
. _ _ O
▪ _ _ O
Yet _ _ O
, _ _ O
to _ _ O
read _ _ O
block _ _ O
2 _ _ O
, _ _ O
we _ _ O
have _ _ O
to _ _ O
wait _ _ O
for _ _ O
the _ _ O
platter _ _ B-Concept
to _ _ O
completely _ _ O
spin _ _ O
back _ _ O
around _ _ O
! _ _ O
! _ _ O
Seek _ _ O
time _ _ O
is _ _ O
zero _ _ O
, _ _ O
but _ _ O
maximum _ _ O
latency _ _ B-Concept
loss _ _ O
. _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
19 _ _ O

Ai _ _ O
n’t _ _ O
no _ _ O
platter _ _ B-Concept
like _ _ O
a _ _ O
hard _ _ O
disk _ _ O
platter _ _ B-Concept
‘ _ _ O
cause _ _ O
a _ _ O
hard _ _ O
disk _ _ O
platter _ _ B-Concept
do _ _ O
n’t _ _ O
stop _ _ O
• _ _ O
Seek _ _ B-Concept
time _ _ I-Concept
is _ _ O
the _ _ O
time _ _ O
it _ _ O
takes _ _ O
for _ _ O
the _ _ O
head _ _ B-Concept
to _ _ O
get _ _ O
into _ _ O
position _ _ O
. _ _ O
Latency _ _ B-Concept
: _ _ O
the _ _ O
time _ _ O
for _ _ O
the _ _ O
platter _ _ B-Concept
to _ _ O
spin _ _ O
. _ _ O
▪ _ _ O
Data _ _ O
is _ _ O
located _ _ O
at _ _ O
a _ _ O
two-dimensional _ _ O
coordinate _ _ O
on _ _ O
a _ _ O
spinning _ _ O
surface _ _ O
. _ _ O
• _ _ O
so _ _ O
the _ _ O
math _ _ O
is _ _ O
not _ _ O
trivial _ _ O
. _ _ O
• _ _ O
Seek _ _ B-Concept
time _ _ I-Concept
is _ _ O
relative _ _ O
to _ _ O
the _ _ O
current _ _ O
position _ _ O
of _ _ O
the _ _ O
head _ _ B-Concept
. _ _ O
▪ _ _ O
The _ _ O
closer _ _ O
the _ _ O
next _ _ O
bit _ _ O
of _ _ O
data _ _ O
you _ _ O
need _ _ O
… _ _ O
• _ _ O
The _ _ O
sooner _ _ O
it _ _ O
will _ _ O
get _ _ O
there _ _ O
. _ _ O
• _ _ O
Yikes _ _ O
! _ _ O
Blocks _ _ O
are _ _ O
in _ _ O
different _ _ O
cylinders _ _ B-Concept
and _ _ O
subsequent _ _ O
blocks _ _ O
are _ _ O
behind _ _ O
the _ _ O
head _ _ B-Concept
. _ _ O
▪ _ _ O
Worst _ _ O
case _ _ O
! _ _ O
Latency _ _ B-Concept
and _ _ O
seek _ _ B-Concept
time _ _ I-Concept
really _ _ O
suffer _ _ O
. _ _ O
▪ _ _ O
Need _ _ O
to _ _ O
keep _ _ O
data _ _ O
in _ _ O
order _ _ O
! _ _ O
How _ _ O
do _ _ O
we _ _ O
organize _ _ O
data _ _ O
on _ _ O
disk _ _ O
? _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
20 _ _ O

File _ _ B-Concept
Systems _ _ I-Concept
Yet _ _ O
another _ _ O
abstraction _ _ O
… _ _ O
moving _ _ O
toward _ _ O
applications _ _ O
. _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
21 _ _ O

File _ _ B-Concept
Systems _ _ I-Concept
• _ _ O
There _ _ O
are _ _ O
many _ _ O
ways _ _ O
of _ _ O
representing _ _ O
files _ _ O
on _ _ O
the _ _ O
disks _ _ O
themselves _ _ O
. _ _ O
• _ _ O
As _ _ O
you _ _ O
know _ _ O
, _ _ O
you _ _ O
are _ _ O
familiar _ _ O
with _ _ O
: _ _ O
▪ _ _ O
Files _ _ O
having _ _ O
names _ _ O
! _ _ O
▪ _ _ O
Directories _ _ O
/ _ _ O
folders _ _ O
for _ _ O
organization _ _ O
▪ _ _ O
Perhaps _ _ O
special _ _ O
files _ _ O
such _ _ O
as _ _ O
symbolic-links _ _ O
/ _ _ O
shortcuts _ _ O
• _ _ O
A _ _ O
file _ _ B-Concept
system _ _ I-Concept
entails _ _ O
describing _ _ O
how _ _ O
we _ _ O
represent _ _ O
: _ _ O
▪ _ _ O
File _ _ O
data _ _ O
( _ _ O
of _ _ O
course _ _ O
) _ _ O
▪ _ _ O
The _ _ O
location _ _ O
of _ _ O
the _ _ O
file _ _ O
( _ _ O
a _ _ O
file _ _ O
path _ _ B-Concept
) _ _ O
▪ _ _ O
Meta _ _ O
data _ _ O
about _ _ O
the _ _ O
file _ _ O
( _ _ O
what _ _ O
kind _ _ O
of _ _ O
file _ _ O
? _ _ O
) _ _ O
▪ _ _ O
Access _ _ O
control _ _ O
( _ _ O
who _ _ O
can _ _ O
access _ _ O
the _ _ O
file _ _ O
) _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
22 _ _ O

File _ _ O
Metadata _ _ O
• _ _ O
There _ _ O
is _ _ O
a _ _ O
long _ _ O
list _ _ O
of _ _ O
possible _ _ O
metadata _ _ O
associated _ _ O
with _ _ O
files _ _ O
: _ _ O
▪ _ _ O
The _ _ O
file _ _ O
size _ _ O
. _ _ O
▪ _ _ O
The _ _ O
file _ _ O
name _ _ O
. _ _ O
▪ _ _ O
When _ _ O
it _ _ O
was _ _ O
last _ _ O
accessed _ _ O
. _ _ O
▪ _ _ O
Who _ _ O
created _ _ O
it _ _ O
and _ _ O
when _ _ O
. _ _ O
• _ _ O
And _ _ O
access _ _ O
control _ _ O
: _ _ O
▪ _ _ O
Who _ _ O
can _ _ O
read _ _ O
it _ _ O
. _ _ O
▪ _ _ O
Who _ _ O
can _ _ O
write _ _ O
it _ _ O
. _ _ O
▪ _ _ O
Who _ _ O
can _ _ O
run _ _ O
it _ _ O
. _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
23 _ _ O

Linux _ _ O
/ _ _ O
UNIX _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
metadata _ _ O
: _ _ O
24 _ _ O

Operating _ _ O
Systems _ _ O
and _ _ O
Files _ _ O
• _ _ O
The _ _ O
function _ _ O
returns _ _ O
a _ _ O
file _ _ B-Concept
descriptor _ _ I-Concept
, _ _ O
an _ _ O
integer _ _ O
that _ _ O
identifies _ _ O
the _ _ O
open _ _ O
file _ _ O
in _ _ O
the _ _ O
process _ _ B-Concept
. _ _ O
▪ _ _ O
Every _ _ O
process _ _ B-Concept
can _ _ O
have _ _ O
open _ _ O
files _ _ O
, _ _ O
but _ _ O
none _ _ O
are _ _ O
shared _ _ O
across _ _ O
processes _ _ B-Concept
. _ _ O
• _ _ O
On _ _ O
Linux _ _ O
/ _ _ O
UNIX _ _ O
, _ _ O
some _ _ O
file _ _ B-Concept
descriptors _ _ I-Concept
are _ _ O
established _ _ O
automatically _ _ O
for _ _ O
every _ _ O
process _ _ B-Concept
by _ _ O
the _ _ O
shell _ _ O
: _ _ O
▪ _ _ O
▪ _ _ O
▪ _ _ O
– _ _ O
the _ _ O
output _ _ O
file _ _ O
( _ _ O
can _ _ O
be _ _ O
a _ _ O
file _ _ O
on _ _ O
disk _ _ O
! _ _ O
Recall _ _ O
terminal _ _ O
redirection _ _ O
. _ _ O
) _ _ O
– _ _ O
a _ _ O
file _ _ O
for _ _ O
error _ _ O
output _ _ O
. _ _ O
– _ _ O
the _ _ O
input _ _ O
file _ _ O
( _ _ O
could _ _ O
be _ _ O
a _ _ O
file _ _ O
on _ _ O
disk _ _ O
… _ _ O
or _ _ O
user _ _ O
input _ _ O
in _ _ O
the _ _ O
terminal _ _ O
. _ _ O
) _ _ O
• _ _ O
The _ _ O
OS _ _ O
maintains _ _ O
a _ _ O
table _ _ O
of _ _ O
open _ _ O
files _ _ O
per _ _ O
process _ _ B-Concept
. _ _ O
When _ _ O
it _ _ O
sees _ _ O
a _ _ O
syscall _ _ O
such _ _ O
as _ _ O
or _ _ O
, _ _ O
it _ _ O
uses _ _ O
that _ _ O
table _ _ O
to _ _ O
determine _ _ O
the _ _ O
file _ _ O
. _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
25 _ _ O

Processes _ _ B-Concept
and _ _ O
Files _ _ O
• _ _ O
The _ _ O
OS _ _ O
maintains _ _ O
a _ _ O
table _ _ O
of _ _ O
open _ _ O
files _ _ O
per _ _ O
process _ _ B-Concept
. _ _ O
When _ _ O
it _ _ O
sees _ _ O
a _ _ O
syscall _ _ O
such _ _ O
as _ _ O
or _ _ O
, _ _ O
it _ _ O
uses _ _ O
that _ _ O
table _ _ O
to _ _ O
determine _ _ O
the _ _ O
file _ _ O
. _ _ O
• _ _ O
The _ _ O
table _ _ O
contains _ _ O
a _ _ O
set _ _ O
of _ _ O
open _ _ O
files _ _ O
indexed _ _ O
by _ _ O
the _ _ O
file _ _ B-Concept
descriptor _ _ I-Concept
. _ _ O
Process _ _ B-Concept
stack _ _ O
.bss _ _ O
.data _ _ O
.text _ _ O
CPU _ _ O
State _ _ O
A _ _ O
: _ _ O
Registers _ _ O
, _ _ O
PID _ _ O
: _ _ O
4356 _ _ O
Page _ _ O
Table _ _ O
A _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
File _ _ O
Table _ _ O
• _ _ O
Several _ _ O
files _ _ O
are _ _ O
generally _ _ O
opened _ _ O
for _ _ O
you _ _ O
by _ _ O
the _ _ O
shell _ _ O
. _ _ O
• _ _ O
Each _ _ O
open _ _ O
file _ _ O
maintains _ _ O
its _ _ O
own _ _ O
current _ _ O
position _ _ O
. _ _ O
▪ _ _ O
/ _ _ O
manipulate _ _ O
it _ _ O
. _ _ O
26 _ _ O

I _ _ O
nodes _ _ O
, _ _ O
you _ _ O
nodes _ _ O
, _ _ O
we _ _ O
all _ _ O
nodes _ _ O
for _ _ O
inodes _ _ O
• _ _ O
Files _ _ O
are _ _ O
a _ _ O
set _ _ O
of _ _ O
disk _ _ O
blocks _ _ O
. _ _ O
▪ _ _ O
Hopefully _ _ O
laid _ _ O
out _ _ O
in _ _ O
a _ _ O
nice _ _ O
order _ _ O
! _ _ O
• _ _ O
How _ _ O
do _ _ O
we _ _ O
organize _ _ O
these _ _ O
? _ _ O
▪ _ _ O
Similar _ _ O
to _ _ O
virtual _ _ O
memory _ _ O
! _ _ O
main.c _ _ O
inode _ _ O
• _ _ O
We _ _ O
use _ _ O
a _ _ O
disk _ _ O
block _ _ O
that _ _ O
holds _ _ O
addresses _ _ O
to _ _ O
other _ _ O
blocks _ _ O
. _ _ O
▪ _ _ O
It _ _ O
is _ _ O
a _ _ O
simple _ _ O
table _ _ O
. _ _ O
The _ _ O
blocks _ _ O
that _ _ O
make _ _ O
up _ _ O
the _ _ O
file _ _ O
are _ _ O
in _ _ O
the _ _ O
order _ _ O
reflected _ _ O
by _ _ O
the _ _ O
table _ _ O
. _ _ O
• _ _ O
An _ _ O
index _ _ B-Concept
node _ _ I-Concept
is _ _ O
this _ _ O
main _ _ O
block _ _ O
. _ _ O
▪ _ _ O
Often _ _ O
seen _ _ O
shortened _ _ O
to _ _ O
“ _ _ O
inode _ _ O
” _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
27 _ _ O

File _ _ O
systems _ _ O
are _ _ O
about _ _ O
organizing _ _ O
the _ _ O
disk _ _ O
main.c _ _ O
inode _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
28 _ _ O

Cheap _ _ O
Versioning _ _ O
: _ _ O
WAFL _ _ O
Here _ _ O
is _ _ O
WAFL _ _ O
performing _ _ O
“ _ _ O
snapshot _ _ O
” _ _ O
backups _ _ O
of _ _ O
files _ _ O
: _ _ O
We _ _ O
can _ _ O
keep _ _ O
around _ _ O
snapshots _ _ O
and _ _ O
back _ _ O
them _ _ O
up _ _ O
to _ _ O
remote _ _ O
systems _ _ O
at _ _ O
our _ _ O
leisure _ _ O
. _ _ O
snapshot _ _ O
inode _ _ O
inode _ _ O
The _ _ O
prior _ _ O
state _ _ O
remains _ _ O
. _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
Small _ _ O
changes _ _ O
overwrite _ _ O
only _ _ O
parts _ _ O
of _ _ O
the _ _ O
file _ _ O
. _ _ O
Once _ _ O
we _ _ O
back _ _ O
them _ _ O
up _ _ O
, _ _ O
we _ _ O
can _ _ O
overwrite _ _ O
the _ _ O
snapshot _ _ O
inode _ _ O
with _ _ O
the _ _ O
current _ _ O
inode _ _ O
. _ _ O
29 _ _ O

Hierarchies _ _ O
• _ _ O
Directories _ _ O
maintain _ _ O
strict _ _ O
hierarchical _ _ O
structure _ _ O
for _ _ O
files _ _ O
in _ _ O
the _ _ O
system _ _ O
. _ _ O
▪ _ _ O
For _ _ O
instance _ _ O
, _ _ O
your _ _ O
home _ _ O
folder _ _ O
is _ _ O
often _ _ O
something _ _ O
like _ _ O
. _ _ O
• _ _ O
An _ _ O
absolute _ _ B-Concept
path _ _ I-Concept
is _ _ O
a _ _ O
fully-qualified _ _ O
name _ _ O
for _ _ O
a _ _ O
file _ _ O
that _ _ O
indicates _ _ O
exactly _ _ O
where _ _ O
in _ _ O
the _ _ O
hierarchy _ _ O
it _ _ O
is _ _ O
located _ _ O
. _ _ O
▪ _ _ O
Often _ _ O
organized _ _ O
by _ _ O
a _ _ O
human _ _ O
being _ _ O
in _ _ O
some _ _ O
logical _ _ O
way _ _ O
: _ _ O
• _ _ O
▪ _ _ O
There _ _ O
are _ _ O
many _ _ O
special _ _ O
paths _ _ O
. _ _ O
OS _ _ O
data _ _ O
structures _ _ O
go _ _ O
in _ _ O
: _ _ O
• _ _ O
▪ _ _ O
Devices _ _ O
go _ _ O
in _ _ O
: _ _ O
• _ _ O
▪ _ _ O
Use _ _ O
the _ _ O
Linux _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
command _ _ O
to _ _ O
find _ _ O
out _ _ O
where _ _ O
your _ _ O
system _ _ O
binaries _ _ O
go _ _ O
! _ _ O
30 _ _ O

Directories _ _ B-Concept
( _ _ O
Folders _ _ O
) _ _ O
• _ _ O
A _ _ O
directory _ _ B-Concept
is _ _ O
a _ _ O
file _ _ O
that _ _ O
contains _ _ O
a _ _ O
set _ _ O
of _ _ O
named _ _ O
links _ _ O
to _ _ O
other _ _ O
files _ _ O
. _ _ O
root _ _ O
▪ _ _ O
The _ _ O
earliest _ _ O
file _ _ B-Concept
systems _ _ I-Concept
did _ _ O
not _ _ O
even _ _ O
have _ _ O
directories _ _ O
… _ _ O
just _ _ O
a _ _ O
bunch _ _ O
of _ _ O
files _ _ O
. _ _ O
home _ _ O
• _ _ O
Groups _ _ O
a _ _ O
set _ _ O
of _ _ O
files _ _ O
together _ _ O
under _ _ O
a _ _ O
single _ _ O
name _ _ O
. _ _ O
sys _ _ O
▪ _ _ O
Strictly _ _ O
hierarchical _ _ O
… _ _ O
▪ _ _ O
Generally _ _ O
, _ _ O
a _ _ O
file _ _ O
can _ _ O
only _ _ O
be _ _ O
within _ _ O
one _ _ O
directory _ _ O
. _ _ O
▪ _ _ O
Although _ _ O
, _ _ O
a _ _ O
directory _ _ O
can _ _ O
also _ _ O
be _ _ O
within _ _ O
a _ _ O
directory _ _ O
… _ _ O
creating _ _ O
a _ _ O
cascade _ _ O
. _ _ O
hw1.doc _ _ O
hw2.doc _ _ O
main.c _ _ O
/root _ _ O
/ _ _ O
home _ _ O
/ _ _ O
main.c _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
main.h _ _ O
31 _ _ O

Implementing _ _ O
Directories _ _ O
• _ _ O
Directories _ _ O
can _ _ O
simply _ _ O
be _ _ O
text _ _ O
files _ _ O
, _ _ O
if _ _ O
you _ _ O
want _ _ O
! _ _ O
▪ _ _ O
Every _ _ O
line _ _ O
contains _ _ O
a _ _ O
name _ _ O
and _ _ O
then _ _ O
a _ _ O
block _ _ O
address _ _ O
on _ _ O
disk _ _ O
for _ _ O
the _ _ O
inode _ _ O
. _ _ O
• _ _ O
Obviously _ _ O
, _ _ O
there _ _ O
are _ _ O
a _ _ O
variety _ _ O
of _ _ O
ways _ _ O
to _ _ O
do _ _ O
this _ _ O
. _ _ O
▪ _ _ O
Do _ _ O
you _ _ O
keep _ _ O
a _ _ O
sorted _ _ O
order _ _ O
to _ _ O
make _ _ O
searching _ _ O
directories _ _ O
easier _ _ O
? _ _ O
▪ _ _ O
Can _ _ O
a _ _ O
directory _ _ O
refer _ _ O
to _ _ O
a _ _ O
file _ _ O
that _ _ O
is _ _ O
part _ _ O
of _ _ O
a _ _ O
different _ _ O
disk _ _ O
? _ _ O
• _ _ O
A _ _ O
file _ _ O
from _ _ O
a _ _ O
completely _ _ O
different _ _ O
machine _ _ O
? _ _ O
? _ _ O
• _ _ O
If _ _ O
a _ _ O
directory _ _ O
is _ _ O
the _ _ O
only _ _ O
thing _ _ O
linking _ _ O
to _ _ O
a _ _ O
file _ _ O
, _ _ O
and _ _ O
removes _ _ O
that _ _ O
link _ _ O
, _ _ O
what _ _ O
happens _ _ O
? _ _ O
▪ _ _ O
How _ _ O
do _ _ O
you _ _ O
access _ _ O
a _ _ O
file _ _ O
if _ _ O
you _ _ O
can _ _ O
not _ _ O
look _ _ O
up _ _ O
where _ _ O
it _ _ O
is _ _ O
? _ _ O
▪ _ _ O
Deleting _ _ O
a _ _ O
file _ _ O
is _ _ O
really _ _ O
as _ _ O
simple _ _ O
as _ _ O
removing _ _ O
it _ _ O
from _ _ O
the _ _ O
directory _ _ O
. _ _ O
▪ _ _ O
( _ _ O
And _ _ O
marking _ _ O
its _ _ O
blocks _ _ O
on _ _ O
disk _ _ O
free _ _ O
) _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
32 _ _ O

A _ _ O
directory _ _ O
Name _ _ O
Block _ _ O
Address _ _ O
Type _ _ O
• _ _ O
A _ _ O
directory _ _ O
is _ _ O
a _ _ O
simple _ _ O
table _ _ O
, _ _ O
implemented _ _ O
as _ _ O
a _ _ O
file _ _ O
, _ _ O
that _ _ O
maps _ _ O
names _ _ O
to _ _ O
inodes _ _ O
. _ _ O
▪ _ _ O
Each _ _ O
file _ _ O
system _ _ O
( _ _ O
NTFS _ _ O
, _ _ O
FAT _ _ O
, _ _ O
HFS _ _ O
, _ _ O
EXT _ _ O
) _ _ O
will _ _ O
implement _ _ O
it _ _ O
slightly _ _ O
differently _ _ O
. _ _ O
• _ _ O
It _ _ O
may _ _ O
also _ _ O
contain _ _ O
metadata _ _ O
about _ _ O
the _ _ O
file _ _ O
for _ _ O
each _ _ O
entry _ _ O
. _ _ O
▪ _ _ O
Creation _ _ O
date _ _ O
, _ _ O
author _ _ O
, _ _ O
file _ _ O
size _ _ O
. _ _ O
• _ _ O
How _ _ O
does _ _ O
a _ _ O
directory _ _ O
know _ _ O
its _ _ O
parent _ _ O
? _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
▪ _ _ O
Special _ _ O
entry _ _ O
! _ _ O
“ _ _ O
” _ _ O
points _ _ O
to _ _ O
parent _ _ O
. _ _ O
▪ _ _ O
“ _ _ O
” _ _ O
is _ _ O
quite _ _ O
literal _ _ O
. _ _ O
33 _ _ O

Heretic _ _ O
of _ _ O
the _ _ O
Day _ _ O
: _ _ O
Alternatives _ _ O
to _ _ O
Hierarchies _ _ O
• _ _ O
Margo _ _ O
Seltzer _ _ O
: _ _ O
Hierarchical _ _ O
File-Systems _ _ O
are _ _ O
Dead _ _ O
( _ _ O
HotOS _ _ O
‘ _ _ O
09 _ _ O
) _ _ O
▪ _ _ O
In _ _ O
this _ _ O
paper _ _ O
, _ _ O
she _ _ O
re-orients _ _ O
file _ _ O
systems _ _ O
around _ _ O
human _ _ O
beings _ _ O
and _ _ O
our _ _ O
own _ _ O
needs _ _ O
. _ _ O
• _ _ O
She _ _ O
asks _ _ O
the _ _ O
simple _ _ O
task _ _ O
: _ _ O
“ _ _ O
Group _ _ O
these _ _ O
. _ _ O
” _ _ O
Professor _ _ O
Margo _ _ O
Seltzer _ _ O
University _ _ O
of _ _ O
British _ _ O
Columbia _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
34 _ _ O

Aww _ _ O
… _ _ O
Human _ _ O
nature _ _ O
at _ _ O
work _ _ O
… _ _ O
• _ _ O
How _ _ O
did _ _ O
you _ _ O
group _ _ O
them _ _ O
? _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
35 _ _ O

Great _ _ O
Expectations _ _ O
• _ _ O
How _ _ O
can _ _ O
we _ _ O
expect _ _ O
anybody _ _ O
to _ _ O
use _ _ O
hierarchies _ _ O
? _ _ O
▪ _ _ O
It _ _ O
does _ _ O
not _ _ O
seem _ _ O
to _ _ O
be _ _ O
how _ _ O
we _ _ O
actually _ _ O
think _ _ O
. _ _ O
• _ _ O
Organize _ _ O
by _ _ O
description _ _ O
instead _ _ O
. _ _ O
▪ _ _ O
No _ _ O
more _ _ O
placing _ _ O
files _ _ O
in _ _ O
directories _ _ O
. _ _ O
▪ _ _ O
Tag _ _ O
files _ _ O
based _ _ O
on _ _ O
what _ _ O
they _ _ O
are _ _ O
. _ _ O
▪ _ _ O
Search _ _ O
for _ _ O
files _ _ O
based _ _ O
on _ _ O
tag _ _ O
/ _ _ O
keyword _ _ O
. _ _ O
• _ _ O
“ _ _ O
I _ _ O
want _ _ O
to _ _ O
see _ _ O
all _ _ O
images _ _ O
that _ _ O
are _ _ O
red _ _ O
. _ _ O
” _ _ O
▪ _ _ O
“ _ _ O
I _ _ O
want _ _ O
all _ _ O
images _ _ O
of _ _ O
squares _ _ O
… _ _ O
, _ _ O
” _ _ O
etc _ _ O
. _ _ O
▪ _ _ O
“ _ _ O
I _ _ O
want _ _ O
to _ _ O
list _ _ O
all _ _ O
music _ _ O
that _ _ O
is _ _ O
135bpm _ _ O
. _ _ O
” _ _ O
• _ _ O
Draws _ _ O
inspiration _ _ O
from _ _ O
the _ _ O
web _ _ O
: _ _ O
we _ _ O
often _ _ O
search _ _ O
by _ _ O
keywords _ _ O
. _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
36 _ _ O

Files _ _ O
with _ _ O
tags _ _ O
… _ _ O
• _ _ O
We _ _ O
can _ _ O
attach _ _ O
tags _ _ O
to _ _ O
data _ _ O
files _ _ O
. _ _ O
• _ _ O
Then _ _ O
, _ _ O
when _ _ O
I _ _ O
’m _ _ O
feeling _ _ O
down _ _ O
and _ _ O
out _ _ O
, _ _ O
I _ _ O
can _ _ O
ask _ _ O
my _ _ O
computer _ _ O
: _ _ O
“ _ _ O
Hey _ _ O
, _ _ O
show _ _ O
me _ _ O
all _ _ O
the _ _ O
pictures _ _ O
that _ _ O
are _ _ O
cute _ _ O
. _ _ O
” _ _ O
cute _ _ O
▪ _ _ O
No _ _ O
longer _ _ O
looking _ _ O
into _ _ O
random _ _ O
directories _ _ O
to _ _ O
find _ _ O
what _ _ O
I _ _ O
need _ _ O
. _ _ O
cat _ _ O
food _ _ O
Image _ _ O
by _ _ O
Dimitri _ _ O
Houtteman _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
cat.gif _ _ O
37 _ _ O

POSIX _ _ O
: _ _ O
Contradicting _ _ O
the _ _ O
definition _ _ O
of _ _ O
“ _ _ O
path _ _ O
” _ _ O
• _ _ O
One _ _ O
piece _ _ O
of _ _ O
trouble _ _ O
with _ _ O
being _ _ O
heretical _ _ O
is _ _ O
that _ _ O
everybody _ _ O
asks _ _ O
you _ _ O
“ _ _ O
how _ _ O
will _ _ O
you _ _ O
implement _ _ O
this _ _ O
and _ _ O
get _ _ O
people _ _ O
to _ _ O
switch _ _ O
? _ _ O
? _ _ O
? _ _ O
? _ _ O
” _ _ O
• _ _ O
You _ _ O
do _ _ O
n’t _ _ O
want _ _ O
to _ _ O
completely _ _ O
change _ _ O
C _ _ O
functions _ _ O
… _ _ O
so _ _ O
… _ _ O
let _ _ O
’s _ _ O
make _ _ O
use _ _ O
of _ _ O
traditional _ _ O
ideas _ _ O
to _ _ O
implement _ _ O
tags _ _ O
. _ _ O
▪ _ _ O
▪ _ _ O
▪ _ _ O
can _ _ O
still _ _ O
list _ _ O
all _ _ O
the _ _ O
files _ _ O
with _ _ O
both _ _ O
tags _ _ O
! _ _ O
can _ _ O
open _ _ O
a _ _ O
particular _ _ O
file _ _ O
. _ _ O
is _ _ O
, _ _ O
naturally _ _ O
but _ _ O
oddly _ _ O
, _ _ O
the _ _ O
same _ _ O
file _ _ O
. _ _ O
• _ _ O
And _ _ O
you _ _ O
can _ _ O
also _ _ O
fit _ _ O
traditional _ _ O
POSIX _ _ O
paths _ _ O
to _ _ O
tags _ _ O
. _ _ O
Files _ _ O
in _ _ O
“ _ _ O
” _ _ O
can _ _ O
simply _ _ O
be _ _ O
files _ _ O
tagged _ _ O
with _ _ O
“ _ _ O
” _ _ O
▪ _ _ O
We _ _ O
do _ _ O
n’t _ _ O
do _ _ O
this _ _ O
. _ _ O
Why _ _ O
… _ _ O
do _ _ O
n’t _ _ O
we _ _ O
just _ _ O
do _ _ O
this _ _ O
? _ _ O
… _ _ O
… _ _ O
Well _ _ O
, _ _ O
change _ _ O
is _ _ O
hard _ _ O
. _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
38 _ _ O

C _ _ O
File _ _ O
I _ _ O
/ _ _ O
O _ _ O
Summary _ _ O
• _ _ O
C _ _ O
Standard _ _ O
IO _ _ O
▪ _ _ O
▪ _ _ O
Reads _ _ O
to _ _ O
the _ _ O
given _ _ O
buffer _ _ O
the _ _ O
given _ _ O
number _ _ O
of _ _ O
bytes _ _ O
from _ _ O
the _ _ O
file _ _ O
indicated _ _ O
by _ _ O
the _ _ O
file _ _ O
descriptor _ _ O
. _ _ O
Returns _ _ O
the _ _ O
number _ _ O
of _ _ O
bytes _ _ O
read _ _ O
or _ _ O
0 _ _ O
if _ _ O
the _ _ O
file _ _ O
reached _ _ O
its _ _ O
end _ _ O
. _ _ O
Negative _ _ O
on _ _ O
error _ _ O
. _ _ O
▪ _ _ O
Similarly _ _ O
writes _ _ O
to _ _ O
the _ _ O
given _ _ O
buffer _ _ O
to _ _ O
the _ _ O
file _ _ O
indicated _ _ O
by _ _ O
the _ _ O
file _ _ O
descriptor _ _ O
. _ _ O
▪ _ _ O
Modifies _ _ O
and _ _ O
returns _ _ O
the _ _ O
file _ _ O
position _ _ O
for _ _ O
the _ _ O
given _ _ O
file _ _ O
descriptor _ _ O
to _ _ O
the _ _ O
given _ _ O
offset _ _ O
from _ _ O
the _ _ O
reference _ _ O
point _ _ O
. _ _ O
▪ _ _ O
Closes _ _ O
the _ _ O
file _ _ O
for _ _ O
this _ _ O
process _ _ O
. _ _ O
No _ _ O
subsequent _ _ O
action _ _ O
can _ _ O
be _ _ O
taken _ _ O
on _ _ O
this _ _ O
file _ _ O
. _ _ O
Returns _ _ O
negative _ _ O
on _ _ O
error _ _ O
. _ _ O
▪ _ _ O
Opens _ _ O
the _ _ O
given _ _ O
file _ _ O
at _ _ O
the _ _ O
provided _ _ O
path _ _ O
with _ _ O
access _ _ O
depending _ _ O
on _ _ O
the _ _ O
provided _ _ O
flags _ _ O
. _ _ O
If _ _ O
the _ _ O
flags _ _ O
consist _ _ O
of _ _ O
a _ _ O
string _ _ O
with _ _ O
“ _ _ O
r _ _ O
” _ _ O
in _ _ O
it _ _ O
, _ _ O
it _ _ O
will _ _ O
be _ _ O
read-only _ _ O
. _ _ O
If _ _ O
it _ _ O
contains _ _ O
a _ _ O
“ _ _ O
w _ _ O
” _ _ O
it _ _ O
will _ _ O
be _ _ O
writable _ _ O
. _ _ O
If _ _ O
it _ _ O
contains _ _ O
a _ _ O
“ _ _ O
b _ _ O
” _ _ O
it _ _ O
will _ _ O
not _ _ O
be _ _ O
interpreted _ _ O
as _ _ O
a _ _ O
text _ _ O
file _ _ O
, _ _ O
but _ _ O
as _ _ O
“ _ _ O
binary _ _ O
” _ _ O
instead _ _ O
. _ _ O
If _ _ O
it _ _ O
is _ _ O
“ _ _ O
w+ _ _ O
” _ _ O
, _ _ O
it _ _ O
will _ _ O
completely _ _ O
overwrite _ _ O
the _ _ O
file _ _ O
. _ _ O
If _ _ O
it _ _ O
has _ _ O
an _ _ O
“ _ _ O
a _ _ O
” _ _ O
, _ _ O
it _ _ O
will _ _ O
automatically _ _ O
write _ _ O
to _ _ O
the _ _ O
end _ _ O
of _ _ O
the _ _ O
existing _ _ O
file _ _ O
. _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
39 _ _ O

C _ _ O
File _ _ O
I _ _ O
/ _ _ O
O _ _ O
Summary _ _ O
• _ _ O
UNIX _ _ O
System _ _ O
Calls _ _ O
▪ _ _ O
▪ _ _ O
Reads _ _ O
to _ _ O
the _ _ O
given _ _ O
buffer _ _ O
the _ _ O
given _ _ O
number _ _ O
of _ _ O
bytes _ _ O
from _ _ O
the _ _ O
file _ _ O
indicated _ _ O
by _ _ O
the _ _ O
file _ _ O
descriptor _ _ O
. _ _ O
Returns _ _ O
the _ _ O
number _ _ O
of _ _ O
bytes _ _ O
read _ _ O
or _ _ O
0 _ _ O
if _ _ O
the _ _ O
file _ _ O
reached _ _ O
its _ _ O
end _ _ O
. _ _ O
Negative _ _ O
on _ _ O
error _ _ O
. _ _ O
▪ _ _ O
Similarly _ _ O
writes _ _ O
to _ _ O
the _ _ O
given _ _ O
buffer _ _ O
to _ _ O
the _ _ O
file _ _ O
indicated _ _ O
by _ _ O
the _ _ O
file _ _ O
descriptor _ _ O
. _ _ O
▪ _ _ O
Modifies _ _ O
and _ _ O
returns _ _ O
the _ _ O
file _ _ O
position _ _ O
for _ _ O
the _ _ O
given _ _ O
file _ _ O
descriptor _ _ O
to _ _ O
the _ _ O
given _ _ O
offset _ _ O
from _ _ O
the _ _ O
reference _ _ O
point _ _ O
. _ _ O
▪ _ _ O
Closes _ _ O
the _ _ O
file _ _ O
for _ _ O
this _ _ O
process _ _ O
. _ _ O
No _ _ O
subsequent _ _ O
action _ _ O
can _ _ O
be _ _ O
taken _ _ O
on _ _ O
this _ _ O
file _ _ O
. _ _ O
Returns _ _ O
negative _ _ O
on _ _ O
error _ _ O
. _ _ O
▪ _ _ O
▪ _ _ O
Opens _ _ O
the _ _ O
given _ _ O
file _ _ O
at _ _ O
the _ _ O
provided _ _ O
path _ _ O
with _ _ O
access _ _ O
depending _ _ O
on _ _ O
the _ _ O
provided _ _ O
flags _ _ O
. _ _ O
If _ _ O
the _ _ O
O_CREAT _ _ O
flag _ _ O
is _ _ O
given _ _ O
, _ _ O
the _ _ O
file _ _ O
is _ _ O
created _ _ O
if _ _ O
it _ _ O
does _ _ O
not _ _ O
exist _ _ O
. _ _ O
If _ _ O
the _ _ O
O_TRUNC _ _ O
is _ _ O
passed _ _ O
and _ _ O
the _ _ O
file _ _ O
is _ _ O
writable _ _ O
, _ _ O
it _ _ O
will _ _ O
remove _ _ O
all _ _ O
the _ _ O
data _ _ O
in _ _ O
the _ _ O
file _ _ O
after _ _ O
it _ _ O
opens _ _ O
. _ _ O
If _ _ O
O_RDONLY _ _ O
is _ _ O
specified _ _ O
, _ _ O
no _ _ O
writes _ _ O
can _ _ O
occur _ _ O
. _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
40 _ _ O

Summary _ _ O
• _ _ O
Files _ _ O
are _ _ O
just _ _ O
binary _ _ O
blobs _ _ O
of _ _ O
information _ _ O
. _ _ O
▪ _ _ O
Disambiguating _ _ O
that _ _ O
data _ _ O
requires _ _ O
a _ _ O
specification _ _ O
and _ _ O
consistency _ _ O
. _ _ O
• _ _ O
Disks _ _ O
are _ _ O
physical _ _ O
and _ _ O
rely _ _ O
on _ _ O
nature _ _ O
, _ _ O
which _ _ O
is _ _ O
chaotic _ _ O
. _ _ O
▪ _ _ O
We _ _ O
have _ _ O
strategies _ _ O
for _ _ O
encoding _ _ O
digital _ _ O
data _ _ O
on _ _ O
analog _ _ O
( _ _ O
magnetic _ _ O
) _ _ O
media _ _ O
. _ _ O
▪ _ _ O
Physical _ _ O
addressing _ _ O
requires _ _ O
care _ _ O
in _ _ O
where _ _ O
blocks _ _ O
of _ _ O
data _ _ O
are _ _ O
stored _ _ O
. _ _ O
• _ _ O
File _ _ O
systems _ _ O
are _ _ O
an _ _ O
opinionated _ _ O
space _ _ O
related _ _ O
to _ _ O
how _ _ O
humans _ _ O
organize _ _ O
data _ _ O
on _ _ O
disk _ _ O
( _ _ O
and _ _ O
share _ _ O
/ _ _ O
discover _ _ O
that _ _ O
data _ _ O
) _ _ O
▪ _ _ O
Files _ _ O
are _ _ O
generally _ _ O
organized _ _ O
in _ _ O
trees _ _ O
, _ _ O
much _ _ O
like _ _ O
our _ _ O
virtual _ _ O
memory _ _ O
! _ _ O
▪ _ _ O
Hierarchical _ _ O
file _ _ O
systems _ _ O
still _ _ O
dominate _ _ O
: _ _ O
directory _ _ O
structures _ _ O
. _ _ O
▪ _ _ O
Other _ _ O
file _ _ O
systems _ _ O
are _ _ O
possible _ _ O
: _ _ O
relational _ _ O
searches _ _ O
and _ _ O
tags _ _ O
. _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
41 _ _ O

Distributed _ _ O
Filesystems _ _ O
and _ _ O
Storage _ _ O
• _ _ O
Now _ _ O
… _ _ O
what _ _ O
happens _ _ O
when _ _ O
we _ _ O
have _ _ O
file _ _ O
systems _ _ O
that _ _ O
span _ _ O
machines _ _ O
? _ _ O
▪ _ _ O
The _ _ O
power _ _ O
of _ _ O
networks _ _ O
and _ _ O
storage _ _ O
combined _ _ O
! _ _ O
• _ _ O
What _ _ O
are _ _ O
some _ _ O
unique _ _ O
issues _ _ O
to _ _ O
files _ _ O
that _ _ O
span _ _ O
multiple _ _ O
systems _ _ O
? _ _ O
• _ _ O
How _ _ O
can _ _ O
we _ _ O
create _ _ O
better _ _ O
methods _ _ O
of _ _ O
transmitting _ _ O
data _ _ O
between _ _ O
machines _ _ O
? _ _ O
▪ _ _ O
What _ _ O
if _ _ O
we _ _ O
break _ _ O
down _ _ O
the _ _ O
“ _ _ O
client-server _ _ O
” _ _ O
model _ _ O
. _ _ O
▪ _ _ O
What _ _ O
if _ _ O
files _ _ O
and _ _ O
data _ _ O
need _ _ O
not _ _ O
be _ _ O
in _ _ O
one _ _ O
particular _ _ O
place _ _ O
? _ _ O
▪ _ _ O
How _ _ O
do _ _ O
we _ _ O
find _ _ O
information _ _ O
, _ _ O
then _ _ O
? _ _ O
• _ _ O
Stay _ _ O
tuned _ _ O
! _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
42 _ _ O



