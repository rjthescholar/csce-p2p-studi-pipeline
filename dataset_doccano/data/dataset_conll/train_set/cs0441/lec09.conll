['train_set', 'labeled']|cs0441|lec09
-DOCSTART- -X- -X- O

Discrete _ _ O
Structures _ _ O
for _ _ O
Computer _ _ O
Science _ _ O
William _ _ O
Garrison _ _ O
bill@cs.pitt.edu _ _ O
6311 _ _ O
Sennott _ _ O
Square _ _ O
Lecture _ _ O
# _ _ O
9 _ _ O
: _ _ O
Set _ _ B-Concept
Identities _ _ I-Concept
and _ _ O
Functions _ _ B-Concept
Based _ _ O
on _ _ O
materials _ _ O
developed _ _ O
by _ _ O
Dr. _ _ O
Adam _ _ O
Lee _ _ O

Today _ _ O
’s _ _ O
Topics _ _ O
Set _ _ B-Concept
identities _ _ I-Concept
l _ _ O
Methods _ _ O
of _ _ O
proof _ _ O
l _ _ O
Relationships _ _ O
to _ _ O
logical _ _ O
equivalences _ _ O
Functions _ _ B-Concept
l _ _ O
Important _ _ O
definitions _ _ O
l _ _ O
Relationships _ _ O
to _ _ O
sets _ _ O
, _ _ O
relations _ _ O
l _ _ O
Specific _ _ O
functions _ _ O
of _ _ O
particular _ _ O
importance _ _ O

Set _ _ B-Concept
identities _ _ I-Concept
help _ _ O
us _ _ O
manipulate _ _ O
complex _ _ O
expressions _ _ O
Recall _ _ O
from _ _ O
last _ _ O
lecture _ _ O
that _ _ O
set _ _ O
operations _ _ O
bear _ _ O
a _ _ O
striking _ _ O
resemblance _ _ O
to _ _ O
logical _ _ O
operations _ _ O
l _ _ O
Disjunction _ _ O
( _ _ O
∨ _ _ O
) _ _ O
and _ _ O
set _ _ O
union _ _ O
( _ _ O
∪ _ _ O
) _ _ O
l _ _ O
Conjunction _ _ O
( _ _ O
∧ _ _ O
) _ _ O
and _ _ O
set _ _ O
intersection _ _ O
( _ _ O
∩ _ _ O
) _ _ O
l _ _ O
Negation _ _ O
( _ _ O
¬ _ _ O
) _ _ O
and _ _ O
complement _ _ O
( _ _ O
) _ _ O
Just _ _ O
as _ _ O
logical _ _ O
equivalences _ _ O
helped _ _ O
us _ _ O
manipulate _ _ O
logical _ _ O
expressions _ _ O
, _ _ O
set _ _ B-Concept
identities _ _ I-Concept
help _ _ O
us _ _ O
simplify _ _ O
and _ _ O
understand _ _ O
complex _ _ O
set _ _ O
definitions _ _ O
. _ _ O

Some _ _ O
important _ _ O
set _ _ B-Concept
identities _ _ I-Concept
Identity _ _ O
Name _ _ O
A∪∅=A _ _ O
A∩U=A _ _ O
Identity _ _ B-Concept
laws _ _ I-Concept
A∪U=U _ _ O
A∩∅=∅ _ _ O
Domination _ _ B-Concept
laws _ _ I-Concept
A∪A=A _ _ O
A∩A=A _ _ O
Idempotent _ _ B-Concept
laws _ _ I-Concept
Complementation _ _ B-Concept
law _ _ I-Concept
A=A _ _ O
A∪B=B∪A _ _ O
A∩B=B∩A _ _ O
Commutative _ _ B-Concept
laws _ _ I-Concept
A _ _ O
∪ _ _ O
( _ _ O
B _ _ O
∪ _ _ O
C _ _ O
) _ _ O
= _ _ O
( _ _ O
A _ _ O
∪ _ _ O
B _ _ O
) _ _ O
∪ _ _ O
C _ _ O
A _ _ O
∩ _ _ O
( _ _ O
B _ _ O
∩ _ _ O
C _ _ O
) _ _ O
= _ _ O
( _ _ O
A _ _ O
∩ _ _ O
B _ _ O
) _ _ O
∩ _ _ O
C _ _ O
Associative _ _ B-Concept
laws _ _ I-Concept
We _ _ O
do _ _ O
n’t _ _ O
have _ _ O
commutative _ _ O
or _ _ O
associative _ _ O
laws _ _ O
for _ _ O
set _ _ O
difference _ _ O
! _ _ O

Some _ _ O
important _ _ O
set _ _ B-Concept
identities _ _ I-Concept
Identity _ _ O
Name _ _ O
A _ _ O
∩ _ _ O
( _ _ O
B _ _ O
∪ _ _ O
C _ _ O
) _ _ O
= _ _ O
( _ _ O
A _ _ O
∩ _ _ O
B _ _ O
) _ _ O
∪ _ _ O
( _ _ O
A _ _ O
∩ _ _ O
C _ _ O
) _ _ O
A _ _ O
∪ _ _ O
( _ _ O
B _ _ O
∩ _ _ O
C _ _ O
) _ _ O
= _ _ O
( _ _ O
A _ _ O
∪ _ _ O
B _ _ O
) _ _ O
∩ _ _ O
( _ _ O
A _ _ O
∪ _ _ O
C _ _ O
) _ _ O
Distributive _ _ B-Concept
laws _ _ I-Concept
DeMorgan _ _ B-Concept
’s _ _ I-Concept
laws _ _ I-Concept
A∪B=A∩B _ _ O
A∩B=A∪B _ _ O
A _ _ O
∪ _ _ O
( _ _ O
A _ _ O
∩ _ _ O
B _ _ O
) _ _ O
= _ _ O
A _ _ O
A _ _ O
∩ _ _ O
( _ _ O
A _ _ O
∪ _ _ O
B _ _ O
) _ _ O
= _ _ O
A _ _ O
Absorption _ _ B-Concept
laws _ _ I-Concept
Complement _ _ B-Concept
laws _ _ I-Concept
A∪A=U _ _ O
A∩A=∅ _ _ O

There _ _ O
are _ _ O
many _ _ O
ways _ _ O
to _ _ O
prove _ _ O
set _ _ B-Concept
identities _ _ I-Concept
Today _ _ O
, _ _ O
we _ _ O
’ll _ _ O
discuss _ _ O
four _ _ O
common _ _ O
methods _ _ O
: _ _ O
1 _ _ O
. _ _ O
2 _ _ O
. _ _ O
3 _ _ O
. _ _ O
4 _ _ O
. _ _ O
Membership _ _ B-Concept
tables _ _ I-Concept
Logical _ _ B-Concept
argument _ _ I-Concept
Using _ _ O
set _ _ B-Concept
builder _ _ I-Concept
notation _ _ I-Concept
Applying _ _ O
other _ _ O
known _ _ O
set _ _ B-Concept
identities _ _ I-Concept

Membership _ _ B-Concept
tables _ _ I-Concept
allow _ _ O
us _ _ O
to _ _ O
write _ _ O
proofs _ _ O
like _ _ O
we _ _ O
did _ _ O
using _ _ O
truth _ _ O
tables _ _ O
! _ _ O
The _ _ O
membership _ _ B-Concept
table _ _ I-Concept
for _ _ O
an _ _ O
expression _ _ O
has _ _ O
columns _ _ O
for _ _ O
sub-expressions _ _ O
and _ _ O
rows _ _ O
to _ _ O
indicate _ _ O
the _ _ O
ways _ _ O
in _ _ O
which _ _ O
an _ _ O
arbitrary _ _ O
element _ _ O
may _ _ O
or _ _ O
may _ _ O
not _ _ O
be _ _ O
included _ _ O
. _ _ O
Example _ _ O
: _ _ O
A _ _ O
membership _ _ B-Concept
table _ _ I-Concept
for _ _ O
set _ _ O
intersection _ _ O
A _ _ O
B _ _ O
A∩B _ _ O
1 _ _ O
1 _ _ O
1 _ _ O
1 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
1 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
An _ _ O
element _ _ O
is _ _ O
in _ _ O
A _ _ O
∩ _ _ O
B _ _ O
iff _ _ O
it _ _ O
is _ _ O
in _ _ O
both _ _ O
A _ _ O
and _ _ O
B _ _ O

Prove _ _ O
that _ _ O
A _ _ O
∩ _ _ O
( _ _ O
B _ _ O
∪ _ _ O
C _ _ O
) _ _ O
= _ _ O
( _ _ O
A _ _ O
∩ _ _ O
B _ _ O
) _ _ O
∪ _ _ O
( _ _ O
A _ _ O
∩ _ _ O
C _ _ O
) _ _ O
A _ _ O
B _ _ O
C _ _ O
B∪C _ _ O
A _ _ O
∩ _ _ O
( _ _ O
B _ _ O
∪ _ _ O
C _ _ O
) _ _ O
A∩B _ _ O
A∩C _ _ O
( _ _ O
A _ _ O
∩ _ _ O
B _ _ O
) _ _ O
∪ _ _ O
( _ _ O
A _ _ O
∩ _ _ O
C _ _ O
) _ _ O
1 _ _ O
1 _ _ O
1 _ _ O
1 _ _ O
1 _ _ O
1 _ _ O
1 _ _ O
1 _ _ O
1 _ _ O
1 _ _ O
0 _ _ O
1 _ _ O
1 _ _ O
1 _ _ O
0 _ _ O
1 _ _ O
1 _ _ O
0 _ _ O
1 _ _ O
1 _ _ O
1 _ _ O
0 _ _ O
1 _ _ O
1 _ _ O
1 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
1 _ _ O
1 _ _ O
1 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
1 _ _ O
0 _ _ O
1 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
1 _ _ O
1 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
Since _ _ O
the _ _ O
appropriate _ _ O
columns _ _ O
of _ _ O
the _ _ O
membership _ _ B-Concept
table _ _ I-Concept
are _ _ O
the _ _ O
same _ _ O
, _ _ O
we _ _ O
can _ _ O
conclude _ _ O
that _ _ O
A _ _ O
∩ _ _ O
( _ _ O
B _ _ O
∪ _ _ O
C _ _ O
) _ _ O
= _ _ O
( _ _ O
A _ _ O
∩ _ _ O
B _ _ O
) _ _ O
∪ _ _ O
( _ _ O
A _ _ O
∩ _ _ O
C _ _ O
) _ _ O
. _ _ O
❏ _ _ O

Sometimes _ _ O
, _ _ O
it _ _ O
’s _ _ O
easier _ _ O
to _ _ O
make _ _ O
a _ _ O
logical _ _ O
argument _ _ O
about _ _ O
a _ _ O
set _ _ B-Concept
identity _ _ I-Concept
Recall _ _ O
: _ _ O
A _ _ O
= _ _ O
B _ _ O
iff _ _ O
A _ _ O
⊆ _ _ O
B _ _ O
and _ _ O
B _ _ O
⊆ _ _ O
A _ _ O
As _ _ O
a _ _ O
result _ _ O
, _ _ O
we _ _ O
can _ _ O
prove _ _ O
a _ _ O
set _ _ B-Concept
identity _ _ I-Concept
by _ _ O
arguing _ _ O
that _ _ O
each _ _ O
side _ _ O
of _ _ O
the _ _ O
equality _ _ O
is _ _ O
a _ _ O
subset _ _ O
of _ _ O
the _ _ O
other _ _ O
. _ _ O
Example _ _ O
: _ _ O
Prove _ _ O
that _ _ O
A _ _ O
∩ _ _ O
B _ _ O
= _ _ O
A _ _ O
∪ _ _ O
B _ _ O
1.First _ _ O
prove _ _ O
that _ _ O
A _ _ O
∩ _ _ O
B _ _ O
⊆ _ _ O
A _ _ O
∪ _ _ O
B _ _ O
2.Then _ _ O
prove _ _ O
that _ _ O
A _ _ O
∪ _ _ O
B _ _ O
⊆ _ _ O
A _ _ O
∩ _ _ O
B _ _ O
Let _ _ O
’s _ _ O
see _ _ O
how _ _ O
this _ _ O
is _ _ O
done _ _ O
… _ _ O

Prove _ _ O
that _ _ O
A _ _ O
∩ _ _ O
B _ _ O
= _ _ O
A _ _ O
∪ _ _ O
B _ _ O
First _ _ O
show _ _ O
A _ _ O
∩ _ _ O
B _ _ O
⊆ _ _ O
A _ _ O
∪ _ _ O
B _ _ O
l _ _ O
Let _ _ O
x _ _ O
be _ _ O
an _ _ O
arbitrary _ _ O
element _ _ O
of _ _ O
A _ _ O
∩ _ _ O
B _ _ O
l _ _ O
By _ _ O
def _ _ O
' _ _ O
n _ _ O
of _ _ O
complement _ _ O
, _ _ O
x _ _ O
∉ _ _ O
A _ _ O
∩ _ _ O
B _ _ O
l _ _ O
By _ _ O
def _ _ O
' _ _ O
n _ _ O
of _ _ O
∉ _ _ O
, _ _ O
¬ _ _ O
( _ _ O
x _ _ O
∈ _ _ O
A _ _ O
∩ _ _ O
B _ _ O
) _ _ O
l _ _ O
By _ _ O
def _ _ O
' _ _ O
n _ _ O
of _ _ O
intersection _ _ O
, _ _ O
¬ _ _ O
( _ _ O
x _ _ O
∈ _ _ O
A _ _ O
∧ _ _ O
x _ _ O
∈ _ _ O
B _ _ O
) _ _ O
l _ _ O
By _ _ O
DeMorgan _ _ O
's _ _ O
, _ _ O
¬ _ _ O
( _ _ O
x _ _ O
∈ _ _ O
A _ _ O
) _ _ O
∨ _ _ O
¬ _ _ O
( _ _ O
x _ _ O
∈ _ _ O
B _ _ O
) _ _ O
l _ _ O
By _ _ O
def _ _ O
' _ _ O
n _ _ O
of _ _ O
∉ _ _ O
, _ _ O
x _ _ O
∉ _ _ O
A _ _ O
∨ _ _ O
x _ _ O
∉ _ _ O
B _ _ O
l _ _ O
By _ _ O
def _ _ O
' _ _ O
n _ _ O
of _ _ O
complement _ _ O
, _ _ O
x _ _ O
∈ _ _ O
A _ _ O
∨ _ _ O
x _ _ O
∈ _ _ O
B _ _ O
l _ _ O
By _ _ O
def _ _ O
' _ _ O
n _ _ O
of _ _ O
union _ _ O
, _ _ O
x _ _ O
∈ _ _ O
A _ _ O
∪ _ _ O
B _ _ O
l _ _ O
Therefore _ _ O
, _ _ O
A _ _ O
∩ _ _ O
B _ _ O
⊆ _ _ O
A _ _ O
∪ _ _ O
B _ _ O

Prove _ _ O
that _ _ O
A _ _ O
∩ _ _ O
B _ _ O
= _ _ O
A _ _ O
∪ _ _ O
B _ _ O
Next _ _ O
show _ _ O
A _ _ O
∪ _ _ O
B _ _ O
⊆ _ _ O
A _ _ O
∩ _ _ O
B _ _ O
l _ _ O
Let _ _ O
x _ _ O
be _ _ O
an _ _ O
arbitrary _ _ O
element _ _ O
of _ _ O
A _ _ O
∪ _ _ O
B _ _ O
l _ _ O
By _ _ O
def _ _ O
' _ _ O
n _ _ O
of _ _ O
union _ _ O
, _ _ O
x _ _ O
∈ _ _ O
A _ _ O
∨ _ _ O
x _ _ O
∈ _ _ O
B _ _ O
l _ _ O
By _ _ O
def _ _ O
' _ _ O
n _ _ O
of _ _ O
complement _ _ O
, _ _ O
x _ _ O
∉ _ _ O
A _ _ O
∨ _ _ O
x _ _ O
∉ _ _ O
B _ _ O
l _ _ O
By _ _ O
def _ _ O
' _ _ O
n _ _ O
of _ _ O
∉ _ _ O
, _ _ O
¬ _ _ O
( _ _ O
x _ _ O
∈ _ _ O
A _ _ O
) _ _ O
∨ _ _ O
¬ _ _ O
( _ _ O
x _ _ O
∈ _ _ O
B _ _ O
) _ _ O
l _ _ O
By _ _ O
DeMorgan _ _ O
's _ _ O
, _ _ O
¬ _ _ O
( _ _ O
x _ _ O
∈ _ _ O
A _ _ O
∧ _ _ O
x _ _ O
∈ _ _ O
B _ _ O
) _ _ O
l _ _ O
By _ _ O
def _ _ O
' _ _ O
n _ _ O
of _ _ O
intersection _ _ O
, _ _ O
¬ _ _ O
( _ _ O
x _ _ O
∈ _ _ O
A _ _ O
∩ _ _ O
B _ _ O
) _ _ O
l _ _ O
By _ _ O
def _ _ O
' _ _ O
n _ _ O
of _ _ O
∉ _ _ O
, _ _ O
x _ _ O
∉ _ _ O
A _ _ O
∩ _ _ O
B _ _ O
l _ _ O
By _ _ O
def _ _ O
' _ _ O
n _ _ O
of _ _ O
complement _ _ O
, _ _ O
x _ _ O
∈ _ _ O
A _ _ O
∩ _ _ O
B _ _ O
l _ _ O
Therefore _ _ O
, _ _ O
A _ _ O
∪ _ _ O
B _ _ O
⊆ _ _ O
A _ _ O
∩ _ _ O
B _ _ O
Since _ _ O
we _ _ O
have _ _ O
shown _ _ O
A _ _ O
∩ _ _ O
B _ _ O
⊆ _ _ O
A _ _ O
∪ _ _ O
B _ _ O
and _ _ O
A _ _ O
∪ _ _ O
B _ _ O
⊆ _ _ O
A _ _ O
∩ _ _ O
B _ _ O
, _ _ O
we _ _ O
have _ _ O
shown _ _ O
that _ _ O
A _ _ O
∩ _ _ O
B _ _ O
= _ _ O
A _ _ O
∪ _ _ O
B _ _ O

We _ _ O
can _ _ O
use _ _ O
set _ _ B-Concept
builder _ _ I-Concept
notation _ _ I-Concept
and _ _ O
logical _ _ B-Concept
definition _ _ I-Concept
to _ _ O
make _ _ O
very _ _ O
precise _ _ O
proofs _ _ O
Example _ _ O
: _ _ O
Prove _ _ O
that _ _ O
A _ _ O
∩ _ _ O
B _ _ O
= _ _ O
A _ _ O
∪ _ _ O
B _ _ O
Proof _ _ O
: _ _ O
1 _ _ O
. _ _ O
A _ _ O
∩ _ _ O
B _ _ O
= _ _ O
{ _ _ O
x _ _ O
| _ _ O
x _ _ O
∉ _ _ O
A _ _ O
∩ _ _ O
B _ _ O
} _ _ O
2 _ _ O
. _ _ O
= _ _ O
{ _ _ O
x _ _ O
| _ _ O
¬ _ _ O
( _ _ O
x _ _ O
∈ _ _ O
( _ _ O
A _ _ O
∩ _ _ O
B _ _ O
) _ _ O
) _ _ O
} _ _ O
3 _ _ O
. _ _ O
= _ _ O
{ _ _ O
x _ _ O
| _ _ O
¬ _ _ O
( _ _ O
x _ _ O
∈ _ _ O
A _ _ O
∧ _ _ O
x _ _ O
∈ _ _ O
B _ _ O
) _ _ O
} _ _ O
4 _ _ O
. _ _ O
= _ _ O
{ _ _ O
x _ _ O
| _ _ O
¬ _ _ O
( _ _ O
x _ _ O
∈ _ _ O
A _ _ O
) _ _ O
∨ _ _ O
¬ _ _ O
( _ _ O
x _ _ O
∈ _ _ O
B _ _ O
) _ _ O
} _ _ O
5 _ _ O
. _ _ O
= _ _ O
{ _ _ O
x _ _ O
| _ _ O
x _ _ O
∉ _ _ O
A _ _ O
∨ _ _ O
x _ _ O
∉ _ _ O
B _ _ O
} _ _ O
6 _ _ O
. _ _ O
= _ _ O
{ _ _ O
x _ _ O
| _ _ O
x _ _ O
∈ _ _ O
A _ _ O
∨ _ _ O
x _ _ O
∈ _ _ O
B _ _ O
} _ _ O
7 _ _ O
. _ _ O
= _ _ O
{ _ _ O
x _ _ O
| _ _ O
x _ _ O
∈ _ _ O
A _ _ O
∪ _ _ O
B _ _ O
} _ _ O
8 _ _ O
. _ _ O
= _ _ O
A∪B _ _ O
Def’n _ _ O
of _ _ O
complement _ _ O
Def’n _ _ O
of _ _ O
∉ _ _ O
Def’n _ _ O
of _ _ O
∩ _ _ O
DeMorgan _ _ O
’s _ _ O
law _ _ O
Def’n _ _ O
of _ _ O
∉ _ _ O
Def’n _ _ O
of _ _ O
complement _ _ O
Def’n _ _ O
of _ _ O
∪ _ _ O
Set _ _ O
builder _ _ O
notation _ _ O
❏ _ _ O

Note _ _ O
: _ _ O
Differences _ _ O
between _ _ O
⊆ _ _ O
and _ _ O
∈ _ _ O
Recall _ _ O
that _ _ O
A _ _ O
⊆ _ _ O
B _ _ O
if _ _ O
A _ _ O
is _ _ O
a _ _ O
subset _ _ O
of _ _ O
B _ _ O
, _ _ O
whereas _ _ O
a _ _ O
∈ _ _ O
A _ _ O
means _ _ O
that _ _ O
a _ _ O
is _ _ O
an _ _ O
element _ _ O
of _ _ O
A. _ _ O
Examples _ _ O
: _ _ O
l _ _ O
Is _ _ O
{ _ _ O
1 _ _ O
} _ _ O
∈ _ _ O
{ _ _ O
1 _ _ O
, _ _ O
2 _ _ O
, _ _ O
3 _ _ O
} _ _ O
? _ _ O
l _ _ O
Is _ _ O
{ _ _ O
1 _ _ O
} _ _ O
⊆ _ _ O
{ _ _ O
1 _ _ O
, _ _ O
2 _ _ O
, _ _ O
3 _ _ O
} _ _ O
? _ _ O
l _ _ O
Is _ _ O
1 _ _ O
∈ _ _ O
{ _ _ O
1 _ _ O
, _ _ O
2 _ _ O
, _ _ O
3 _ _ O
} _ _ O
? _ _ O
l _ _ O
Is _ _ O
{ _ _ O
2 _ _ O
, _ _ O
3 _ _ O
} _ _ O
⊆ _ _ O
{ _ _ O
1 _ _ O
, _ _ O
{ _ _ O
2 _ _ O
, _ _ O
3 _ _ O
} _ _ O
, _ _ O
{ _ _ O
4 _ _ O
, _ _ O
5 _ _ O
} _ _ O
} _ _ O
? _ _ O
l _ _ O
Is _ _ O
{ _ _ O
2 _ _ O
, _ _ O
3 _ _ O
} _ _ O
∈ _ _ O
{ _ _ O
1 _ _ O
, _ _ O
{ _ _ O
2 _ _ O
, _ _ O
3 _ _ O
} _ _ O
, _ _ O
{ _ _ O
4 _ _ O
, _ _ O
5 _ _ O
} _ _ O
} _ _ O
? _ _ O
l _ _ O
Is _ _ O
∅ _ _ O
∈ _ _ O
{ _ _ O
1 _ _ O
, _ _ O
2 _ _ O
, _ _ O
3 _ _ O
} _ _ O
? _ _ O
l _ _ O
Is _ _ O
∅ _ _ O
⊆ _ _ O
{ _ _ O
1 _ _ O
, _ _ O
2 _ _ O
, _ _ O
3 _ _ O
} _ _ O
? _ _ O
No _ _ O
! _ _ O
Yes _ _ O
! _ _ O
Yes _ _ O
! _ _ O
No _ _ O
! _ _ O
But _ _ O
{ _ _ O
{ _ _ O
2 _ _ O
, _ _ O
3 _ _ O
} _ _ O
} _ _ O
is _ _ O
… _ _ O
Yes _ _ O
! _ _ O
No _ _ O
! _ _ O
Yes _ _ O
! _ _ O
∅ _ _ O
is _ _ O
a _ _ O
subset _ _ O
of _ _ O
every _ _ O
set _ _ O

Be _ _ O
careful _ _ O
when _ _ O
computing _ _ O
power _ _ O
sets _ _ O
Question _ _ O
: _ _ O
What _ _ O
is _ _ O
P _ _ O
( _ _ O
{1 _ _ O
, _ _ O
2 _ _ O
, _ _ O
{ _ _ O
1 _ _ O
, _ _ O
2 _ _ O
} _ _ O
} _ _ O
) _ _ O
? _ _ O
Note _ _ O
: _ _ O
The _ _ O
set _ _ O
{ _ _ O
1 _ _ O
, _ _ O
2 _ _ O
, _ _ O
{ _ _ O
1 _ _ O
, _ _ O
2 _ _ O
} _ _ O
} _ _ O
has _ _ O
three _ _ O
elements _ _ O
l _ _ O
1 _ _ O
l _ _ O
2 _ _ O
l _ _ O
{ _ _ O
1 _ _ O
, _ _ O
2 _ _ O
} _ _ O
So _ _ O
, _ _ O
we _ _ O
need _ _ O
all _ _ O
combinations _ _ O
of _ _ O
those _ _ O
elements _ _ O
: _ _ O
l _ _ O
∅ _ _ O
l _ _ O
{ _ _ O
1 _ _ O
} _ _ O
l _ _ O
{ _ _ O
2 _ _ O
} _ _ O
l _ _ O
{ _ _ O
{ _ _ O
1 _ _ O
, _ _ O
2 _ _ O
} _ _ O
} _ _ O
l _ _ O
{ _ _ O
1 _ _ O
, _ _ O
2 _ _ O
} _ _ O
l _ _ O
{ _ _ O
1 _ _ O
, _ _ O
{ _ _ O
1 _ _ O
, _ _ O
2 _ _ O
} _ _ O
} _ _ O
l _ _ O
{ _ _ O
2 _ _ O
, _ _ O
{ _ _ O
1 _ _ O
, _ _ O
2 _ _ O
} _ _ O
} _ _ O
l _ _ O
{ _ _ O
1 _ _ O
, _ _ O
2 _ _ O
, _ _ O
{ _ _ O
1 _ _ O
, _ _ O
2 _ _ O
} _ _ O
} _ _ O
∴ _ _ O
P _ _ O
( _ _ O
{1 _ _ O
, _ _ O
2 _ _ O
, _ _ O
{ _ _ O
1 _ _ O
, _ _ O
2 _ _ O
} _ _ O
} _ _ O
) _ _ O
= _ _ O
{ _ _ O
∅ _ _ O
, _ _ O
{ _ _ O
1 _ _ O
} _ _ O
, _ _ O
{ _ _ O
2 _ _ O
} _ _ O
, _ _ O
{ _ _ O
{ _ _ O
1 _ _ O
, _ _ O
2 _ _ O
} _ _ O
} _ _ O
, _ _ O
{ _ _ O
1 _ _ O
, _ _ O
2 _ _ O
} _ _ O
, _ _ O
{ _ _ O
1 _ _ O
, _ _ O
{ _ _ O
1 _ _ O
, _ _ O
2 _ _ O
} _ _ O
} _ _ O
, _ _ O
{ _ _ O
2 _ _ O
, _ _ O
{ _ _ O
1 _ _ O
, _ _ O
2 _ _ O
} _ _ O
} _ _ O
, _ _ O
{ _ _ O
1 _ _ O
, _ _ O
2 _ _ O
, _ _ O
{ _ _ O
1 _ _ O
, _ _ O
2 _ _ O
} _ _ O
} _ _ O
} _ _ O
This _ _ O
power _ _ O
set _ _ O
has _ _ O
23 _ _ O
= _ _ O
8 _ _ O
elements _ _ O
. _ _ O

We _ _ O
can _ _ O
also _ _ O
construct _ _ O
proofs _ _ O
by _ _ O
repeatedly _ _ O
applying _ _ O
known _ _ O
set _ _ O
identities _ _ O
Example _ _ O
: _ _ O
Prove _ _ O
that _ _ O
A _ _ O
∪ _ _ O
( _ _ O
B _ _ O
∩ _ _ O
C _ _ O
) _ _ O
= _ _ O
( _ _ O
C _ _ O
∪ _ _ O
B _ _ O
) _ _ O
∩ _ _ O
A _ _ O
Proof _ _ O
: _ _ O
1 _ _ O
. _ _ O
A _ _ O
∪ _ _ O
( _ _ O
B _ _ O
∩ _ _ O
C _ _ O
) _ _ O
= _ _ O
A _ _ O
∩ _ _ O
( _ _ O
B _ _ O
∩ _ _ O
C _ _ O
) _ _ O
2 _ _ O
. _ _ O
= _ _ O
A _ _ O
∩ _ _ O
( _ _ O
B _ _ O
∪ _ _ O
C _ _ O
) _ _ O
3 _ _ O
. _ _ O
= _ _ O
( _ _ O
B _ _ O
∪ _ _ O
C _ _ O
) _ _ O
∩ _ _ O
A _ _ O
4 _ _ O
. _ _ O
= _ _ O
( _ _ O
C _ _ O
∪ _ _ O
B _ _ O
) _ _ O
∩ _ _ O
A _ _ O
DeMorgan _ _ O
’s _ _ O
law _ _ O
DeMorgan _ _ O
’s _ _ O
law _ _ O
Commutative _ _ O
law _ _ O
Commutative _ _ O
law _ _ O
❏ _ _ O
Note _ _ O
how _ _ O
similar _ _ O
this _ _ O
process _ _ O
is _ _ O
to _ _ O
that _ _ O
of _ _ O
proving _ _ O
logical _ _ O
equivalences _ _ O
using _ _ O
known _ _ O
logical _ _ O
equivalences _ _ O
. _ _ O

In-class _ _ O
exercises _ _ O
Problem _ _ O
1 _ _ O
: _ _ O
Prove _ _ O
DeMorgan _ _ O
’s _ _ O
law _ _ O
for _ _ O
complement _ _ O
over _ _ O
intersection _ _ O
using _ _ O
a _ _ O
membership _ _ O
table _ _ O
. _ _ O
Problem _ _ O
2 _ _ O
: _ _ O
Prove _ _ O
the _ _ O
complementation _ _ O
law _ _ O
using _ _ O
set _ _ O
builder _ _ O
notation _ _ O
. _ _ O

Sets _ _ O
give _ _ O
us _ _ O
a _ _ O
way _ _ O
to _ _ O
formalize _ _ O
the _ _ O
concept _ _ O
of _ _ O
a _ _ O
function _ _ B-Concept
Definition _ _ O
: _ _ O
Let _ _ O
A _ _ O
and _ _ O
B _ _ O
be _ _ O
nonempty _ _ O
sets _ _ O
. _ _ O
A _ _ O
function _ _ B-Concept
, _ _ O
f _ _ O
, _ _ O
is _ _ O
an _ _ O
assignment _ _ O
of _ _ O
exactly _ _ O
one _ _ O
element _ _ O
of _ _ O
set _ _ O
B _ _ O
to _ _ O
each _ _ O
element _ _ O
of _ _ O
set _ _ O
A. _ _ O
Note _ _ O
: _ _ O
We _ _ O
write _ _ O
f _ _ O
: _ _ O
A _ _ O
→ _ _ O
B _ _ O
to _ _ O
denote _ _ O
that _ _ O
f _ _ O
is _ _ O
a _ _ O
function _ _ O
from _ _ O
A _ _ O
to _ _ O
B _ _ O
Note _ _ O
: _ _ O
We _ _ O
say _ _ O
that _ _ O
f _ _ O
( _ _ O
a _ _ O
) _ _ O
= _ _ O
b _ _ O
if _ _ O
the _ _ O
element _ _ O
a _ _ O
∈ _ _ O
A _ _ O
is _ _ O
mapped _ _ O
to _ _ O
the _ _ O
unique _ _ O
element _ _ O
b _ _ O
∈ _ _ O
B _ _ O
by _ _ O
the _ _ O
function _ _ O
f _ _ O
f _ _ O
A _ _ O
a _ _ O
● _ _ O
f _ _ O
( _ _ O
a _ _ O
) _ _ O
= _ _ O
b _ _ O
B _ _ O
● _ _ O
b _ _ O

Functions _ _ B-Concept
can _ _ O
be _ _ O
defined _ _ O
in _ _ O
a _ _ O
number _ _ O
of _ _ O
ways _ _ O
1 _ _ O
. _ _ O
Explicitly _ _ O
l _ _ O
l _ _ O
f _ _ O
: _ _ O
Z→Z _ _ O
f _ _ O
( _ _ O
x _ _ O
) _ _ O
= _ _ O
x2 _ _ O
+ _ _ O
2x _ _ O
+ _ _ O
1 _ _ O
2 _ _ O
. _ _ O
Using _ _ O
a _ _ O
programming _ _ O
language _ _ O
l _ _ O
int _ _ O
min _ _ O
( _ _ O
int _ _ O
x _ _ O
, _ _ O
int _ _ O
y _ _ O
) _ _ O
= _ _ O
{ _ _ O
x _ _ O
< _ _ O
y _ _ O
? _ _ O
return _ _ O
x _ _ O
: _ _ O
return _ _ O
y _ _ O
; _ _ O
} _ _ O
3 _ _ O
. _ _ O
Using _ _ O
a _ _ O
relation _ _ O
l _ _ O
l _ _ O
Let _ _ O
S _ _ O
= _ _ O
{ _ _ O
Anna _ _ O
, _ _ O
Brian _ _ O
, _ _ O
Christine _ _ O
} _ _ O
Let _ _ O
G _ _ O
= _ _ O
{ _ _ O
A _ _ O
, _ _ O
B _ _ O
, _ _ O
C _ _ O
, _ _ O
D _ _ O
, _ _ O
F _ _ O
} _ _ O
f _ _ O
: _ _ O
S→G _ _ O
Anna _ _ O
● _ _ O
● _ _ O
A _ _ O
Brian _ _ O
● _ _ O
● _ _ O
B _ _ O
Christine _ _ O
● _ _ O
● _ _ O
C _ _ O
● _ _ O
D _ _ O
● _ _ O
F _ _ O

More _ _ O
terminology _ _ O
The _ _ O
domain _ _ B-Concept
of _ _ O
a _ _ O
function _ _ O
is _ _ O
the _ _ O
set _ _ O
that _ _ O
the _ _ O
function _ _ O
maps _ _ O
from _ _ O
, _ _ O
while _ _ O
the _ _ O
codomain _ _ B-Concept
is _ _ O
the _ _ O
set _ _ O
that _ _ O
is _ _ O
mapped _ _ O
to _ _ O
If _ _ O
f _ _ O
( _ _ O
a _ _ O
) _ _ O
= _ _ O
b _ _ O
, _ _ O
b _ _ O
is _ _ O
called _ _ O
the _ _ O
image _ _ B-Concept
of _ _ O
a _ _ O
, _ _ O
and _ _ O
a _ _ O
is _ _ O
called _ _ O
the _ _ O
preimage _ _ B-Concept
of _ _ O
b _ _ O
The _ _ O
range _ _ B-Concept
of _ _ O
a _ _ O
function _ _ O
f _ _ O
: _ _ O
A _ _ O
→ _ _ O
B _ _ O
is _ _ O
the _ _ O
set _ _ O
of _ _ O
all _ _ O
images _ _ O
of _ _ O
elements _ _ O
of _ _ O
A _ _ O
Domain _ _ B-Concept
= _ _ O
S _ _ O
= _ _ O
{ _ _ O
Anna _ _ O
, _ _ O
Brian _ _ O
, _ _ O
Christine _ _ O
} _ _ O
Codomain _ _ B-Concept
= _ _ O
G _ _ O
= _ _ O
{ _ _ O
A _ _ O
, _ _ O
B _ _ O
, _ _ O
C _ _ O
, _ _ O
D _ _ O
, _ _ O
F _ _ O
} _ _ O
f _ _ O
: _ _ O
S→G _ _ O
Anna _ _ O
● _ _ O
● _ _ O
A _ _ O
Brian _ _ O
● _ _ O
● _ _ O
B _ _ O
Christine _ _ O
● _ _ O
● _ _ O
C _ _ O
● _ _ O
D _ _ O
● _ _ O
F _ _ O
Range _ _ B-Concept
= _ _ O
{ _ _ O
A _ _ O
, _ _ O
C _ _ O
} _ _ O

What _ _ O
are _ _ O
the _ _ O
domain _ _ B-Concept
, _ _ O
codomain _ _ B-Concept
, _ _ O
and _ _ O
range _ _ B-Concept
of _ _ O
the _ _ O
following _ _ O
functions _ _ O
? _ _ O
1 _ _ O
. _ _ O
f _ _ O
: _ _ O
Z _ _ O
→ _ _ O
Z _ _ O
, _ _ O
f _ _ O
( _ _ O
x _ _ O
) _ _ O
= _ _ O
x3 _ _ O
l _ _ O
Domain _ _ B-Concept
: _ _ O
Integers _ _ O
l _ _ O
Codomain _ _ B-Concept
: _ _ O
Integers _ _ O
l _ _ O
Range _ _ B-Concept
: _ _ O
Perfect _ _ O
cubes _ _ O
2 _ _ O
. _ _ O
g _ _ O
: _ _ O
R _ _ O
→ _ _ O
R _ _ O
, _ _ O
g _ _ O
( _ _ O
x _ _ O
) _ _ O
= _ _ O
x _ _ O
- _ _ O
2 _ _ O
l _ _ O
Domain _ _ B-Concept
: _ _ O
Real _ _ O
numbers _ _ O
l _ _ O
Codomain _ _ B-Concept
: _ _ O
Real _ _ O
numbers _ _ O
l _ _ O
Range _ _ B-Concept
: _ _ O
Real _ _ O
numbers _ _ O
3 _ _ O
. _ _ O
int _ _ O
foo _ _ O
( _ _ O
int _ _ O
x _ _ O
, _ _ O
int _ _ O
y _ _ O
) _ _ O
= _ _ O
{ _ _ O
return _ _ O
( _ _ O
x*y _ _ O
) _ _ O
%2 _ _ O
; _ _ O
} _ _ O
l _ _ O
Domain _ _ B-Concept
: _ _ O
All _ _ O
( _ _ O
x _ _ O
, _ _ O
y _ _ O
) _ _ O
∈ _ _ O
Z×Z _ _ O
l _ _ O
Codomain _ _ B-Concept
: _ _ O
Integers _ _ O
l _ _ O
Range _ _ B-Concept
: _ _ O
{ _ _ O
0 _ _ O
, _ _ O
1 _ _ O
} _ _ O

A _ _ O
one-to-one _ _ B-Concept
function _ _ I-Concept
never _ _ O
assigns _ _ O
the _ _ O
same _ _ O
image _ _ B-Concept
to _ _ O
two _ _ O
different _ _ O
elements _ _ O
Definition _ _ O
: _ _ O
A _ _ O
function _ _ O
f _ _ O
: _ _ O
A _ _ O
→ _ _ O
B _ _ O
is _ _ O
one-to-one _ _ B-Concept
, _ _ O
or _ _ O
injective _ _ O
, _ _ O
iff _ _ O
∀x _ _ O
, _ _ O
y∈A _ _ O
[ _ _ O
( _ _ O
f _ _ O
( _ _ O
x _ _ O
) _ _ O
= _ _ O
f _ _ O
( _ _ O
y _ _ O
) _ _ O
) _ _ O
→ _ _ O
( _ _ O
x _ _ O
= _ _ O
y _ _ O
) _ _ O
] _ _ O
Are _ _ O
the _ _ O
following _ _ O
functions _ _ B-Concept
injections _ _ B-Concept
? _ _ O
l _ _ O
f _ _ O
: _ _ O
R _ _ O
→ _ _ O
R _ _ O
, _ _ O
f _ _ O
( _ _ O
x _ _ O
) _ _ O
= _ _ O
x _ _ O
+ _ _ O
1 _ _ O
l _ _ O
f _ _ O
: _ _ O
Z _ _ O
→ _ _ O
Z _ _ O
, _ _ O
f _ _ O
( _ _ O
x _ _ O
) _ _ O
= _ _ O
x2 _ _ O
l _ _ O
f _ _ O
: _ _ O
R+ _ _ O
→ _ _ O
R+ _ _ O
, _ _ O
f _ _ O
( _ _ O
x _ _ O
) _ _ O
= _ _ O
√x _ _ O
l _ _ O
f _ _ O
: _ _ O
S→G _ _ O
Yes _ _ O
No _ _ O
Yes _ _ O
No _ _ O
f _ _ O
: _ _ O
S→G _ _ O
Anna _ _ O
● _ _ O
Brian _ _ O
● _ _ O
Christine _ _ O
● _ _ O
● _ _ O
A _ _ O
● _ _ O
B _ _ O
● _ _ O
C _ _ O
● _ _ O
D _ _ O
● _ _ O
E _ _ O

An _ _ O
onto _ _ B-Concept
function _ _ B-Concept
“ _ _ O
uses _ _ O
” _ _ O
every _ _ O
element _ _ O
of _ _ O
its _ _ O
codomain _ _ B-Concept
Definition _ _ O
: _ _ O
We _ _ O
call _ _ O
a _ _ O
function _ _ O
f _ _ O
: _ _ O
A _ _ O
→ _ _ O
B _ _ O
onto _ _ B-Concept
, _ _ O
or _ _ O
surjective _ _ B-Concept
, _ _ O
iff _ _ O
for _ _ O
every _ _ O
element _ _ O
b _ _ O
∈ _ _ O
B _ _ O
, _ _ O
there _ _ O
is _ _ O
some _ _ O
element _ _ O
a _ _ O
∈ _ _ O
A _ _ O
such _ _ O
that _ _ O
f _ _ O
( _ _ O
a _ _ O
) _ _ O
= _ _ O
b. _ _ O
Think _ _ O
about _ _ O
an _ _ O
onto _ _ B-Concept
function _ _ O
as _ _ O
“ _ _ O
covering _ _ O
” _ _ O
the _ _ O
entirety _ _ O
of _ _ O
its _ _ O
codomain _ _ B-Concept
. _ _ O
The _ _ O
following _ _ O
function _ _ O
is _ _ O
a _ _ O
surjection _ _ B-Concept
: _ _ O
f _ _ O
: _ _ O
A→B _ _ O
a _ _ O
● _ _ O
b _ _ O
● _ _ O
c _ _ O
● _ _ O
d _ _ O
● _ _ O
● _ _ O
1 _ _ O
● _ _ O
2 _ _ O
● _ _ O
3 _ _ O

Are _ _ O
the _ _ O
following _ _ O
functions _ _ O
one-to-one _ _ O
, _ _ O
onto _ _ O
, _ _ O
both _ _ O
, _ _ O
or _ _ O
neither _ _ O
? _ _ O
f _ _ O
: _ _ O
A→B _ _ O
a _ _ O
● _ _ O
b _ _ O
● _ _ O
c _ _ O
● _ _ O
d _ _ O
● _ _ O
f _ _ O
: _ _ O
A→B _ _ O
● _ _ O
1 _ _ O
● _ _ O
2 _ _ O
● _ _ O
3 _ _ O
a _ _ O
● _ _ O
b _ _ O
● _ _ O
c _ _ O
● _ _ O
d _ _ O
● _ _ O
One-to-one _ _ O
and _ _ O
onto _ _ O
( _ _ O
Aside _ _ O
: _ _ O
Functions _ _ O
that _ _ O
are _ _ O
both _ _ O
one-to-one _ _ O
and _ _ O
onto _ _ O
are _ _ O
called _ _ O
bijections _ _ O
) _ _ O
Neither _ _ O
! _ _ O
f _ _ O
: _ _ O
A→B _ _ O
a _ _ O
● _ _ O
b _ _ O
● _ _ O
c _ _ O
● _ _ O
d _ _ O
● _ _ O
One-to-one _ _ O
● _ _ O
1 _ _ O
● _ _ O
2 _ _ O
● _ _ O
3 _ _ O
● _ _ O
4 _ _ O
● _ _ O
1 _ _ O
● _ _ O
2 _ _ O
● _ _ O
3 _ _ O
● _ _ O
4 _ _ O
● _ _ O
5 _ _ O
f _ _ O
: _ _ O
A→B _ _ O
a _ _ O
● _ _ O
b _ _ O
● _ _ O
c _ _ O
● _ _ O
d _ _ O
● _ _ O
● _ _ O
1 _ _ O
● _ _ O
2 _ _ O
● _ _ O
3 _ _ O
Onto _ _ B-Concept

Bijections _ _ B-Concept
have _ _ O
inverses _ _ O
Definition _ _ O
: _ _ O
If _ _ O
f _ _ O
: _ _ O
A _ _ O
→ _ _ O
B _ _ O
is _ _ O
a _ _ O
bijection _ _ B-Concept
, _ _ O
the _ _ O
inverse _ _ O
of _ _ O
f _ _ O
is _ _ O
the _ _ O
function _ _ B-Concept
f-1 _ _ O
: _ _ O
B _ _ O
→ _ _ O
A _ _ O
that _ _ O
assigns _ _ O
to _ _ O
each _ _ O
b _ _ O
∈ _ _ O
B _ _ O
the _ _ O
unique _ _ O
value _ _ O
a _ _ O
∈ _ _ O
A _ _ O
such _ _ O
that _ _ O
f _ _ O
( _ _ O
a _ _ O
) _ _ O
= _ _ O
b. _ _ O
That _ _ O
is _ _ O
, _ _ O
f-1 _ _ O
( _ _ O
b _ _ O
) _ _ O
= _ _ O
a _ _ O
iff _ _ O
f _ _ O
( _ _ O
a _ _ O
) _ _ O
= _ _ O
b. _ _ O
f _ _ O
Graphically _ _ O
: _ _ O
A _ _ O
a _ _ O
● _ _ O
f _ _ O
( _ _ O
a _ _ O
) _ _ O
= _ _ O
b _ _ O
B _ _ O
● _ _ O
b _ _ O
f-1 _ _ O
( _ _ O
b _ _ O
) _ _ O
= _ _ O
a _ _ O
Note _ _ O
: _ _ O
Only _ _ O
a _ _ O
bijection _ _ B-Concept
can _ _ O
have _ _ O
an _ _ O
inverse _ _ O
. _ _ O
( _ _ O
Why _ _ O
? _ _ O
) _ _ O

Do _ _ O
the _ _ O
following _ _ O
functions _ _ O
have _ _ O
inverses _ _ O
? _ _ O
1 _ _ O
. _ _ O
f _ _ O
: _ _ O
R _ _ O
→ _ _ O
R _ _ O
, _ _ O
f _ _ O
( _ _ O
x _ _ O
) _ _ O
= _ _ O
x2 _ _ O
l _ _ O
No _ _ O
, _ _ O
since _ _ O
this _ _ O
function _ _ O
is _ _ O
not _ _ O
onto _ _ O
2 _ _ O
. _ _ O
g _ _ O
: _ _ O
Z _ _ O
→ _ _ O
Z _ _ O
, _ _ O
g _ _ O
( _ _ O
x _ _ O
) _ _ O
= _ _ O
x _ _ O
+ _ _ O
1 _ _ O
l _ _ O
Yes _ _ O
, _ _ O
g-1 _ _ O
( _ _ O
x _ _ O
) _ _ O
= _ _ O
x _ _ O
– _ _ O
1 _ _ O
3 _ _ O
. _ _ O
h _ _ O
: _ _ O
A _ _ O
→ _ _ O
B _ _ O
l _ _ O
Yes _ _ O
h _ _ O
: _ _ O
A→B _ _ O
a _ _ O
● _ _ O
b _ _ O
● _ _ O
c _ _ O
● _ _ O
d _ _ O
● _ _ O
h-1 _ _ O
: _ _ O
B _ _ O
→ _ _ O
A _ _ O
● _ _ O
1 _ _ O
● _ _ O
2 _ _ O
● _ _ O
3 _ _ O
● _ _ O
4 _ _ O
1 _ _ O
● _ _ O
2 _ _ O
● _ _ O
3 _ _ O
● _ _ O
4 _ _ O
● _ _ O
● _ _ O
a _ _ O
● _ _ O
b _ _ O
● _ _ O
c _ _ O
● _ _ O
d _ _ O

Functions _ _ B-Concept
can _ _ O
be _ _ O
composed _ _ B-Concept
with _ _ O
one _ _ O
another _ _ O
Given _ _ O
functions _ _ O
g _ _ O
: _ _ O
A _ _ O
→ _ _ O
B _ _ O
and _ _ O
f _ _ O
: _ _ O
B _ _ O
→ _ _ O
C _ _ O
, _ _ O
the _ _ O
composition _ _ B-Concept
of _ _ O
f _ _ O
and _ _ O
g _ _ O
, _ _ O
denoted _ _ O
f◦g _ _ O
, _ _ O
is _ _ O
defined _ _ O
as _ _ O
( _ _ O
f◦g _ _ O
) _ _ O
( _ _ O
x _ _ O
) _ _ O
= _ _ O
f _ _ O
( _ _ O
g _ _ O
( _ _ O
x _ _ O
) _ _ O
) _ _ O
. _ _ O
g _ _ O
A _ _ O
a _ _ O
● _ _ O
g _ _ O
( _ _ O
a _ _ O
) _ _ O
= _ _ O
b _ _ O
f _ _ O
B _ _ O
● _ _ O
g _ _ O
( _ _ O
a _ _ O
) _ _ O
f _ _ O
( _ _ O
g _ _ O
( _ _ O
a _ _ O
) _ _ O
) _ _ O
= _ _ O
c _ _ O
C _ _ O
● _ _ O
c _ _ O
f◦g _ _ O
Note _ _ O
: _ _ O
For _ _ O
f◦g _ _ O
to _ _ O
exist _ _ O
, _ _ O
the _ _ O
codomain _ _ B-Concept
of _ _ O
g _ _ O
must _ _ O
be _ _ O
a _ _ O
subset _ _ O
of _ _ O
the _ _ O
domain _ _ B-Concept
of _ _ O
f. _ _ O
Definition _ _ O
: _ _ O
If _ _ O
g _ _ O
: _ _ O
A _ _ O
→ _ _ O
B _ _ O
and _ _ O
f _ _ O
: _ _ O
D _ _ O
→ _ _ O
C _ _ O
and _ _ O
B _ _ O
⊆ _ _ O
D _ _ O
, _ _ O
f◦g _ _ O
is _ _ O
a _ _ O
function _ _ O
A _ _ O
→ _ _ O
C _ _ O
where _ _ O
( _ _ O
f◦g _ _ O
) _ _ O
( _ _ O
x _ _ O
) _ _ O
= _ _ O
f _ _ O
( _ _ O
g _ _ O
( _ _ O
x _ _ O
) _ _ O
) _ _ O

Can _ _ O
the _ _ O
following _ _ O
functions _ _ B-Concept
be _ _ O
composed _ _ B-Concept
? _ _ O
If _ _ O
so _ _ O
, _ _ O
what _ _ O
is _ _ O
their _ _ O
composition _ _ B-Concept
? _ _ O
Let _ _ O
f _ _ O
: _ _ O
A _ _ O
→ _ _ O
A _ _ O
such _ _ O
that _ _ O
f _ _ O
( _ _ O
a _ _ O
) _ _ O
= _ _ O
b _ _ O
, _ _ O
f _ _ O
( _ _ O
b _ _ O
) _ _ O
= _ _ O
c _ _ O
, _ _ O
f _ _ O
( _ _ O
c _ _ O
) _ _ O
= _ _ O
a _ _ O
g _ _ O
: _ _ O
B _ _ O
→ _ _ O
A _ _ O
such _ _ O
that _ _ O
g _ _ O
( _ _ O
1 _ _ O
) _ _ O
= _ _ O
b _ _ O
, _ _ O
g _ _ O
( _ _ O
4 _ _ O
) _ _ O
= _ _ O
a _ _ O
1 _ _ O
. _ _ O
( _ _ O
f _ _ O
◦ _ _ O
g _ _ O
) _ _ O
( _ _ O
x _ _ O
) _ _ O
? _ _ O
2 _ _ O
. _ _ O
( _ _ O
g _ _ O
◦ _ _ O
f _ _ O
) _ _ O
( _ _ O
x _ _ O
) _ _ O
? _ _ O
Yes _ _ O
! _ _ O
f _ _ O
( _ _ O
g _ _ O
( _ _ O
1 _ _ O
) _ _ O
) _ _ O
= _ _ O
c _ _ O
, _ _ O
f _ _ O
( _ _ O
g _ _ O
( _ _ O
4 _ _ O
) _ _ O
) _ _ O
= _ _ O
b _ _ O
No _ _ O
! _ _ O
A _ _ O
⊄ _ _ O
B _ _ O
Let _ _ O
f _ _ O
: _ _ O
Z _ _ O
→ _ _ O
Z _ _ O
, _ _ O
f _ _ O
( _ _ O
x _ _ O
) _ _ O
= _ _ O
2x _ _ O
+ _ _ O
1 _ _ O
g _ _ O
: _ _ O
Z _ _ O
→ _ _ O
Z _ _ O
, _ _ O
g _ _ O
( _ _ O
x _ _ O
) _ _ O
= _ _ O
x2 _ _ O
1 _ _ O
. _ _ O
( _ _ O
f _ _ O
◦ _ _ O
g _ _ O
) _ _ O
( _ _ O
x _ _ O
) _ _ O
? _ _ O
2 _ _ O
. _ _ O
( _ _ O
g _ _ O
◦ _ _ O
f _ _ O
) _ _ O
( _ _ O
x _ _ O
) _ _ O
? _ _ O
Yes _ _ O
! _ _ O
( _ _ O
f _ _ O
◦ _ _ O
g _ _ O
) _ _ O
( _ _ O
x _ _ O
) _ _ O
= _ _ O
2x2 _ _ O
+ _ _ O
1 _ _ O
Yes _ _ O
! _ _ O
( _ _ O
g _ _ O
◦ _ _ O
f _ _ O
) _ _ O
( _ _ O
x _ _ O
) _ _ O
= _ _ O
4x2 _ _ O
+ _ _ O
4x _ _ O
+ _ _ O
1 _ _ O
Note _ _ O
: _ _ O
There _ _ O
is _ _ O
not _ _ O
a _ _ O
guarantee _ _ O
that _ _ O
( _ _ O
f _ _ O
◦ _ _ O
g _ _ O
) _ _ O
( _ _ O
x _ _ O
) _ _ O
= _ _ O
( _ _ O
g _ _ O
◦ _ _ O
f _ _ O
) _ _ O
( _ _ O
x _ _ O
) _ _ O
. _ _ O

Important _ _ O
functions _ _ O
Definition _ _ O
: _ _ O
The _ _ O
floor _ _ B-Concept
function _ _ B-Concept
maps _ _ O
a _ _ O
real _ _ O
number _ _ O
x _ _ O
to _ _ O
the _ _ O
largest _ _ O
integer _ _ O
y _ _ O
that _ _ O
is _ _ O
not _ _ O
greater _ _ O
than _ _ O
x. _ _ O
The _ _ O
floor _ _ O
of _ _ O
x _ _ O
is _ _ O
denoted _ _ O
⌊x⌋. _ _ O
Definition _ _ O
: _ _ O
The _ _ O
ceiling _ _ B-Concept
function _ _ B-Concept
maps _ _ O
a _ _ O
real _ _ O
number _ _ O
x _ _ O
to _ _ O
the _ _ O
smallest _ _ O
integer _ _ O
y _ _ O
that _ _ O
is _ _ O
not _ _ O
less _ _ O
than _ _ O
x. _ _ O
The _ _ O
ceiling _ _ B-Concept
of _ _ O
x _ _ O
is _ _ O
denoted _ _ O
⌈x⌉. _ _ O
Examples _ _ O
: _ _ O
l _ _ O
⌊1.2⌋ _ _ O
= _ _ O
1 _ _ O
l _ _ O
⌊7.0⌋ _ _ O
= _ _ O
7 _ _ O
l _ _ O
⌊-42.24⌋ _ _ O
= _ _ O
-43 _ _ O
l _ _ O
⌈1.2⌉ _ _ O
= _ _ O
2 _ _ O
l _ _ O
⌈7.0⌉ _ _ O
= _ _ O
7 _ _ O
l _ _ O
⌈-42.24⌉ _ _ O
= _ _ O
-42 _ _ O

We _ _ O
actually _ _ O
use _ _ O
floor _ _ B-Concept
and _ _ O
ceiling _ _ B-Concept
quite _ _ O
a _ _ O
bit _ _ O
in _ _ O
computer _ _ O
science _ _ O
… _ _ O
Example _ _ O
: _ _ O
A _ _ O
byte _ _ O
, _ _ O
which _ _ O
holds _ _ O
8 _ _ O
bits _ _ O
, _ _ O
is _ _ O
typically _ _ O
the _ _ O
smallest _ _ O
amount _ _ O
of _ _ O
memory _ _ O
that _ _ O
can _ _ O
be _ _ O
allocated _ _ O
on _ _ O
most _ _ O
systems _ _ O
. _ _ O
How _ _ O
many _ _ O
bytes _ _ O
are _ _ O
needed _ _ O
to _ _ O
store _ _ O
123 _ _ O
bits _ _ O
of _ _ O
data _ _ O
? _ _ O
Answer _ _ O
: _ _ O
We _ _ O
need _ _ O
⌈123 _ _ O
/ _ _ O
8⌉ _ _ O
= _ _ O
⌈15.375⌉ _ _ O
= _ _ O
16 _ _ O
bytes _ _ O
Example _ _ O
: _ _ O
How _ _ O
many _ _ O
1400 _ _ O
byte _ _ O
packets _ _ O
can _ _ O
be _ _ O
transmitted _ _ O
over _ _ O
a _ _ O
14.4 _ _ O
kbps _ _ O
modem _ _ O
in _ _ O
one _ _ O
minute _ _ O
? _ _ O
Answer _ _ O
: _ _ O
A _ _ O
14.4 _ _ O
kbps _ _ O
modem _ _ O
can _ _ O
transmit _ _ O
14 _ _ O
, _ _ O
400*60 _ _ O
= _ _ O
864 _ _ O
, _ _ O
000 _ _ O
bits _ _ O
per _ _ O
minute _ _ O
. _ _ O
Therefore _ _ O
, _ _ O
we _ _ O
can _ _ O
transmit _ _ O
⌊864 _ _ O
, _ _ O
000 _ _ O
/ _ _ O
( _ _ O
1400*8 _ _ O
) _ _ O
⌋ _ _ O
= _ _ O
⌊77.1428571⌋ _ _ O
= _ _ O
77 _ _ O
packets _ _ O
. _ _ O

In-class _ _ O
exercises _ _ O
Problem _ _ O
3 _ _ O
: _ _ O
Find _ _ O
the _ _ O
domain _ _ O
and _ _ O
range _ _ O
of _ _ O
each _ _ O
of _ _ O
the _ _ O
following _ _ O
functions _ _ O
. _ _ O
a. _ _ O
The _ _ O
function _ _ O
that _ _ O
determines _ _ O
the _ _ O
number _ _ O
of _ _ O
zeros _ _ O
in _ _ O
some _ _ O
bit _ _ O
string _ _ O
b. _ _ O
The _ _ O
function _ _ O
that _ _ O
maps _ _ O
an _ _ O
English _ _ O
word _ _ O
to _ _ O
its _ _ O
two _ _ O
rightmost _ _ O
letters _ _ O
c. _ _ O
The _ _ O
function _ _ O
that _ _ O
assigns _ _ O
to _ _ O
an _ _ O
integer _ _ O
the _ _ O
sum _ _ O
of _ _ O
its _ _ O
individual _ _ O
digits _ _ O
Problem _ _ O
4 _ _ O
: _ _ O
On _ _ O
Top _ _ O
Hat _ _ O

Final _ _ O
thoughts _ _ O
n _ _ O
Set _ _ B-Concept
identities _ _ I-Concept
are _ _ O
useful _ _ O
tools _ _ O
! _ _ O
n _ _ O
We _ _ O
can _ _ O
prove _ _ O
set _ _ B-Concept
identities _ _ I-Concept
in _ _ O
a _ _ O
number _ _ O
of _ _ O
( _ _ O
equivalent _ _ O
) _ _ O
ways _ _ O
n _ _ O
Sets _ _ B-Concept
are _ _ O
the _ _ O
basis _ _ O
of _ _ O
functions _ _ B-Concept
, _ _ O
which _ _ O
are _ _ O
used _ _ O
throughout _ _ O
computer _ _ O
science _ _ O
and _ _ O
mathematics _ _ O
n _ _ O
Next _ _ O
time _ _ O
: _ _ O
l _ _ O
Summations _ _ O
( _ _ O
Section _ _ O
2.4 _ _ O
) _ _ O



