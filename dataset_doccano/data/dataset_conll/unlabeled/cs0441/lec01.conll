unlabeled|cs0441|lec01
-DOCSTART- -X- -X- O

Discrete _ _ O
Structures _ _ O
for _ _ O
Computer _ _ O
Science _ _ O
William _ _ O
Garrison _ _ O
bill@cs.pitt.edu _ _ O
6311 _ _ O
Sennott _ _ O
Square _ _ O
Lecture _ _ O
# _ _ O
1 _ _ O
: _ _ O
Course _ _ O
Introduction _ _ O
Based _ _ O
on _ _ O
materials _ _ O
developed _ _ O
by _ _ O
Dr. _ _ O
Adam _ _ O
Lee _ _ O

Administrivia _ _ O
CS _ _ O
441 _ _ O
: _ _ O
Discrete _ _ O
Structures _ _ O
for _ _ O
Computer _ _ O
Science _ _ O
Instructor _ _ O
: _ _ O
TA _ _ O
: _ _ O
William _ _ O
Garrison _ _ O
bill@cs.pitt.edu _ _ O
6311 _ _ O
Sennott _ _ O
Square _ _ O
OH _ _ O
: _ _ O
TBA _ _ O
, _ _ O
by _ _ O
appt _ _ O
. _ _ O
TBA _ _ O
http _ _ O
: _ _ O
/ _ _ O
/ _ _ O
cs.pitt.edu _ _ O
/ _ _ O
~bill _ _ O
/ _ _ O
441 _ _ O

Course _ _ O
meeting _ _ O
times _ _ O
n _ _ O
Lecture _ _ O
l _ _ O
B _ _ O
: _ _ O
Flex@Pitt _ _ O
, _ _ O
M _ _ O
/ _ _ O
W _ _ O
5 _ _ O
: _ _ O
00–6 _ _ O
: _ _ O
15 _ _ O
l _ _ O
C _ _ O
: _ _ O
Flex@Pitt _ _ O
, _ _ O
T _ _ O
/ _ _ O
H _ _ O
4 _ _ O
: _ _ O
30–5 _ _ O
: _ _ O
45 _ _ O
n _ _ O
Recitations _ _ O
l _ _ O
Wednesday _ _ O
or _ _ O
Friday _ _ O
( _ _ O
see _ _ O
website _ _ O
) _ _ O
n _ _ O
It _ _ O
is _ _ O
important _ _ O
to _ _ O
attend _ _ O
both _ _ O
lecture _ _ O
and _ _ O
your _ _ O
assigned _ _ O
recitation _ _ O
section _ _ O
! _ _ O
l _ _ O
( _ _ O
No _ _ O
recitations _ _ O
this _ _ O
week _ _ O
) _ _ O

Grading _ _ O
n _ _ O
Overall _ _ O
breakdown _ _ O
: _ _ O
l _ _ O
30 _ _ O
% _ _ O
Midterm _ _ O
exam _ _ O
l _ _ O
30 _ _ O
% _ _ O
Final _ _ O
exam _ _ O
l _ _ O
20 _ _ O
% _ _ O
Homework _ _ O
l _ _ O
10 _ _ O
% _ _ O
Recitation _ _ O
exercises _ _ O
l _ _ O
10 _ _ O
% _ _ O
Lecture _ _ O
participation _ _ O
( _ _ O
Top _ _ O
Hat _ _ O
) _ _ O
l _ _ O
100 _ _ O
% _ _ O

Recitation _ _ O
Recitation _ _ O
exercises _ _ O
l _ _ O
Covers _ _ O
the _ _ O
previous _ _ O
week _ _ O
’s _ _ O
material _ _ O
( _ _ O
W–T _ _ O
) _ _ O
l _ _ O
Assigned _ _ O
the _ _ O
day _ _ O
before _ _ O
recitation _ _ O
, _ _ O
due _ _ O
the _ _ O
day _ _ O
of _ _ O
your _ _ O
recitation _ _ O
at _ _ O
11 _ _ O
: _ _ O
59 _ _ O
PM _ _ O
via _ _ O
Gradescope _ _ O
l _ _ O
Late _ _ O
submissions _ _ O
are _ _ O
not _ _ O
accepted—submit _ _ O
early _ _ O
and _ _ O
often _ _ O
l _ _ O
Two _ _ O
lowest _ _ O
exercise _ _ O
grades _ _ O
will _ _ O
be _ _ O
dropped _ _ O
Recitations _ _ O
are _ _ O
collaborative _ _ O
l _ _ O
You _ _ O
should _ _ O
try _ _ O
the _ _ O
exercises _ _ O
in _ _ O
advance _ _ O
of _ _ O
recitation _ _ O
l _ _ O
You _ _ O
’ll _ _ O
go _ _ O
over _ _ O
much _ _ O
of _ _ O
the _ _ O
solutions _ _ O
in _ _ O
recitations _ _ O
l _ _ O
Submit _ _ O
solutions _ _ O
that _ _ O
you _ _ O
understand—don’t _ _ O
just _ _ O
copy _ _ O
what _ _ O
your _ _ O
TA _ _ O
writes _ _ O
or _ _ O
copy _ _ O
a _ _ O
friend _ _ O
’s _ _ O
submission _ _ O

Homework _ _ O
Weekly _ _ O
homework _ _ O
assignments _ _ O
l _ _ O
Assigned _ _ O
on _ _ O
Friday _ _ O
, _ _ O
due _ _ O
the _ _ O
next _ _ O
Tuesday _ _ O
at _ _ O
11 _ _ O
: _ _ O
59 _ _ O
PM _ _ O
l _ _ O
Late _ _ O
homework _ _ O
is _ _ O
not _ _ O
accepted—submit _ _ O
early _ _ O
and _ _ O
often _ _ O
l _ _ O
Two _ _ O
lowest _ _ O
homework _ _ O
grades _ _ O
will _ _ O
be _ _ O
dropped _ _ O
Homework _ _ O
may _ _ O
be _ _ O
discussed _ _ O
with _ _ O
others _ _ O
, _ _ O
but _ _ O
must _ _ O
be _ _ O
solved _ _ O
and _ _ O
written _ _ O
up _ _ O
individually _ _ O
l _ _ O
Limit _ _ O
discussion _ _ O
to _ _ O
understanding _ _ O
problems _ _ O
and _ _ O
developing _ _ O
high-level _ _ O
solution _ _ O
tactics _ _ O
l _ _ O
Canvas _ _ O
is _ _ O
a _ _ O
good _ _ O
place _ _ O
to _ _ O
do _ _ O
this _ _ O
l _ _ O
Identify _ _ O
collaborators _ _ O
on _ _ O
your _ _ O
homework _ _ O
cover _ _ O
sheet _ _ O
l _ _ O
No _ _ O
online _ _ O
resources _ _ O
( _ _ O
except _ _ O
Canvas _ _ O
) _ _ O
l _ _ O
Failure _ _ O
to _ _ O
comply _ _ O
with _ _ O
this _ _ O
policy _ _ O
is _ _ O
a _ _ O
violation _ _ O
of _ _ O
academic _ _ O
integrity _ _ O
( _ _ O
F _ _ O
in _ _ O
the _ _ O
course _ _ O
) _ _ O

Policies _ _ O
n _ _ O
Check _ _ O
the _ _ O
web _ _ O
page _ _ O
and _ _ O
Canvas _ _ O
frequently _ _ O
. _ _ O
Announcements _ _ O
, _ _ O
homework _ _ O
, _ _ O
and _ _ O
lecture _ _ O
slides _ _ O
will _ _ O
be _ _ O
posted _ _ O
there _ _ O
n _ _ O
We _ _ O
will _ _ O
drop _ _ O
your _ _ O
two _ _ O
lowest _ _ O
homework _ _ O
and _ _ O
recitation _ _ O
scores _ _ O
before _ _ O
computing _ _ O
your _ _ O
homework _ _ O
average—no _ _ O
excuses _ _ O
necessary _ _ O
! _ _ O
n _ _ O
Regrade _ _ O
requests _ _ O
accepted _ _ O
within _ _ O
2 _ _ O
weeks _ _ O
of _ _ O
hand-back _ _ O
. _ _ O
Grade _ _ O
may _ _ O
increase _ _ O
, _ _ O
decrease _ _ O
, _ _ O
or _ _ O
stay _ _ O
the _ _ O
same _ _ O
. _ _ O
n _ _ O
Other _ _ O
policies _ _ O
are _ _ O
on _ _ O
the _ _ O
web _ _ O
page _ _ O
l _ _ O
Accommodating _ _ O
students _ _ O
with _ _ O
disabilities _ _ O
l _ _ O
Religious _ _ O
observances _ _ O
l _ _ O
Etc _ _ O
. _ _ O

Questions _ _ O
? _ _ O

Course _ _ O
overview _ _ O
n _ _ O
What _ _ O
is _ _ O
discrete _ _ O
mathematics _ _ O
? _ _ O
n _ _ O
Why _ _ O
is _ _ O
a _ _ O
math _ _ O
course _ _ O
part _ _ O
of _ _ O
the _ _ O
computer _ _ O
science _ _ O
curriculum _ _ O
? _ _ O
n _ _ O
Will _ _ O
I _ _ O
really _ _ O
ever _ _ O
use _ _ O
this _ _ O
stuff _ _ O
again _ _ O
? _ _ O
n _ _ O
How _ _ O
to _ _ O
succeed _ _ O
in _ _ O
this _ _ O
course _ _ O

What _ _ O
is _ _ O
discrete _ _ O
mathematics _ _ O
? _ _ O
n _ _ O
Discrete _ _ O
mathematics _ _ O
is _ _ O
the _ _ O
study _ _ O
of _ _ O
distinct _ _ O
objects _ _ O
or _ _ O
structures _ _ O
and _ _ O
their _ _ O
relationships _ _ O
to _ _ O
one _ _ O
another _ _ O
n _ _ O
For _ _ O
example _ _ O
: _ _ O
l _ _ O
How _ _ O
many _ _ O
ways _ _ O
can _ _ O
a _ _ O
valid _ _ O
password _ _ O
be _ _ O
chosen _ _ O
? _ _ O
l _ _ O
Can _ _ O
traffic _ _ O
flow _ _ O
between _ _ O
two _ _ O
computers _ _ O
in _ _ O
a _ _ O
network _ _ O
? _ _ O
l _ _ O
How _ _ O
can _ _ O
we _ _ O
transform _ _ O
messages _ _ O
to _ _ O
hide _ _ O
their _ _ O
contents _ _ O
? _ _ O
l _ _ O
How _ _ O
do _ _ O
we _ _ O
parse _ _ O
a _ _ O
given _ _ O
sequence _ _ O
of _ _ O
commands _ _ O
? _ _ O
n _ _ O
By _ _ O
contrast _ _ O
, _ _ O
continuous _ _ O
mathematics _ _ O
( _ _ O
e.g. _ _ O
, _ _ O
calculus _ _ O
) _ _ O
studies _ _ O
objects _ _ O
and _ _ O
relationships _ _ O
that _ _ O
vary _ _ O
continuously _ _ O
l _ _ O
e.g. _ _ O
, _ _ O
position _ _ O
, _ _ O
velocity _ _ O
, _ _ O
and _ _ O
acceleration _ _ O
of _ _ O
a _ _ O
projectile _ _ O

Why _ _ O
study _ _ O
discrete _ _ O
math _ _ O
? _ _ O
Reason _ _ O
1 _ _ O
: _ _ O
Computers _ _ O
do _ _ O
not _ _ O
process _ _ O
continuous _ _ O
data _ _ O
Sampling _ _ O
and _ _ O
discretization _ _ O
Analog _ _ O
( _ _ O
continuous _ _ O
) _ _ O
input _ _ O
Digital _ _ O
( _ _ O
discrete _ _ O
) _ _ O
output _ _ O

Why _ _ O
study _ _ O
discrete _ _ O
math _ _ O
? _ _ O
Reason _ _ O
2 _ _ O
: _ _ O
Computers _ _ O
are _ _ O
n’t _ _ O
actually _ _ O
all _ _ O
that _ _ O
smart _ _ O
, _ _ O
they _ _ O
are _ _ O
just _ _ O
deterministic _ _ O
functions _ _ O
that _ _ O
map _ _ O
discrete _ _ O
inputs _ _ O
to _ _ O
discrete _ _ O
outputs _ _ O
Example _ _ O
: _ _ O
Does _ _ O
a _ _ O
given _ _ O
string _ _ O
contain _ _ O
an _ _ O
odd _ _ O
number _ _ O
of _ _ O
1s _ _ O
? _ _ O
1 _ _ O
Read _ _ O
0 _ _ O
No _ _ O
0 _ _ O
1 _ _ O
1 _ _ O
1 _ _ O
0 _ _ O
1 _ _ O
0 _ _ O
1 _ _ O
… _ _ O
Yes _ _ O
1 _ _ O
0 _ _ O

Why _ _ O
study _ _ O
discrete _ _ O
math _ _ O
? _ _ O
In _ _ O
general _ _ O
: _ _ O
Discrete _ _ O
mathematics _ _ O
allows _ _ O
us _ _ O
to _ _ O
better _ _ O
understand _ _ O
computers _ _ O
and _ _ O
algorithms _ _ O
function _ _ O
fib _ _ O
( _ _ O
int _ _ O
n _ _ O
) _ _ O
if _ _ O
( _ _ O
n _ _ O
= _ _ O
= _ _ O
0 _ _ O
|| _ _ O
n _ _ O
= _ _ O
= _ _ O
1 _ _ O
) _ _ O
return _ _ O
1 _ _ O
; _ _ O
else _ _ O
return _ _ O
fib _ _ O
( _ _ O
n-1 _ _ O
) _ _ O
+ _ _ O
fib _ _ O
( _ _ O
n-2 _ _ O
) _ _ O
; _ _ O
function _ _ O
fib _ _ O
( _ _ O
int _ _ O
n _ _ O
) _ _ O
int _ _ O
first _ _ O
= _ _ O
0 _ _ O
; _ _ O
int _ _ O
second _ _ O
= _ _ O
1 _ _ O
; _ _ O
int _ _ O
tmp _ _ O
; _ _ O
for _ _ O
( _ _ O
i _ _ O
= _ _ O
1 _ _ O
to _ _ O
n _ _ O
) _ _ O
tmp _ _ O
= _ _ O
first _ _ O
+ _ _ O
second _ _ O
; _ _ O
first _ _ O
= _ _ O
second _ _ O
; _ _ O
second _ _ O
= _ _ O
tmp _ _ O
; _ _ O
end _ _ O
for _ _ O
return _ _ O
first _ _ O
; _ _ O

Tentative _ _ O
Syllabus _ _ O
n _ _ O
Logic _ _ O
and _ _ O
proofs _ _ O
n _ _ O
Sets _ _ O
n _ _ O
Functions _ _ O
n _ _ O
Integers _ _ O
and _ _ O
modular _ _ O
arithmetic _ _ O
n _ _ O
Counting _ _ O
n _ _ O
Probability _ _ O
and _ _ O
expectation _ _ O
n _ _ O
Relations _ _ O
Are _ _ O
these _ _ O
topics _ _ O
really _ _ O
useful _ _ O
? _ _ O

Logic _ _ O
and _ _ O
proofs _ _ O
grant _ _ O
( _ _ O
X _ _ O
, _ _ O
projector _ _ O
) _ _ O
: _ _ O
- _ _ O
role _ _ O
( _ _ O
X _ _ O
, _ _ O
presenter _ _ O
) _ _ O
, _ _ O
located _ _ O
( _ _ O
X _ _ O
, _ _ O
104 _ _ O
) _ _ O
located _ _ O
( _ _ O
adam _ _ O
, _ _ O
104 _ _ O
) _ _ O
role _ _ O
( _ _ O
adam _ _ O
, _ _ O
presenter _ _ O
) _ _ O
= _ _ O
> _ _ O
? _ _ O
grant _ _ O
( _ _ O
adam _ _ O
, _ _ O
projector _ _ O
) _ _ O
= _ _ O
> _ _ O
true _ _ O
Automated _ _ O
reasoning _ _ O
, _ _ O
AI _ _ O
, _ _ O
security _ _ O
exp _ _ O
( _ _ O
) _ _ O
+ _ _ O
* _ _ O
Verifying _ _ O
data _ _ O
structures _ _ O
and _ _ O
hardware _ _ O
3 _ _ O
3.1415 _ _ O
4 _ _ O
2 _ _ O
Parsing _ _ O
expressions _ _ O
function _ _ O
fib _ _ O
( _ _ O
int _ _ O
n _ _ O
) _ _ O
int _ _ O
first _ _ O
= _ _ O
0 _ _ O
; _ _ O
int _ _ O
second _ _ O
= _ _ O
1 _ _ O
; _ _ O
int _ _ O
tmp _ _ O
; _ _ O
for _ _ O
( _ _ O
i _ _ O
= _ _ O
1 _ _ O
to _ _ O
n _ _ O
) _ _ O
tmp _ _ O
= _ _ O
first _ _ O
+ _ _ O
second _ _ O
; _ _ O
first _ _ O
= _ _ O
second _ _ O
; _ _ O
second _ _ O
= _ _ O
tmp _ _ O
; _ _ O
end _ _ O
for _ _ O
return _ _ O
first _ _ O
; _ _ O
Algorithm _ _ O
and _ _ O
protocol _ _ O
analysis _ _ O

Sets _ _ O
… _ _ O
and _ _ O
give _ _ O
us _ _ O
a _ _ O
means _ _ O
of _ _ O
reasoning _ _ O
about _ _ O
the _ _ O
relationships _ _ O
between _ _ O
objects _ _ O
Sets _ _ O
define _ _ O
collections _ _ O
of _ _ O
objects _ _ O
… _ _ O

Functions _ _ O
Hardware _ _ O
design _ _ O
Theory _ _ O
of _ _ O
computation _ _ O
Computer _ _ O
graphics _ _ O

Integers _ _ O
and _ _ O
Modular _ _ O
Arithmetic _ _ O
ATTACK _ _ O
AT _ _ O
DAWN _ _ O
0111 _ _ O
0101 _ _ O
0110 _ _ O
1011 _ _ O
+ _ _ O
0101 _ _ O
1001 _ _ O
1110 _ _ O
0001 _ _ O
1100 _ _ O
1111 _ _ O
0100 _ _ O
1100 _ _ O
Binary _ _ O
arithmetic _ _ O
and _ _ O
bitwise _ _ O
operations _ _ O
01 _ _ O
20 _ _ O
20 _ _ O
01 _ _ O
03 _ _ O
11 _ _ O
01 _ _ O
20 _ _ O
04 _ _ O
01 _ _ O
23 _ _ O
14 _ _ O
C _ _ O
= _ _ O
P+ _ _ O
6 _ _ O
( _ _ O
mod _ _ O
26 _ _ O
) _ _ O
06 _ _ O
25 _ _ O
25 _ _ O
06 _ _ O
09 _ _ O
16 _ _ O
06 _ _ O
26 _ _ O
10 _ _ O
06 _ _ O
03 _ _ O
20 _ _ O
FYYFIPFZJFCU _ _ O
Cryptography _ _ O

Counting _ _ O
How _ _ O
many _ _ O
valid _ _ O
passwords _ _ O
exist _ _ O
for _ _ O
a _ _ O
given _ _ O
set _ _ O
of _ _ O
rules _ _ O
? _ _ O
How _ _ O
many _ _ O
IP _ _ O
addresses _ _ O
can _ _ O
be _ _ O
assigned _ _ O
within _ _ O
a _ _ O
network _ _ O
segment _ _ O
? _ _ O
Will _ _ O
we _ _ O
run _ _ O
out _ _ O
? _ _ O

Probability _ _ O
and _ _ O
Expectation _ _ O
Spam _ _ O
classification _ _ O
Hardware _ _ O
, _ _ O
software _ _ O
, _ _ O
and _ _ O
network _ _ O
simulation _ _ O
Risk _ _ O
assessment _ _ O

Relations _ _ O
Name _ _ O
Age _ _ O
Phone _ _ O
Alice _ _ O
19 _ _ O
555 _ _ O
- _ _ O
1234 _ _ O
Danielle _ _ O
33 _ _ O
555 _ _ O
- _ _ O
5353 _ _ O
Zach _ _ O
27 _ _ O
555 _ _ O
- _ _ O
3217 _ _ O
Charlie _ _ O
21 _ _ O
555 _ _ O
- _ _ O
2335 _ _ O
Relational _ _ O
databases _ _ O
Route _ _ O
planning _ _ O
DHTs _ _ O
, _ _ O
DNS _ _ O
, _ _ O
name _ _ O
services _ _ O

Syllabus _ _ O
, _ _ O
redux _ _ O
n _ _ O
Logic _ _ O
and _ _ O
proofs _ _ O
n _ _ O
Sets _ _ O
n _ _ O
Functions _ _ O
n _ _ O
Integers _ _ O
and _ _ O
modular _ _ O
arithmetic _ _ O
n _ _ O
Counting _ _ O
n _ _ O
Probability _ _ O
and _ _ O
expectation _ _ O
n _ _ O
Relations _ _ O
Are _ _ O
these _ _ O
topics _ _ O
really _ _ O
useful _ _ O
? _ _ O
Yes _ _ O

Mastering _ _ O
discrete _ _ O
mathematics _ _ O
requires _ _ O
practice _ _ O
! _ _ O
n _ _ O
Succeeding _ _ O
in _ _ O
this _ _ O
class _ _ O
requires _ _ O
practicing _ _ O
the _ _ O
skills _ _ O
that _ _ O
we _ _ O
will _ _ O
acquire _ _ O
, _ _ O
thinking _ _ O
critically _ _ O
, _ _ O
and _ _ O
asking _ _ O
questions _ _ O
n _ _ O
Keys _ _ O
to _ _ O
success _ _ O
: _ _ O
l _ _ O
Attend _ _ O
class _ _ O
and _ _ O
take _ _ O
notes _ _ O
l _ _ O
Do _ _ O
your _ _ O
homework _ _ O
l _ _ O
Work _ _ O
extra _ _ O
problems _ _ O
when _ _ O
you _ _ O
’re _ _ O
unsure _ _ O
➣ _ _ O
Solutions _ _ O
to _ _ O
odd-numbered _ _ O
exercises _ _ O
provided _ _ O
in _ _ O
textbook _ _ O
l _ _ O
Go _ _ O
to _ _ O
your _ _ O
recitation _ _ O
every _ _ O
week _ _ O
l _ _ O
Take _ _ O
advantage _ _ O
of _ _ O
office _ _ O
hours _ _ O

Final _ _ O
thoughts _ _ O
n _ _ O
Our _ _ O
goal _ _ O
is _ _ O
to _ _ O
prepare _ _ O
you _ _ O
to _ _ O
be _ _ O
stronger _ _ O
computer _ _ O
scientists _ _ O
by _ _ O
: _ _ O
l _ _ O
Exploring _ _ O
the _ _ O
formal _ _ O
underpinnings _ _ O
of _ _ O
computer _ _ O
science _ _ O
l _ _ O
Developing _ _ O
critical _ _ O
thinking _ _ O
skills _ _ O
l _ _ O
Articulating _ _ O
ties _ _ O
between _ _ O
theory _ _ O
and _ _ O
practice _ _ O
n _ _ O
Next _ _ O
: _ _ O
Propositional _ _ O
logic _ _ O



