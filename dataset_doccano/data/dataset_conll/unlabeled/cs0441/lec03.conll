unlabeled|cs0441|lec03
-DOCSTART- -X- -X- O

Discrete _ _ O
Structures _ _ O
for _ _ O
Computer _ _ O
Science _ _ O
William _ _ O
Garrison _ _ O
bill@cs.pitt.edu _ _ O
6311 _ _ O
Sennott _ _ O
Square _ _ O
Lecture _ _ O
# _ _ O
3 _ _ O
: _ _ O
Logic _ _ O
Puzzles _ _ O
and _ _ O
Propositional _ _ O
Equivalence _ _ O
Based _ _ O
on _ _ O
materials _ _ O
developed _ _ O
by _ _ O
Dr. _ _ O
Adam _ _ O
Lee _ _ O

Today _ _ O
’s _ _ O
topics _ _ O
n _ _ O
Logic _ _ O
puzzles _ _ O
n _ _ O
Propositional _ _ O
equivalences _ _ O

A _ _ O
technical _ _ O
support _ _ O
conundrum _ _ O
Alice _ _ O
and _ _ O
Bob _ _ O
are _ _ O
technical _ _ O
support _ _ O
agents _ _ O
. _ _ O
If _ _ O
an _ _ O
agent _ _ O
is _ _ O
having _ _ O
a _ _ O
bad _ _ O
day _ _ O
, _ _ O
he _ _ O
or _ _ O
she _ _ O
will _ _ O
always _ _ O
lie _ _ O
to _ _ O
you _ _ O
. _ _ O
If _ _ O
an _ _ O
agent _ _ O
is _ _ O
having _ _ O
a _ _ O
good _ _ O
day _ _ O
, _ _ O
he _ _ O
or _ _ O
she _ _ O
will _ _ O
always _ _ O
tell _ _ O
you _ _ O
the _ _ O
truth _ _ O
. _ _ O
Alice _ _ O
tells _ _ O
you _ _ O
that _ _ O
Bob _ _ O
is _ _ O
having _ _ O
a _ _ O
bad _ _ O
day _ _ O
. _ _ O
Bob _ _ O
tells _ _ O
you _ _ O
that _ _ O
he _ _ O
and _ _ O
Alice _ _ O
are _ _ O
both _ _ O
having _ _ O
the _ _ O
same _ _ O
type _ _ O
of _ _ O
day _ _ O
. _ _ O
Can _ _ O
you _ _ O
trust _ _ O
the _ _ O
advice _ _ O
you _ _ O
receive _ _ O
from _ _ O
Alice _ _ O
during _ _ O
your _ _ O
call _ _ O
? _ _ O

Solving _ _ O
logic _ _ O
puzzles _ _ O
is _ _ O
easy _ _ O
! _ _ O
Step _ _ O
1 _ _ O
: _ _ O
Identify _ _ O
rules _ _ O
and _ _ O
constraints _ _ O
Step _ _ O
2 _ _ O
: _ _ O
Assign _ _ O
propositions _ _ O
to _ _ O
key _ _ O
concepts _ _ O
Step _ _ O
3 _ _ O
: _ _ O
Make _ _ O
assumptions _ _ O
and _ _ O
reason _ _ O
logically _ _ O
! _ _ O

Technical _ _ O
support _ _ O
revisited _ _ O
Alice _ _ O
and _ _ O
Bob _ _ O
are _ _ O
technical _ _ O
support _ _ O
agents _ _ O
. _ _ O
If _ _ O
an _ _ O
agent _ _ O
is _ _ O
having _ _ O
a _ _ O
bad _ _ O
day _ _ O
, _ _ O
he _ _ O
or _ _ O
she _ _ O
will _ _ O
always _ _ O
lie _ _ O
to _ _ O
you _ _ O
. _ _ O
If _ _ O
an _ _ O
agent _ _ O
is _ _ O
having _ _ O
a _ _ O
good _ _ O
day _ _ O
, _ _ O
he _ _ O
or _ _ O
she _ _ O
will _ _ O
always _ _ O
tell _ _ O
you _ _ O
the _ _ O
truth _ _ O
. _ _ O
Alice _ _ O
tells _ _ O
you _ _ O
that _ _ O
Bob _ _ O
is _ _ O
having _ _ O
a _ _ O
bad _ _ O
day _ _ O
. _ _ O
Bob _ _ O
tells _ _ O
you _ _ O
that _ _ O
he _ _ O
and _ _ O
Alice _ _ O
are _ _ O
both _ _ O
having _ _ O
the _ _ O
same _ _ O
type _ _ O
of _ _ O
day _ _ O
. _ _ O
Can _ _ O
you _ _ O
trust _ _ O
the _ _ O
advice _ _ O
you _ _ O
receive _ _ O
from _ _ O
Alice _ _ O
during _ _ O
your _ _ O
call _ _ O
? _ _ O
Step _ _ O
1 _ _ O
: _ _ O
Identify _ _ O
the _ _ O
rules _ _ O
of _ _ O
the _ _ O
puzzle _ _ O
l _ _ O
Good _ _ O
day _ _ O
= _ _ O
tell _ _ O
the _ _ O
truth _ _ O
l _ _ O
Bad _ _ O
day _ _ O
= _ _ O
lie _ _ O
! _ _ O
Step _ _ O
2 _ _ O
: _ _ O
Assign _ _ O
propositions _ _ O
to _ _ O
the _ _ O
key _ _ O
concepts _ _ O
in _ _ O
the _ _ O
puzzle _ _ O
l _ _ O
a _ _ O
º _ _ O
“ _ _ O
Alice _ _ O
is _ _ O
having _ _ O
a _ _ O
good _ _ O
day _ _ O
” _ _ O
l _ _ O
b _ _ O
º _ _ O
“ _ _ O
Bob _ _ O
is _ _ O
having _ _ O
a _ _ O
good _ _ O
day _ _ O
” _ _ O

Step _ _ O
3 _ _ O
: _ _ O
Make _ _ O
assumptions _ _ O
and _ _ O
reason _ _ O
logically _ _ O

Another _ _ O
example _ _ O
Consider _ _ O
a _ _ O
group _ _ O
of _ _ O
friends _ _ O
: _ _ O
Frank _ _ O
, _ _ O
Anna _ _ O
, _ _ O
and _ _ O
Chris _ _ O
. _ _ O
If _ _ O
Frank _ _ O
is _ _ O
not _ _ O
the _ _ O
oldest _ _ O
, _ _ O
then _ _ O
Anna _ _ O
is _ _ O
. _ _ O
If _ _ O
Anna _ _ O
is _ _ O
not _ _ O
the _ _ O
youngest _ _ O
, _ _ O
then _ _ O
Chris _ _ O
is _ _ O
the _ _ O
oldest _ _ O
. _ _ O
Determine _ _ O
the _ _ O
relative _ _ O
ages _ _ O
of _ _ O
Frank _ _ O
, _ _ O
Anna _ _ O
, _ _ O
and _ _ O
Chris _ _ O
. _ _ O
Propositions _ _ O
: _ _ O
l _ _ O
l _ _ O
l _ _ O
l _ _ O
f _ _ O
= _ _ O
“ _ _ O
Frank _ _ O
is _ _ O
the _ _ O
oldest _ _ O
” _ _ O
a _ _ O
= _ _ O
“ _ _ O
Anna _ _ O
is _ _ O
the _ _ O
oldest _ _ O
” _ _ O
a _ _ O
’ _ _ O
= _ _ O
“ _ _ O
Anna _ _ O
is _ _ O
the _ _ O
youngest _ _ O
” _ _ O
c _ _ O
= _ _ O
“ _ _ O
Chris _ _ O
is _ _ O
the _ _ O
oldest _ _ O
” _ _ O
Rules _ _ O
: _ _ O
1 _ _ O
. _ _ O
¬f _ _ O
® _ _ O
a _ _ O
2 _ _ O
. _ _ O
¬a _ _ O
’ _ _ O
® _ _ O
c _ _ O

Step _ _ O
3 _ _ O
: _ _ O
Make _ _ O
assumptions _ _ O
and _ _ O
reason _ _ O
logically _ _ O

Sometimes _ _ O
no _ _ O
solution _ _ O
is _ _ O
a _ _ O
solution _ _ O
! _ _ O
Alice _ _ O
and _ _ O
Bob _ _ O
are _ _ O
technical _ _ O
support _ _ O
agents _ _ O
. _ _ O
Alice _ _ O
says _ _ O
“ _ _ O
I _ _ O
am _ _ O
having _ _ O
a _ _ O
good _ _ O
day _ _ O
. _ _ O
” _ _ O
Bob _ _ O
says _ _ O
“ _ _ O
I _ _ O
am _ _ O
having _ _ O
a _ _ O
good _ _ O
day _ _ O
. _ _ O
” _ _ O
Can _ _ O
you _ _ O
trust _ _ O
either _ _ O
Alice _ _ O
or _ _ O
Bob _ _ O
? _ _ O
Step _ _ O
1 _ _ O
: _ _ O
Identify _ _ O
rules _ _ O
l _ _ O
Good _ _ O
day _ _ O
= _ _ O
tell _ _ O
the _ _ O
truth _ _ O
l _ _ O
Bad _ _ O
day _ _ O
= _ _ O
lie _ _ O
Step _ _ O
2 _ _ O
: _ _ O
Assign _ _ O
propositions _ _ O
l _ _ O
a _ _ O
= _ _ O
Alice _ _ O
is _ _ O
having _ _ O
a _ _ O
good _ _ O
day _ _ O
l _ _ O
b _ _ O
= _ _ O
Bob _ _ O
is _ _ O
having _ _ O
a _ _ O
good _ _ O
day _ _ O

Step _ _ O
3 _ _ O
: _ _ O
Make _ _ O
assumptions _ _ O
and _ _ O
reason _ _ O
logically _ _ O

In-class _ _ O
exercises _ _ O
Problem _ _ O
1 _ _ O
: _ _ O
Alice _ _ O
and _ _ O
Bob _ _ O
are _ _ O
technical _ _ O
support _ _ O
agents _ _ O
working _ _ O
to _ _ O
fix _ _ O
your _ _ O
computer _ _ O
. _ _ O
Alice _ _ O
tells _ _ O
you _ _ O
that _ _ O
Bob _ _ O
is _ _ O
having _ _ O
a _ _ O
bad _ _ O
day _ _ O
today _ _ O
and _ _ O
that _ _ O
you _ _ O
should _ _ O
expect _ _ O
a _ _ O
long _ _ O
wait _ _ O
before _ _ O
your _ _ O
computer _ _ O
is _ _ O
fixed _ _ O
. _ _ O
Bob _ _ O
tells _ _ O
you _ _ O
not _ _ O
to _ _ O
worry _ _ O
, _ _ O
Alice _ _ O
is _ _ O
just _ _ O
having _ _ O
a _ _ O
bad _ _ O
day—your _ _ O
computer _ _ O
will _ _ O
be _ _ O
ready _ _ O
in _ _ O
no _ _ O
time _ _ O
. _ _ O
Question _ _ O
: _ _ O
Can _ _ O
you _ _ O
draw _ _ O
any _ _ O
conclusions _ _ O
about _ _ O
when _ _ O
your _ _ O
computer _ _ O
will _ _ O
be _ _ O
fixed _ _ O
? _ _ O
If _ _ O
so _ _ O
, _ _ O
what _ _ O
can _ _ O
you _ _ O
learn _ _ O
? _ _ O

Propositional _ _ O
equivalences _ _ O
: _ _ O
preliminaries _ _ O
Definition _ _ O
: _ _ O
A _ _ O
tautology _ _ O
is _ _ O
a _ _ O
compound _ _ O
proposition _ _ O
that _ _ O
is _ _ O
always _ _ O
true _ _ O
, _ _ O
regardless _ _ O
of _ _ O
the _ _ O
truth _ _ O
values _ _ O
of _ _ O
the _ _ O
propositions _ _ O
occurring _ _ O
within _ _ O
it _ _ O
. _ _ O
Definition _ _ O
: _ _ O
A _ _ O
contradiction _ _ O
is _ _ O
a _ _ O
compound _ _ O
proposition _ _ O
that _ _ O
is _ _ O
always _ _ O
false _ _ O
, _ _ O
regardless _ _ O
of _ _ O
the _ _ O
truth _ _ O
values _ _ O
of _ _ O
the _ _ O
propositions _ _ O
occurring _ _ O
within _ _ O
it _ _ O
. _ _ O
Definition _ _ O
: _ _ O
A _ _ O
contingency _ _ O
is _ _ O
a _ _ O
compound _ _ O
proposition _ _ O
whose _ _ O
truth _ _ O
value _ _ O
is _ _ O
dependent _ _ O
on _ _ O
the _ _ O
propositions _ _ O
occurring _ _ O
within _ _ O
it _ _ O
. _ _ O

Examples _ _ O
Are _ _ O
the _ _ O
following _ _ O
compound _ _ O
propositions _ _ O
tautologies _ _ O
, _ _ O
contradictions _ _ O
, _ _ O
or _ _ O
contingencies _ _ O
? _ _ O
p _ _ O
¬p _ _ O
p _ _ O
Ú _ _ O
¬p _ _ O
n _ _ O
p _ _ O
Ú _ _ O
¬p _ _ O
tautology _ _ O
n _ _ O
¬p _ _ O
Ù _ _ O
p _ _ O
contradiction _ _ O
npÚq _ _ O
contingency _ _ O
T _ _ O
F _ _ O
T _ _ O
F _ _ O
T _ _ O
T _ _ O
p _ _ O
¬p _ _ O
p _ _ O
Ù _ _ O
¬p _ _ O
T _ _ O
F _ _ O
F _ _ O
F _ _ O
T _ _ O
F _ _ O
p _ _ O
q _ _ O
pÚq _ _ O
T _ _ O
T _ _ O
T _ _ O
T _ _ O
F _ _ O
T _ _ O
F _ _ O
T _ _ O
T _ _ O
F _ _ O
F _ _ O
F _ _ O

What _ _ O
are _ _ O
logical _ _ O
equivalences _ _ O
and _ _ O
why _ _ O
are _ _ O
they _ _ O
useful _ _ O
? _ _ O
Definition _ _ O
: _ _ O
Compound _ _ O
propositions _ _ O
p _ _ O
and _ _ O
q _ _ O
are _ _ O
logically _ _ O
equivalent _ _ O
if _ _ O
p _ _ O
« _ _ O
q _ _ O
is _ _ O
a _ _ O
tautology _ _ O
. _ _ O
The _ _ O
notation _ _ O
p _ _ O
º _ _ O
q _ _ O
means _ _ O
that _ _ O
p _ _ O
and _ _ O
q _ _ O
are _ _ O
logically _ _ O
equivalent _ _ O
. _ _ O
Logical _ _ O
equivalences _ _ O
are _ _ O
extremely _ _ O
useful _ _ O
! _ _ O
l _ _ O
Aid _ _ O
in _ _ O
the _ _ O
construction _ _ O
of _ _ O
proofs _ _ O
l _ _ O
Allow _ _ O
us _ _ O
to _ _ O
simplify _ _ O
compound _ _ O
propositions _ _ O
Example _ _ O
: _ _ O
p _ _ O
® _ _ O
q _ _ O
º _ _ O
¬p _ _ O
Ú _ _ O
q _ _ O
How _ _ O
do _ _ O
we _ _ O
prove _ _ O
this _ _ O
type _ _ O
of _ _ O
statement _ _ O
? _ _ O

It _ _ O
is _ _ O
easy _ _ O
to _ _ O
prove _ _ O
propositional _ _ O
equivalences _ _ O
We _ _ O
can _ _ O
prove _ _ O
simple _ _ O
logical _ _ O
equivalences _ _ O
using _ _ O
our _ _ O
good _ _ O
friend _ _ O
the _ _ O
truth _ _ O
table _ _ O
! _ _ O
Prove _ _ O
: _ _ O
p _ _ O
® _ _ O
q _ _ O
º _ _ O
¬p _ _ O
Ú _ _ O
q _ _ O
p _ _ O
q _ _ O
¬p _ _ O
¬p _ _ O
Ú _ _ O
q _ _ O
p®q _ _ O
T _ _ O
T _ _ O
F _ _ O
T _ _ O
T _ _ O
T _ _ O
F _ _ O
F _ _ O
F _ _ O
F _ _ O
F _ _ O
T _ _ O
T _ _ O
T _ _ O
T _ _ O
F _ _ O
F _ _ O
T _ _ O
T _ _ O
T _ _ O

DeMorgan _ _ O
’s _ _ O
laws _ _ O
allow _ _ O
us _ _ O
to _ _ O
distribute _ _ O
negation _ _ O
over _ _ O
compound _ _ O
propositions _ _ O
If _ _ O
“ _ _ O
p _ _ O
or _ _ O
q _ _ O
” _ _ O
is _ _ O
n’t _ _ O
true _ _ O
, _ _ O
then _ _ O
neither _ _ O
p _ _ O
nor _ _ O
q _ _ O
is _ _ O
true _ _ O
Two _ _ O
laws _ _ O
: _ _ O
l _ _ O
¬ _ _ O
( _ _ O
p _ _ O
Ú _ _ O
q _ _ O
) _ _ O
º _ _ O
¬p _ _ O
Ù _ _ O
¬q _ _ O
l _ _ O
¬ _ _ O
( _ _ O
p _ _ O
Ù _ _ O
q _ _ O
) _ _ O
º _ _ O
¬p _ _ O
Ú _ _ O
¬q _ _ O
If _ _ O
“ _ _ O
p _ _ O
and _ _ O
q _ _ O
” _ _ O
is _ _ O
n’t _ _ O
true _ _ O
, _ _ O
then _ _ O
at _ _ O
least _ _ O
one _ _ O
of _ _ O
p _ _ O
or _ _ O
q _ _ O
is _ _ O
false _ _ O
Prove _ _ O
: _ _ O
¬ _ _ O
( _ _ O
p _ _ O
Ú _ _ O
q _ _ O
) _ _ O
º _ _ O
¬p _ _ O
Ù _ _ O
¬q _ _ O
p _ _ O
q _ _ O
pÚq _ _ O
¬ _ _ O
( _ _ O
p _ _ O
Ú _ _ O
q _ _ O
) _ _ O
¬p _ _ O
¬q _ _ O
¬p _ _ O
Ù _ _ O
¬q _ _ O
T _ _ O
T _ _ O
T _ _ O
F _ _ O
F _ _ O
F _ _ O
F _ _ O
T _ _ O
F _ _ O
T _ _ O
F _ _ O
F _ _ O
T _ _ O
F _ _ O
F _ _ O
T _ _ O
T _ _ O
F _ _ O
T _ _ O
F _ _ O
F _ _ O
F _ _ O
F _ _ O
F _ _ O
T _ _ O
T _ _ O
T _ _ O
T _ _ O

Using _ _ O
DeMorgan _ _ O
’s _ _ O
laws _ _ O
Use _ _ O
DeMorgan _ _ O
’s _ _ O
laws _ _ O
to _ _ O
negate _ _ O
the _ _ O
following _ _ O
expressions _ _ O
: _ _ O
n _ _ O
“ _ _ O
Bob _ _ O
is _ _ O
wearing _ _ O
blue _ _ O
pants _ _ O
and _ _ O
a _ _ O
sweatshirt _ _ O
” _ _ O
lb _ _ O
Ù _ _ O
s _ _ O
l _ _ O
¬ _ _ O
( _ _ O
b _ _ O
Ù _ _ O
s _ _ O
) _ _ O
º _ _ O
¬b _ _ O
Ú _ _ O
¬s _ _ O
l _ _ O
Bob _ _ O
is _ _ O
not _ _ O
wearing _ _ O
blue _ _ O
pants _ _ O
or _ _ O
is _ _ O
not _ _ O
wearing _ _ O
a _ _ O
sweatshirt _ _ O
n _ _ O
“ _ _ O
I _ _ O
will _ _ O
drive _ _ O
or _ _ O
I _ _ O
will _ _ O
walk _ _ O
” _ _ O
ld _ _ O
Ú _ _ O
w _ _ O
l _ _ O
¬ _ _ O
( _ _ O
d _ _ O
Ú _ _ O
w _ _ O
) _ _ O
º _ _ O
¬d _ _ O
Ù _ _ O
¬w _ _ O
l _ _ O
I _ _ O
will _ _ O
not _ _ O
drive _ _ O
and _ _ O
I _ _ O
will _ _ O
not _ _ O
walk _ _ O

In-class _ _ O
exercises _ _ O
Problem _ _ O
2 _ _ O
: _ _ O
Prove _ _ O
that _ _ O
¬ _ _ O
( _ _ O
p _ _ O
Ù _ _ O
q _ _ O
) _ _ O
and _ _ O
¬p _ _ O
Ú _ _ O
¬q _ _ O
are _ _ O
logically _ _ O
equivalent _ _ O
, _ _ O
i.e. _ _ O
, _ _ O
¬ _ _ O
( _ _ O
p _ _ O
Ù _ _ O
q _ _ O
) _ _ O
º _ _ O
¬p _ _ O
Ú _ _ O
¬q _ _ O
. _ _ O
This _ _ O
is _ _ O
the _ _ O
second _ _ O
DeMorgan _ _ O
’s _ _ O
law _ _ O
. _ _ O
Problem _ _ O
3 _ _ O
: _ _ O
Use _ _ O
DeMorgan _ _ O
’s _ _ O
laws _ _ O
to _ _ O
negate _ _ O
the _ _ O
following _ _ O
propositions _ _ O
: _ _ O
l _ _ O
Today _ _ O
I _ _ O
will _ _ O
go _ _ O
running _ _ O
or _ _ O
ride _ _ O
my _ _ O
bike _ _ O
l _ _ O
Tom _ _ O
likes _ _ O
both _ _ O
pizza _ _ O
and _ _ O
beer _ _ O

Sometimes _ _ O
using _ _ O
truth _ _ O
tables _ _ O
to _ _ O
prove _ _ O
logical _ _ O
equivalencies _ _ O
can _ _ O
become _ _ O
cumbersome _ _ O
Recall _ _ O
that _ _ O
for _ _ O
an _ _ O
equivalence _ _ O
with _ _ O
n _ _ O
propositions _ _ O
, _ _ O
we _ _ O
need _ _ O
to _ _ O
build _ _ O
a _ _ O
truth _ _ O
table _ _ O
with _ _ O
2n _ _ O
rows _ _ O
l _ _ O
Fine _ _ O
for _ _ O
tables _ _ O
with _ _ O
n _ _ O
= _ _ O
2 _ _ O
, _ _ O
3 _ _ O
, _ _ O
or _ _ O
4 _ _ O
l _ _ O
Consider _ _ O
n _ _ O
= _ _ O
30—we _ _ O
would _ _ O
need _ _ O
1 _ _ O
, _ _ O
073 _ _ O
, _ _ O
741 _ _ O
, _ _ O
824 _ _ O
rows _ _ O
in _ _ O
the _ _ O
truth _ _ O
table _ _ O
! _ _ O
Another _ _ O
option _ _ O
: _ _ O
Direct _ _ O
manipulation _ _ O
of _ _ O
compound _ _ O
propositions _ _ O
using _ _ O
known _ _ O
logical _ _ O
equivalencies _ _ O

There _ _ O
are _ _ O
many _ _ O
useful _ _ O
logical _ _ O
equivalences _ _ O
Equivalence _ _ O
Name _ _ O
pÙTºp _ _ O
pÚFºp _ _ O
Identity _ _ O
laws _ _ O
pÙFºF _ _ O
pÚTºT _ _ O
Domination _ _ O
laws _ _ O
pÙpºp _ _ O
pÚpºp _ _ O
Idempotent _ _ O
laws _ _ O
¬ _ _ O
( _ _ O
¬p _ _ O
) _ _ O
º _ _ O
p _ _ O
Double _ _ O
negation _ _ O
law _ _ O
pÚqºqÚp _ _ O
pÙqºqÙp _ _ O
Commutative _ _ O
laws _ _ O

More _ _ O
useful _ _ O
logical _ _ O
equivalences _ _ O
Equivalence _ _ O
Name _ _ O
( _ _ O
p _ _ O
Ù _ _ O
q _ _ O
) _ _ O
Ù _ _ O
r _ _ O
º _ _ O
p _ _ O
Ù _ _ O
( _ _ O
q _ _ O
Ù _ _ O
r _ _ O
) _ _ O
( _ _ O
p _ _ O
Ú _ _ O
q _ _ O
) _ _ O
Ú _ _ O
r _ _ O
º _ _ O
p _ _ O
Ú _ _ O
( _ _ O
q _ _ O
Ú _ _ O
r _ _ O
) _ _ O
Associative _ _ O
laws _ _ O
p _ _ O
Ù _ _ O
( _ _ O
q _ _ O
Ú _ _ O
r _ _ O
) _ _ O
º _ _ O
( _ _ O
p _ _ O
Ù _ _ O
q _ _ O
) _ _ O
Ú _ _ O
( _ _ O
p _ _ O
Ù _ _ O
r _ _ O
) _ _ O
p _ _ O
Ú _ _ O
( _ _ O
q _ _ O
Ù _ _ O
r _ _ O
) _ _ O
º _ _ O
( _ _ O
p _ _ O
Ú _ _ O
q _ _ O
) _ _ O
Ù _ _ O
( _ _ O
p _ _ O
Ú _ _ O
r _ _ O
) _ _ O
Distributive _ _ O
laws _ _ O
¬ _ _ O
( _ _ O
p _ _ O
Ú _ _ O
q _ _ O
) _ _ O
º _ _ O
¬p _ _ O
Ù _ _ O
¬q _ _ O
¬ _ _ O
( _ _ O
p _ _ O
Ù _ _ O
q _ _ O
) _ _ O
º _ _ O
¬p _ _ O
Ú _ _ O
¬q _ _ O
DeMorgan _ _ O
’s _ _ O
laws _ _ O
p _ _ O
Ú _ _ O
( _ _ O
p _ _ O
Ù _ _ O
q _ _ O
) _ _ O
º _ _ O
p _ _ O
p _ _ O
Ù _ _ O
( _ _ O
p _ _ O
Ú _ _ O
q _ _ O
) _ _ O
º _ _ O
p _ _ O
Absorption _ _ O
laws _ _ O
p _ _ O
Ú _ _ O
¬p _ _ O
º _ _ O
T _ _ O
p _ _ O
Ù _ _ O
¬p _ _ O
º _ _ O
F _ _ O
Negation _ _ O
laws _ _ O
More _ _ O
equivalencies _ _ O
in _ _ O
the _ _ O
book _ _ O
! _ _ O

Prove _ _ O
that _ _ O
( _ _ O
p _ _ O
Ù _ _ O
q _ _ O
) _ _ O
® _ _ O
( _ _ O
p _ _ O
Ú _ _ O
q _ _ O
) _ _ O
is _ _ O
a _ _ O
tautology _ _ O

Prove _ _ O
: _ _ O
( _ _ O
p _ _ O
® _ _ O
q _ _ O
) _ _ O
Ú _ _ O
( _ _ O
p _ _ O
® _ _ O
r _ _ O
) _ _ O
º _ _ O
p _ _ O
® _ _ O
( _ _ O
q _ _ O
Ú _ _ O
r _ _ O
) _ _ O

Final _ _ O
Thoughts _ _ O
n _ _ O
Logic _ _ O
can _ _ O
help _ _ O
us _ _ O
solve _ _ O
real _ _ O
world _ _ O
problems _ _ O
and _ _ O
play _ _ O
challenging _ _ O
games _ _ O
n _ _ O
Logical _ _ O
equivalences _ _ O
help _ _ O
us _ _ O
simplify _ _ O
complex _ _ O
propositions _ _ O
and _ _ O
construct _ _ O
proofs _ _ O
l _ _ O
More _ _ O
on _ _ O
proofs _ _ O
later _ _ O
in _ _ O
the _ _ O
course _ _ O
n _ _ O
Next _ _ O
: _ _ O
l _ _ O
Predicate _ _ O
logic _ _ O
and _ _ O
quantification _ _ O
l _ _ O
Please _ _ O
read _ _ O
section _ _ O
1.4 _ _ O



