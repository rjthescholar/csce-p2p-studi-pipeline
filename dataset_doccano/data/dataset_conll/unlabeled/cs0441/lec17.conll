unlabeled|cs0441|lec17
-DOCSTART- -X- -X- O

Discrete _ _ O
Structures _ _ O
for _ _ O
Computer _ _ O
Science _ _ O
William _ _ O
Garrison _ _ O
bill@cs.pitt.edu _ _ O
6311 _ _ O
Sennott _ _ O
Square _ _ O
Lecture _ _ O
# _ _ O
17 _ _ O
: _ _ O
Inclusion _ _ O
/ _ _ O
Exclusion _ _ O
, _ _ O
Pigeonhole _ _ O
Principle _ _ O
Based _ _ O
on _ _ O
materials _ _ O
developed _ _ O
by _ _ O
Dr. _ _ O
Adam _ _ O
Lee _ _ O

Today _ _ O
’s _ _ O
Topics _ _ O
n _ _ O
Inclusion _ _ O
/ _ _ O
exclusion _ _ O
principle _ _ O
n _ _ O
The _ _ O
pigeonhole _ _ O
principle _ _ O

Sometimes _ _ O
when _ _ O
counting _ _ O
a _ _ O
set _ _ O
, _ _ O
we _ _ O
count _ _ O
the _ _ O
same _ _ O
item _ _ O
more _ _ O
than _ _ O
once _ _ O
For _ _ O
instance _ _ O
, _ _ O
if _ _ O
something _ _ O
can _ _ O
be _ _ O
done _ _ O
n1 _ _ O
ways _ _ O
or _ _ O
n2 _ _ O
ways _ _ O
, _ _ O
but _ _ O
some _ _ O
of _ _ O
the _ _ O
n1 _ _ O
ways _ _ O
are _ _ O
the _ _ O
same _ _ O
as _ _ O
some _ _ O
of _ _ O
the _ _ O
n2 _ _ O
ways _ _ O
. _ _ O
In _ _ O
this _ _ O
case _ _ O
n1 _ _ O
+ _ _ O
n2 _ _ O
is _ _ O
an _ _ O
overcount _ _ O
of _ _ O
the _ _ O
ways _ _ O
to _ _ O
complete _ _ O
the _ _ O
task _ _ O
! _ _ O
What _ _ O
we _ _ O
really _ _ O
want _ _ O
to _ _ O
do _ _ O
is _ _ O
count _ _ O
the _ _ O
n1 _ _ O
+ _ _ O
n2 _ _ O
ways _ _ O
to _ _ O
complete _ _ O
the _ _ O
task _ _ O
and _ _ O
then _ _ O
subtract _ _ O
out _ _ O
the _ _ O
common _ _ O
solutions _ _ O
. _ _ O
This _ _ O
is _ _ O
called _ _ O
the _ _ O
inclusion _ _ O
/ _ _ O
exclusion _ _ O
principle _ _ O
. _ _ O

We _ _ O
can _ _ O
formulate _ _ O
this _ _ O
concept _ _ O
using _ _ O
set _ _ O
theory _ _ O
Suppose _ _ O
that _ _ O
a _ _ O
task _ _ O
T _ _ O
can _ _ O
be _ _ O
completed _ _ O
using _ _ O
a _ _ O
solution _ _ O
drawn _ _ O
from _ _ O
one _ _ O
of _ _ O
two _ _ O
classes _ _ O
: _ _ O
A1 _ _ O
and _ _ O
A2 _ _ O
As _ _ O
in _ _ O
the _ _ O
sum _ _ O
rule _ _ O
, _ _ O
we _ _ O
can _ _ O
define _ _ O
the _ _ O
solution _ _ O
set _ _ O
for _ _ O
the _ _ O
task _ _ O
T _ _ O
as _ _ O
S _ _ O
= _ _ O
A1 _ _ O
∪ _ _ O
A2 _ _ O
Then _ _ O
|S| _ _ O
= _ _ O
|A1 _ _ O
∪ _ _ O
A2| _ _ O
= _ _ O
|A1| _ _ O
+ _ _ O
|A2| _ _ O
- _ _ O
|A1 _ _ O
∩ _ _ O
A2| _ _ O
A1 _ _ O
Do _ _ O
you _ _ O
remember _ _ O
this _ _ O
from _ _ O
earlier _ _ O
this _ _ O
semester _ _ O
? _ _ O
A2 _ _ O

Counting _ _ O
Bit _ _ O
Strings _ _ O
Example _ _ O
: _ _ O
How _ _ O
many _ _ O
bit _ _ O
strings _ _ O
of _ _ O
length _ _ O
8 _ _ O
start _ _ O
with _ _ O
a _ _ O
1 _ _ O
or _ _ O
end _ _ O
with _ _ O
00 _ _ O
? _ _ O
Solution _ _ O
: _ _ O
l _ _ O
27 _ _ O
= _ _ O
128 _ _ O
8-bit _ _ O
strings _ _ O
start _ _ O
with _ _ O
a _ _ O
1 _ _ O
l _ _ O
26 _ _ O
= _ _ O
64 _ _ O
8-bit _ _ O
strings _ _ O
end _ _ O
with _ _ O
00 _ _ O
l _ _ O
25 _ _ O
= _ _ O
32 _ _ O
8-bit _ _ O
strings _ _ O
start _ _ O
with _ _ O
a _ _ O
1 _ _ O
and _ _ O
end _ _ O
with _ _ O
00 _ _ O
So _ _ O
, _ _ O
we _ _ O
have _ _ O
128 _ _ O
+ _ _ O
64 _ _ O
– _ _ O
32 _ _ O
= _ _ O
160 _ _ O
ways _ _ O
to _ _ O
construct _ _ O
an _ _ O
8-bit _ _ O
string _ _ O
that _ _ O
starts _ _ O
with _ _ O
a _ _ O
1 _ _ O
or _ _ O
ends _ _ O
with _ _ O
00 _ _ O
. _ _ O

Job _ _ O
Applications _ _ O
Example _ _ O
: _ _ O
A _ _ O
company _ _ O
receives _ _ O
350 _ _ O
applications _ _ O
. _ _ O
Suppose _ _ O
220 _ _ O
of _ _ O
these _ _ O
people _ _ O
majored _ _ O
in _ _ O
CS _ _ O
, _ _ O
147 _ _ O
majored _ _ O
in _ _ O
business _ _ O
, _ _ O
and _ _ O
51 _ _ O
were _ _ O
CS _ _ O
/ _ _ O
business _ _ O
double-majors _ _ O
. _ _ O
How _ _ O
many _ _ O
applicants _ _ O
majored _ _ O
in _ _ O
neither _ _ O
CS _ _ O
nor _ _ O
business _ _ O
? _ _ O
Solution _ _ O
: _ _ O
l _ _ O
Let _ _ O
C _ _ O
be _ _ O
the _ _ O
set _ _ O
of _ _ O
CS _ _ O
majors _ _ O
, _ _ O
B _ _ O
be _ _ O
the _ _ O
set _ _ O
of _ _ O
business _ _ O
majors _ _ O
l _ _ O
|C _ _ O
∪ _ _ O
B| _ _ O
= _ _ O
|C| _ _ O
+ _ _ O
|B| _ _ O
- _ _ O
|C _ _ O
∩ _ _ O
B| _ _ O
l _ _ O
= _ _ O
220 _ _ O
+ _ _ O
147 _ _ O
– _ _ O
51 _ _ O
l _ _ O
= _ _ O
316 _ _ O
So _ _ O
of _ _ O
the _ _ O
350 _ _ O
applications _ _ O
, _ _ O
350 _ _ O
– _ _ O
316 _ _ O
= _ _ O
34 _ _ O
applications _ _ O
neither _ _ O
majored _ _ O
in _ _ O
CS _ _ O
nor _ _ O
business _ _ O
. _ _ O

The _ _ O
pigeonhole _ _ O
principle _ _ O
is _ _ O
an _ _ O
incredibly _ _ O
simple _ _ O
concept _ _ O
that _ _ O
is _ _ O
extremely _ _ O
useful _ _ O
! _ _ O
The _ _ O
pigeonhole _ _ O
principle _ _ O
: _ _ O
If _ _ O
k _ _ O
is _ _ O
a _ _ O
positive _ _ O
integer _ _ O
and _ _ O
k+1 _ _ O
objects _ _ O
are _ _ O
placed _ _ O
in _ _ O
k _ _ O
boxes _ _ O
, _ _ O
then _ _ O
at _ _ O
least _ _ O
one _ _ O
box _ _ O
contains _ _ O
at _ _ O
least _ _ O
two _ _ O
objects _ _ O
. _ _ O
Example _ _ O
: _ _ O
k _ _ O
= _ _ O
4 _ _ O

The _ _ O
pigeonhole _ _ O
principle _ _ O
is _ _ O
also _ _ O
easy _ _ O
to _ _ O
prove _ _ O
The _ _ O
pigeonhole _ _ O
principle _ _ O
: _ _ O
If _ _ O
k _ _ O
is _ _ O
a _ _ O
positive _ _ O
integer _ _ O
and _ _ O
k+1 _ _ O
objects _ _ O
are _ _ O
placed _ _ O
in _ _ O
k _ _ O
boxes _ _ O
, _ _ O
then _ _ O
at _ _ O
least _ _ O
one _ _ O
box _ _ O
contains _ _ O
at _ _ O
least _ _ O
two _ _ O
objects _ _ O
. _ _ O
Proof _ _ O
: _ _ O
Assume _ _ O
that _ _ O
each _ _ O
of _ _ O
the _ _ O
k _ _ O
boxes _ _ O
contains _ _ O
at _ _ O
most _ _ O
1 _ _ O
item _ _ O
. _ _ O
This _ _ O
means _ _ O
that _ _ O
there _ _ O
are _ _ O
at _ _ O
most _ _ O
k _ _ O
items _ _ O
, _ _ O
which _ _ O
is _ _ O
a _ _ O
contradiction _ _ O
of _ _ O
our _ _ O
assumption _ _ O
that _ _ O
we _ _ O
have _ _ O
k+1 _ _ O
items _ _ O
, _ _ O
so _ _ O
at _ _ O
least _ _ O
one _ _ O
box _ _ O
must _ _ O
contain _ _ O
more _ _ O
than _ _ O
one _ _ O
item _ _ O
. _ _ O
❏ _ _ O

Examples _ _ O
Example _ _ O
: _ _ O
Among _ _ O
any _ _ O
group _ _ O
of _ _ O
367 _ _ O
people _ _ O
there _ _ O
are _ _ O
at _ _ O
least _ _ O
two _ _ O
with _ _ O
the _ _ O
same _ _ O
birthday _ _ O
, _ _ O
since _ _ O
there _ _ O
are _ _ O
only _ _ O
366 _ _ O
possible _ _ O
birthdays _ _ O
. _ _ O
Example _ _ O
: _ _ O
Among _ _ O
any _ _ O
27 _ _ O
English _ _ O
words _ _ O
, _ _ O
at _ _ O
least _ _ O
two _ _ O
will _ _ O
start _ _ O
with _ _ O
the _ _ O
same _ _ O
letter _ _ O
. _ _ O

The _ _ O
pigeonhole _ _ O
principle _ _ O
can _ _ O
be _ _ O
used _ _ O
to _ _ O
prove _ _ O
a _ _ O
number _ _ O
of _ _ O
interesting _ _ O
results _ _ O
Claim _ _ O
: _ _ O
Every _ _ O
integer _ _ O
n _ _ O
has _ _ O
a _ _ O
multiple _ _ O
whose _ _ O
decimal _ _ O
representation _ _ O
contains _ _ O
only _ _ O
1s _ _ O
and _ _ O
0s _ _ O
Proof _ _ O
: _ _ O
This _ _ O
number _ _ O
has _ _ O
n+1 _ _ O
ones _ _ O
l _ _ O
Let _ _ O
n _ _ O
be _ _ O
a _ _ O
positive _ _ O
integer _ _ O
l _ _ O
Consider _ _ O
the _ _ O
set _ _ O
of _ _ O
n+1 _ _ O
integers _ _ O
S _ _ O
= _ _ O
{ _ _ O
1 _ _ O
, _ _ O
11 _ _ O
, _ _ O
111 _ _ O
, _ _ O
… _ _ O
, _ _ O
111…1 _ _ O
} _ _ O
l _ _ O
Note _ _ O
that _ _ O
when _ _ O
any _ _ O
integer _ _ O
x _ _ O
is _ _ O
divided _ _ O
by _ _ O
n _ _ O
, _ _ O
there _ _ O
are _ _ O
n _ _ O
possible _ _ O
remainders _ _ O
( _ _ O
0 _ _ O
through _ _ O
n-1 _ _ O
) _ _ O
l _ _ O
Since _ _ O
S _ _ O
contains _ _ O
n+1 _ _ O
elements _ _ O
, _ _ O
at _ _ O
least _ _ O
two _ _ O
elements _ _ O
of _ _ O
S _ _ O
have _ _ O
the _ _ O
same _ _ O
remainder _ _ O
when _ _ O
divided _ _ O
by _ _ O
n _ _ O
( _ _ O
call _ _ O
them _ _ O
x _ _ O
and _ _ O
y _ _ O
, _ _ O
with _ _ O
x _ _ O
> _ _ O
y _ _ O
) _ _ O
l _ _ O
Since _ _ O
x _ _ O
≡ _ _ O
y _ _ O
( _ _ O
mod _ _ O
n _ _ O
) _ _ O
, _ _ O
n _ _ O
| _ _ O
( _ _ O
x _ _ O
– _ _ O
y _ _ O
) _ _ O
, _ _ O
and _ _ O
thus _ _ O
na _ _ O
= _ _ O
( _ _ O
x _ _ O
– _ _ O
y _ _ O
) _ _ O
l _ _ O
Finally _ _ O
, _ _ O
we _ _ O
note _ _ O
that _ _ O
x _ _ O
– _ _ O
y _ _ O
contains _ _ O
only _ _ O
0s _ _ O
and _ _ O
1s _ _ O
❏ _ _ O

In-class _ _ O
exercises _ _ O
Top _ _ O
Hat _ _ O

There _ _ O
is _ _ O
a _ _ O
more _ _ O
general _ _ O
form _ _ O
of _ _ O
the _ _ O
pigeonhole _ _ O
principle _ _ O
that _ _ O
is _ _ O
even _ _ O
more _ _ O
useful _ _ O
The _ _ O
generalized _ _ O
pigeonhole _ _ O
principle _ _ O
: _ _ O
If _ _ O
N _ _ O
objects _ _ O
are _ _ O
placed _ _ O
into _ _ O
k _ _ O
boxes _ _ O
, _ _ O
then _ _ O
there _ _ O
is _ _ O
at _ _ O
least _ _ O
one _ _ O
box _ _ O
containing _ _ O
at _ _ O
least _ _ O
⌈N _ _ O
/ _ _ O
k⌉ _ _ O
items _ _ O
. _ _ O
Proof _ _ O
: _ _ O
l _ _ O
Assume _ _ O
that _ _ O
no _ _ O
box _ _ O
contains _ _ O
more _ _ O
than _ _ O
⌈N _ _ O
/ _ _ O
k⌉ _ _ O
- _ _ O
1 _ _ O
objects _ _ O
l _ _ O
Note _ _ O
that _ _ O
⌈N _ _ O
/ _ _ O
k⌉ _ _ O
< _ _ O
( _ _ O
N _ _ O
/ _ _ O
k _ _ O
) _ _ O
+ _ _ O
1 _ _ O
l _ _ O
So _ _ O
, _ _ O
k _ _ O
( _ _ O
⌈N _ _ O
/ _ _ O
k⌉ _ _ O
- _ _ O
1 _ _ O
) _ _ O
< _ _ O
k _ _ O
( _ _ O
( _ _ O
N _ _ O
/ _ _ O
k _ _ O
+ _ _ O
1 _ _ O
) _ _ O
– _ _ O
1 _ _ O
) _ _ O
= _ _ O
N _ _ O
l _ _ O
This _ _ O
contradicts _ _ O
our _ _ O
assumption _ _ O
that _ _ O
we _ _ O
had _ _ O
N _ _ O
objects _ _ O
❏ _ _ O

Example _ _ O
What _ _ O
is _ _ O
the _ _ O
minimum _ _ O
number _ _ O
of _ _ O
students _ _ O
needed _ _ O
to _ _ O
guarantee _ _ O
that _ _ O
at _ _ O
least _ _ O
six _ _ O
students _ _ O
receive _ _ O
the _ _ O
same _ _ O
grade _ _ O
, _ _ O
if _ _ O
possible _ _ O
grades _ _ O
are _ _ O
A _ _ O
, _ _ O
B _ _ O
, _ _ O
C _ _ O
, _ _ O
D _ _ O
, _ _ O
and _ _ O
F _ _ O
? _ _ O
Solution _ _ O
: _ _ O
l _ _ O
Need _ _ O
the _ _ O
smallest _ _ O
integer _ _ O
N _ _ O
such _ _ O
that _ _ O
⌈N _ _ O
/ _ _ O
5⌉ _ _ O
= _ _ O
6 _ _ O
l _ _ O
With _ _ O
25 _ _ O
students _ _ O
, _ _ O
it _ _ O
would _ _ O
be _ _ O
possible _ _ O
( _ _ O
though _ _ O
maybe _ _ O
unlikely _ _ O
) _ _ O
to _ _ O
have _ _ O
5 _ _ O
students _ _ O
get _ _ O
each _ _ O
possible _ _ O
grade _ _ O
l _ _ O
By _ _ O
adding _ _ O
a _ _ O
26th _ _ O
student _ _ O
, _ _ O
we _ _ O
guarantee _ _ O
that _ _ O
at _ _ O
least _ _ O
6 _ _ O
students _ _ O
get _ _ O
one _ _ O
possible _ _ O
grade _ _ O
l _ _ O
So _ _ O
, _ _ O
the _ _ O
smallest _ _ O
such _ _ O
N _ _ O
is _ _ O
5 _ _ O
× _ _ O
5 _ _ O
+ _ _ O
1 _ _ O
= _ _ O
26 _ _ O
❏ _ _ O

From _ _ O
the _ _ O
casino _ _ O
… _ _ O
How _ _ O
many _ _ O
cards _ _ O
must _ _ O
be _ _ O
drawn _ _ O
from _ _ O
a _ _ O
standard _ _ O
52card _ _ O
deck _ _ O
to _ _ O
guarantee _ _ O
that _ _ O
three _ _ O
cards _ _ O
of _ _ O
the _ _ O
same _ _ O
suit _ _ O
are _ _ O
drawn _ _ O
? _ _ O
Solution _ _ O
: _ _ O
l _ _ O
Let _ _ O
’s _ _ O
make _ _ O
4 _ _ O
piles _ _ O
: _ _ O
one _ _ O
for _ _ O
each _ _ O
suit _ _ O
l _ _ O
We _ _ O
want _ _ O
to _ _ O
have _ _ O
⌈N _ _ O
/ _ _ O
4⌉ _ _ O
≥ _ _ O
3 _ _ O
l _ _ O
We _ _ O
can _ _ O
do _ _ O
this _ _ O
using _ _ O
4 _ _ O
× _ _ O
2 _ _ O
+ _ _ O
1 _ _ O
= _ _ O
9 _ _ O
cards _ _ O
Note _ _ O
: _ _ O
We _ _ O
do _ _ O
n’t _ _ O
need _ _ O
9 _ _ O
cards _ _ O
to _ _ O
end _ _ O
up _ _ O
with _ _ O
three _ _ O
from _ _ O
the _ _ O
same _ _ O
suit—if _ _ O
we _ _ O
did _ _ O
, _ _ O
we _ _ O
could _ _ O
never _ _ O
get _ _ O
a _ _ O
flush _ _ O
in _ _ O
poker _ _ O
! _ _ O

We _ _ O
ca _ _ O
n’t _ _ O
always _ _ O
use _ _ O
the _ _ O
pigeonhole _ _ O
principle _ _ O
directly _ _ O
How _ _ O
many _ _ O
cards _ _ O
would _ _ O
we _ _ O
need _ _ O
to _ _ O
draw _ _ O
to _ _ O
ensure _ _ O
that _ _ O
we _ _ O
picked _ _ O
at _ _ O
least _ _ O
three _ _ O
hearts _ _ O
? _ _ O
In _ _ O
the _ _ O
worst _ _ O
case _ _ O
, _ _ O
we _ _ O
would _ _ O
need _ _ O
to _ _ O
draw _ _ O
every _ _ O
club _ _ O
, _ _ O
spade _ _ O
, _ _ O
and _ _ O
diamond _ _ O
before _ _ O
getting _ _ O
three _ _ O
hearts _ _ O
… _ _ O
So _ _ O
, _ _ O
to _ _ O
guarantee _ _ O
three _ _ O
hearts _ _ O
, _ _ O
we _ _ O
need _ _ O
to _ _ O
draw _ _ O
3 _ _ O
× _ _ O
13 _ _ O
+ _ _ O
3 _ _ O
= _ _ O
42 _ _ O
cards _ _ O
! _ _ O

Ma _ _ O
Bell _ _ O
… _ _ O
What _ _ O
is _ _ O
the _ _ O
least _ _ O
number _ _ O
of _ _ O
area _ _ O
codes _ _ O
needed _ _ O
to _ _ O
guarantee _ _ O
that _ _ O
the _ _ O
25 _ _ O
million _ _ O
phones _ _ O
in _ _ O
some _ _ O
state _ _ O
can _ _ O
be _ _ O
assigned _ _ O
distinct _ _ O
10-digit _ _ O
phone _ _ O
numbers _ _ O
of _ _ O
the _ _ O
form _ _ O
NXX-NXX-XXXX _ _ O
? _ _ O
Solution _ _ O
: _ _ O
l _ _ O
The _ _ O
product _ _ O
rule _ _ O
tells _ _ O
us _ _ O
that _ _ O
there _ _ O
are _ _ O
8 _ _ O
million _ _ O
phone _ _ O
numbers _ _ O
of _ _ O
the _ _ O
form _ _ O
NXX-XXXX _ _ O
l _ _ O
Think _ _ O
of _ _ O
phones _ _ O
as _ _ O
objects _ _ O
and _ _ O
phone _ _ O
numbers _ _ O
as _ _ O
boxes _ _ O
l _ _ O
By _ _ O
the _ _ O
generalized _ _ O
pigeonhole _ _ O
principle _ _ O
, _ _ O
we _ _ O
know _ _ O
that _ _ O
some _ _ O
“ _ _ O
box _ _ O
” _ _ O
contains _ _ O
at _ _ O
least _ _ O
⌈25 _ _ O
, _ _ O
000 _ _ O
, _ _ O
000 _ _ O
/ _ _ O
8 _ _ O
, _ _ O
000 _ _ O
, _ _ O
000⌉ _ _ O
= _ _ O
4 _ _ O
“ _ _ O
objects _ _ O
” _ _ O
l _ _ O
This _ _ O
means _ _ O
that _ _ O
we _ _ O
need _ _ O
4 _ _ O
area _ _ O
codes _ _ O
to _ _ O
ensure _ _ O
that _ _ O
each _ _ O
phone _ _ O
gets _ _ O
a _ _ O
unique _ _ O
10-digit _ _ O
number _ _ O
❏ _ _ O

This _ _ O
has _ _ O
been _ _ O
easy _ _ O
so _ _ O
far _ _ O
, _ _ O
right _ _ O
? _ _ O
Unfortunately _ _ O
, _ _ O
life _ _ O
is _ _ O
n’t _ _ O
always _ _ O
easy _ _ O
! _ _ O
Sometimes _ _ O
, _ _ O
we _ _ O
need _ _ O
to _ _ O
be _ _ O
clever _ _ O
when _ _ O
we _ _ O
are _ _ O
defining _ _ O
our _ _ O
“ _ _ O
boxes _ _ O
” _ _ O
or _ _ O
assigning _ _ O
objects _ _ O
to _ _ O
them _ _ O
For _ _ O
example _ _ O
… _ _ O

Sports _ _ O
! _ _ O
During _ _ O
a _ _ O
month _ _ O
with _ _ O
30 _ _ O
days _ _ O
, _ _ O
a _ _ O
baseball _ _ O
team _ _ O
plays _ _ O
at _ _ O
least _ _ O
one _ _ O
game _ _ O
per _ _ O
day _ _ O
, _ _ O
but _ _ O
no _ _ O
more _ _ O
than _ _ O
45 _ _ O
games _ _ O
total _ _ O
. _ _ O
Show _ _ O
that _ _ O
there _ _ O
must _ _ O
be _ _ O
some _ _ O
period _ _ O
of _ _ O
consecutive _ _ O
days _ _ O
in _ _ O
which _ _ O
exactly _ _ O
14 _ _ O
games _ _ O
are _ _ O
played _ _ O
. _ _ O
Solution _ _ O
: _ _ O
l _ _ O
Let _ _ O
aj _ _ O
be _ _ O
the _ _ O
number _ _ O
of _ _ O
games _ _ O
played _ _ O
on _ _ O
or _ _ O
before _ _ O
the _ _ O
jth _ _ O
day _ _ O
of _ _ O
the _ _ O
month _ _ O
. _ _ O
Note _ _ O
that _ _ O
the _ _ O
sequence _ _ O
{ _ _ O
aj _ _ O
} _ _ O
is _ _ O
strictly _ _ O
increasing _ _ O
. _ _ O
l _ _ O
Note _ _ O
also _ _ O
that _ _ O
{ _ _ O
aj _ _ O
+ _ _ O
14 _ _ O
} _ _ O
is _ _ O
also _ _ O
an _ _ O
increasing _ _ O
sequence _ _ O
l _ _ O
Now _ _ O
, _ _ O
consider _ _ O
a1 _ _ O
, _ _ O
a2 _ _ O
, _ _ O
… _ _ O
, _ _ O
a30 _ _ O
, _ _ O
a1 _ _ O
+ _ _ O
14 _ _ O
, _ _ O
a2 _ _ O
+ _ _ O
14 _ _ O
, _ _ O
… _ _ O
, _ _ O
a30 _ _ O
+ _ _ O
14 _ _ O
l _ _ O
There _ _ O
are _ _ O
60 _ _ O
terms _ _ O
in _ _ O
this _ _ O
sequence _ _ O
, _ _ O
all _ _ O
≤ _ _ O
( _ _ O
45 _ _ O
+ _ _ O
14 _ _ O
) _ _ O
= _ _ O
59 _ _ O
l _ _ O
By _ _ O
the _ _ O
pigeonhole _ _ O
principle _ _ O
, _ _ O
at _ _ O
least _ _ O
two _ _ O
terms _ _ O
are _ _ O
equal _ _ O
l _ _ O
Note _ _ O
: _ _ O
Each _ _ O
aj _ _ O
for _ _ O
j _ _ O
= _ _ O
1 _ _ O
, _ _ O
2 _ _ O
, _ _ O
… _ _ O
, _ _ O
30 _ _ O
is _ _ O
distinct _ _ O
, _ _ O
as _ _ O
is _ _ O
each _ _ O
aj _ _ O
+ _ _ O
14 _ _ O
l _ _ O
This _ _ O
means _ _ O
there _ _ O
exists _ _ O
some _ _ O
ai _ _ O
that _ _ O
is _ _ O
equal _ _ O
to _ _ O
some _ _ O
aj _ _ O
+ _ _ O
14 _ _ O
, _ _ O
so _ _ O
14 _ _ O
games _ _ O
were _ _ O
played _ _ O
from _ _ O
day _ _ O
j _ _ O
+ _ _ O
1 _ _ O
to _ _ O
day _ _ O
i _ _ O
❏ _ _ O

Number _ _ O
theory _ _ O
Show _ _ O
that _ _ O
among _ _ O
any _ _ O
n+1 _ _ O
positive _ _ O
integers _ _ O
not _ _ O
exceeding _ _ O
2n _ _ O
, _ _ O
there _ _ O
must _ _ O
be _ _ O
an _ _ O
integer _ _ O
that _ _ O
divides _ _ O
one _ _ O
of _ _ O
the _ _ O
other _ _ O
integers _ _ O
. _ _ O
Proof _ _ O
: _ _ O
l _ _ O
Call _ _ O
our _ _ O
𝑛 _ _ O
+ _ _ O
1 _ _ O
positive _ _ O
integers _ _ O
𝑎 _ _ O
! _ _ O
, _ _ O
𝑎 _ _ O
" _ _ O
, _ _ O
… _ _ O
, _ _ O
𝑎#$ _ _ O
! _ _ O
l _ _ O
Write _ _ O
each _ _ O
𝑎% _ _ O
as _ _ O
2 _ _ O
& _ _ O
! _ _ O
𝑞% _ _ O
, _ _ O
where _ _ O
𝑞% _ _ O
is _ _ O
an _ _ O
odd _ _ O
positive _ _ O
integer _ _ O
and _ _ O
𝑘% _ _ O
is _ _ O
non-negative _ _ O
( _ _ O
i.e. _ _ O
, _ _ O
𝑘% _ _ O
might _ _ O
be _ _ O
zero _ _ O
) _ _ O
l _ _ O
Note _ _ O
that _ _ O
there _ _ O
are _ _ O
𝑛 _ _ O
odd _ _ O
positive _ _ O
integers _ _ O
less _ _ O
than _ _ O
2𝑛 _ _ O
l _ _ O
By _ _ O
the _ _ O
pigeonhole _ _ O
principle _ _ O
, _ _ O
at _ _ O
least _ _ O
two _ _ O
of _ _ O
𝑞 _ _ O
! _ _ O
, _ _ O
𝑞 _ _ O
" _ _ O
, _ _ O
… _ _ O
, _ _ O
𝑞#$ _ _ O
! _ _ O
must _ _ O
be _ _ O
equal _ _ O
l _ _ O
This _ _ O
means _ _ O
we _ _ O
have _ _ O
some _ _ O
𝑎% _ _ O
= _ _ O
2 _ _ O
& _ _ O
! _ _ O
𝑞% _ _ O
and _ _ O
some _ _ O
𝑎 _ _ O
' _ _ O
= _ _ O
2 _ _ O
& _ _ O
" _ _ O
𝑞% _ _ O
l _ _ O
If _ _ O
𝑘% _ _ O
< _ _ O
𝑘 _ _ O
' _ _ O
, _ _ O
then _ _ O
𝑎% _ _ O
∣ _ _ O
𝑎 _ _ O
' _ _ O
. _ _ O
If _ _ O
𝑘% _ _ O
> _ _ O
𝑘 _ _ O
' _ _ O
, _ _ O
then _ _ O
𝑎 _ _ O
' _ _ O
∣ _ _ O
𝑎% _ _ O
❏ _ _ O

In-class _ _ O
exercises _ _ O
Problem _ _ O
4 _ _ O
: _ _ O
Top _ _ O
Hat _ _ O
Problem _ _ O
5 _ _ O
: _ _ O
A _ _ O
drawer _ _ O
contains _ _ O
a _ _ O
dozen _ _ O
brown _ _ O
socks _ _ O
and _ _ O
a _ _ O
dozen _ _ O
black _ _ O
socks _ _ O
, _ _ O
all _ _ O
unmatched _ _ O
. _ _ O
How _ _ O
many _ _ O
socks _ _ O
must _ _ O
be _ _ O
drawn _ _ O
to _ _ O
find _ _ O
a _ _ O
matching _ _ O
pair _ _ O
? _ _ O
How _ _ O
many _ _ O
socks _ _ O
must _ _ O
be _ _ O
drawn _ _ O
to _ _ O
find _ _ O
a _ _ O
pair _ _ O
of _ _ O
black _ _ O
socks _ _ O
? _ _ O
Problem _ _ O
6 _ _ O
: _ _ O
Let _ _ O
A _ _ O
be _ _ O
some _ _ O
subset _ _ O
of _ _ O
{ _ _ O
1 _ _ O
, _ _ O
2 _ _ O
, _ _ O
… _ _ O
, _ _ O
50 _ _ O
} _ _ O
where _ _ O
|A|=10 _ _ O
. _ _ O
Show _ _ O
that _ _ O
there _ _ O
are _ _ O
at _ _ O
least _ _ O
three _ _ O
subsets _ _ O
of _ _ O
A _ _ O
that _ _ O
have _ _ O
the _ _ O
same _ _ O
sum _ _ O
. _ _ O
( _ _ O
This _ _ O
question _ _ O
appeared _ _ O
on _ _ O
a _ _ O
previous _ _ O
final _ _ O
exam _ _ O
. _ _ O
) _ _ O

Final _ _ O
Thoughts _ _ O
n _ _ O
The _ _ O
inclusion _ _ O
/ _ _ O
exclusion _ _ O
principle _ _ O
is _ _ O
useful _ _ O
when _ _ O
we _ _ O
need _ _ O
to _ _ O
avoid _ _ O
overcounting _ _ O
n _ _ O
The _ _ O
pigeonhole _ _ O
principle _ _ O
and _ _ O
its _ _ O
generalized _ _ O
form _ _ O
are _ _ O
useful _ _ O
for _ _ O
solving _ _ O
many _ _ O
types _ _ O
of _ _ O
counting _ _ O
problems _ _ O
n _ _ O
Next _ _ O
time _ _ O
: _ _ O
l _ _ O
Permutations _ _ O
and _ _ O
combinations _ _ O
( _ _ O
Section _ _ O
6.3 _ _ O
) _ _ O



