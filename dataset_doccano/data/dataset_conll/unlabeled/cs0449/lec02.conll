unlabeled|cs0449|lec02
-DOCSTART- -X- -X- O

1 _ _ O
Data _ _ O
Representation _ _ O
CS _ _ O
/ _ _ O
COE _ _ O
0449 _ _ O
Introduction _ _ O
to _ _ O
Systems _ _ O
Software _ _ O
Luis _ _ O
Oliveira _ _ O
( _ _ O
with _ _ O
content _ _ O
borrowed _ _ O
from _ _ O
wilkie _ _ O
and _ _ O
Vinicius _ _ O
Petrucci _ _ O
) _ _ O

Binary _ _ O
Encoding _ _ O
i _ _ O
Bits _ _ O
, _ _ O
Bytes _ _ O
, _ _ O
and _ _ O
Nybbles _ _ O
2 _ _ O

Positional _ _ O
number _ _ O
systems _ _ O
• _ _ O
The _ _ O
numbers _ _ O
we _ _ O
use _ _ O
are _ _ O
written _ _ O
positionally _ _ O
: _ _ O
the _ _ O
position _ _ O
of _ _ O
a _ _ O
digit _ _ O
within _ _ O
the _ _ O
number _ _ O
has _ _ O
a _ _ O
meaning _ _ O
. _ _ O
3 _ _ O
2 _ _ O
x _ _ O
10 _ _ O
2000 _ _ O
2 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
x _ _ O
10 _ _ O
= _ _ O
2021= _ _ O
1 _ _ O
2 _ _ O
0 _ _ O
2 _ _ O
x _ _ O
10 _ _ O
0 _ _ O
+ _ _ O
1 _ _ O
1 _ _ O
x _ _ O
10 _ _ O
3 _ _ O

Positional _ _ O
number _ _ O
systems _ _ O
● _ _ O
The _ _ O
numbers _ _ O
we _ _ O
use _ _ O
are _ _ O
written _ _ O
positionally _ _ O
: _ _ O
the _ _ O
position _ _ O
of _ _ O
a _ _ O
digit _ _ O
within _ _ O
the _ _ O
number _ _ O
has _ _ O
a _ _ O
meaning _ _ O
. _ _ O
2021 _ _ O
Most _ _ O
Significant _ _ O
Least _ _ O
Significant _ _ O
1000s _ _ O
100s _ _ O
10s _ _ O
1s _ _ O
103 _ _ O
102 _ _ O
101 _ _ O
100 _ _ O
● _ _ O
How _ _ O
many _ _ O
( _ _ O
digits _ _ O
) _ _ O
symbols _ _ O
do _ _ O
we _ _ O
have _ _ O
in _ _ O
our _ _ O
number _ _ O
system _ _ O
? _ _ O
○ _ _ O
10 _ _ O
: _ _ O
0 _ _ O
, _ _ O
1 _ _ O
, _ _ O
2 _ _ O
, _ _ O
3 _ _ O
, _ _ O
4 _ _ O
, _ _ O
5 _ _ O
, _ _ O
6 _ _ O
, _ _ O
7 _ _ O
, _ _ O
8 _ _ O
, _ _ O
9 _ _ O
4 _ _ O

Range _ _ O
of _ _ O
numbers _ _ O
Suppose _ _ O
we _ _ O
have _ _ O
a _ _ O
4-digit _ _ O
numeric _ _ O
display _ _ O
. _ _ O
• _ _ O
What _ _ O
is _ _ O
the _ _ O
smallest _ _ O
number _ _ O
it _ _ O
can _ _ O
show _ _ O
? _ _ O
• _ _ O
What _ _ O
is _ _ O
the _ _ O
biggest _ _ O
number _ _ O
it _ _ O
can _ _ O
show _ _ O
? _ _ O
• _ _ O
How _ _ O
many _ _ O
different _ _ O
numbers _ _ O
can _ _ O
it _ _ O
show _ _ O
? _ _ O
• _ _ O
9999 _ _ O
- _ _ O
0 _ _ O
+ _ _ O
1 _ _ O
= _ _ O
10 _ _ O
, _ _ O
000 _ _ O
• _ _ O
What _ _ O
power _ _ O
of _ _ O
10 _ _ O
is _ _ O
10 _ _ O
, _ _ O
000 _ _ O
? _ _ O
• _ _ O
104 _ _ O
5 _ _ O

So _ _ O
… _ _ O
with _ _ O
the _ _ O
numbers _ _ O
we _ _ O
use _ _ O
every _ _ O
day _ _ O
… _ _ O
• _ _ O
A _ _ O
number _ _ O
represented _ _ O
by _ _ O
the _ _ O
digits _ _ O
• _ _ O
Has _ _ O
the _ _ O
value _ _ O
𝑑𝑛 _ _ O
𝑑𝑛−1 _ _ O
… _ _ O
𝑑1 _ _ O
𝑑0 _ _ O
𝑑𝑛 _ _ O
× _ _ O
10𝑛 _ _ O
+ _ _ O
𝑑𝑛−1 _ _ O
× _ _ O
10𝑛−1 _ _ O
+ _ _ O
⋯ _ _ O
+ _ _ O
𝑑1 _ _ O
× _ _ O
101 _ _ O
+ _ _ O
𝑑0 _ _ O
× _ _ O
100 _ _ O
• _ _ O
Using _ _ O
𝑛 _ _ O
digits _ _ O
we _ _ O
can _ _ O
represent _ _ O
10𝑛 _ _ O
different _ _ O
numbers _ _ O
• _ _ O
The _ _ O
smallest _ _ O
non-negative _ _ O
number _ _ O
representable _ _ O
with _ _ O
𝑛 _ _ O
digits _ _ O
is _ _ O
0 _ _ O
• _ _ O
The _ _ O
largest _ _ O
number _ _ O
representable _ _ O
with _ _ O
𝑛 _ _ O
digits _ _ O
is _ _ O
10𝑛 _ _ O
− _ _ O
1 _ _ O
• _ _ O
Using _ _ O
10 _ _ O
symbols _ _ O
: _ _ O
0 _ _ O
, _ _ O
1 _ _ O
, _ _ O
2 _ _ O
, _ _ O
3 _ _ O
, _ _ O
4 _ _ O
, _ _ O
5 _ _ O
, _ _ O
6 _ _ O
, _ _ O
7 _ _ O
, _ _ O
8 _ _ O
, _ _ O
9 _ _ O
6 _ _ O

Numeric _ _ O
Bases _ _ O
• _ _ O
These _ _ O
10s _ _ O
keep _ _ O
popping _ _ O
up _ _ O
… _ _ O
and _ _ O
for _ _ O
good _ _ O
reason _ _ O
• _ _ O
We _ _ O
use _ _ O
a _ _ O
base-10 _ _ O
( _ _ O
decimal _ _ O
) _ _ O
numbering _ _ O
system _ _ O
• _ _ O
10 _ _ O
different _ _ O
symbols _ _ O
, _ _ O
and _ _ O
each _ _ O
place _ _ O
is _ _ O
a _ _ O
power _ _ O
of _ _ O
10 _ _ O
• _ _ O
But _ _ O
we _ _ O
can _ _ O
use _ _ O
( _ _ O
almost _ _ O
) _ _ O
any _ _ O
number _ _ O
as _ _ O
a _ _ O
base _ _ O
! _ _ O
• _ _ O
The _ _ O
most _ _ O
common _ _ O
bases _ _ O
when _ _ O
dealing _ _ O
with _ _ O
computers _ _ O
are _ _ O
base-2 _ _ O
( _ _ O
binary _ _ O
) _ _ O
, _ _ O
base-16 _ _ O
( _ _ O
hexadecimal _ _ O
) _ _ O
, _ _ O
and _ _ O
( _ _ O
rarely _ _ O
) _ _ O
base-8 _ _ O
( _ _ O
octal _ _ O
) _ _ O
• _ _ O
When _ _ O
dealing _ _ O
with _ _ O
multiple _ _ O
bases _ _ O
, _ _ O
you _ _ O
can _ _ O
write _ _ O
the _ _ O
base _ _ O
as _ _ O
a _ _ O
subscript _ _ O
to _ _ O
be _ _ O
explicit _ _ O
about _ _ O
it _ _ O
: _ _ O
510 _ _ O
= _ _ O
1012 _ _ O
7 _ _ O

Making _ _ O
a _ _ O
number _ _ O
system _ _ O
Using _ _ O
base _ _ O
B _ _ O
• _ _ O
A _ _ O
number _ _ O
represented _ _ O
by _ _ O
the _ _ O
digits _ _ O
𝑑𝑛 _ _ O
𝑑𝑛−1 _ _ O
… _ _ O
𝑑1 _ _ O
𝑑0 _ _ O
• _ _ O
Has _ _ O
the _ _ O
value _ _ O
𝑑𝑛 _ _ O
× _ _ O
B _ _ O
𝑛 _ _ O
+ _ _ O
𝑑𝑛−1 _ _ O
× _ _ O
B _ _ O
𝑛−1 _ _ O
+ _ _ O
⋯ _ _ O
+ _ _ O
𝑑1 _ _ O
× _ _ O
B1 _ _ O
+ _ _ O
𝑑0 _ _ O
× _ _ O
B _ _ O
0 _ _ O
• _ _ O
Using _ _ O
𝑛 _ _ O
digits _ _ O
we _ _ O
can _ _ O
represent _ _ O
B _ _ O
𝑛 _ _ O
different _ _ O
numbers _ _ O
• _ _ O
The _ _ O
smallest _ _ O
non-negative _ _ O
number _ _ O
representable _ _ O
with _ _ O
𝑛 _ _ O
digits _ _ O
is _ _ O
0 _ _ O
• _ _ O
The _ _ O
largest _ _ O
number _ _ O
representable _ _ O
with _ _ O
𝑛 _ _ O
digits _ _ O
is _ _ O
B _ _ O
𝑛 _ _ O
− _ _ O
1 _ _ O
• _ _ O
Using _ _ O
B _ _ O
symbols _ _ O
If _ _ O
you _ _ O
use _ _ O
base _ _ O
0 _ _ O
you _ _ O
do _ _ O
n’t _ _ O
need _ _ O
to _ _ O
remember _ _ O
8 _ _ O
any _ _ O
symbols _ _ O

Binary _ _ O
– _ _ O
Base _ _ O
2 _ _ O
9 _ _ O

Let _ _ O
's _ _ O
make _ _ O
a _ _ O
base-2 _ _ O
number _ _ O
system _ _ O
Using _ _ O
base _ _ O
2 _ _ O
• _ _ O
A _ _ O
number _ _ O
represented _ _ O
by _ _ O
the _ _ O
digits _ _ O
• _ _ O
Has _ _ O
the _ _ O
value _ _ O
𝑑𝑛 _ _ O
𝑑𝑛−1 _ _ O
… _ _ O
𝑑1 _ _ O
𝑑0 _ _ O
𝑑𝑛 _ _ O
× _ _ O
2𝑛 _ _ O
+ _ _ O
𝑑𝑛−1 _ _ O
× _ _ O
2𝑛−1 _ _ O
+ _ _ O
⋯ _ _ O
+ _ _ O
𝑑1 _ _ O
× _ _ O
21 _ _ O
+ _ _ O
𝑑0 _ _ O
× _ _ O
20 _ _ O
• _ _ O
Using _ _ O
𝑛 _ _ O
digits _ _ O
we _ _ O
can _ _ O
represent _ _ O
2𝑛 _ _ O
different _ _ O
numbers _ _ O
• _ _ O
The _ _ O
smallest _ _ O
non-negative _ _ O
number _ _ O
representable _ _ O
with _ _ O
𝑛 _ _ O
digits _ _ O
is _ _ O
0 _ _ O
• _ _ O
The _ _ O
largest _ _ O
number _ _ O
representable _ _ O
with _ _ O
𝑛 _ _ O
digits _ _ O
is _ _ O
2𝑛 _ _ O
− _ _ O
1 _ _ O
• _ _ O
Using _ _ O
2 _ _ O
symbols _ _ O
: _ _ O
0 _ _ O
, _ _ O
1 _ _ O
10 _ _ O

Binary _ _ O
( _ _ O
base-2 _ _ O
) _ _ O
• _ _ O
We _ _ O
call _ _ O
a _ _ O
Binary _ _ O
digIT _ _ O
a _ _ O
bit _ _ O
– _ _ O
a _ _ O
single _ _ O
1 _ _ O
or _ _ O
0 _ _ O
• _ _ O
When _ _ O
we _ _ O
say _ _ O
an _ _ O
n-bit _ _ O
number _ _ O
, _ _ O
we _ _ O
mean _ _ O
one _ _ O
with _ _ O
n _ _ O
binary _ _ O
digits _ _ O
1 _ _ O
× _ _ O
128 _ _ O
+ _ _ O
MSB _ _ O
LSB _ _ O
1001 _ _ O
0110 _ _ O
= _ _ O
27 _ _ O
2 _ _ O
6 _ _ O
25 _ _ O
24 _ _ O
128s _ _ O
64s _ _ O
32s _ _ O
16s _ _ O
23 _ _ O
8s _ _ O
22 _ _ O
4s _ _ O
21 _ _ O
2s _ _ O
20 _ _ O
1s _ _ O
To _ _ O
convert _ _ O
binary _ _ O
to _ _ O
decimal _ _ O
: _ _ O
ignore _ _ O
0s _ _ O
, _ _ O
add _ _ O
up _ _ O
It _ _ O
’s _ _ O
the _ _ O
place _ _ O
values _ _ O
wherever _ _ O
you _ _ O
see _ _ O
a _ _ O
1 _ _ O
. _ _ O
only _ _ O
odd _ _ O
0 _ _ O
× _ _ O
64 _ _ O
+ _ _ O
0 _ _ O
× _ _ O
32 _ _ O
+ _ _ O
1 _ _ O
× _ _ O
16 _ _ O
+ _ _ O
0×8 _ _ O
+ _ _ O
1×4 _ _ O
+ _ _ O
1×2 _ _ O
+ _ _ O
0×1 _ _ O
= _ _ O
15010 _ _ O
number _ _ O
! _ _ O
11 _ _ O

Converting _ _ O
the _ _ O
other _ _ O
way _ _ O
around _ _ O
• _ _ O
Ok _ _ O
! _ _ O
then _ _ O
. _ _ O
Let _ _ O
’s _ _ O
go _ _ O
back _ _ O
to _ _ O
decimal _ _ O
for _ _ O
a _ _ O
bit _ _ O
2021 _ _ O
How _ _ O
would _ _ O
you _ _ O
extract _ _ O
this _ _ O
number _ _ O
? _ _ O
? _ _ O
? _ _ O
How _ _ O
I _ _ O
like _ _ O
to _ _ O
think _ _ O
of _ _ O
it _ _ O
: _ _ O
When _ _ O
you _ _ O
divide _ _ O
by _ _ O
the _ _ O
BASE _ _ O
you _ _ O
are _ _ O
moving _ _ O
the _ _ O
decimal _ _ O
point _ _ O
in _ _ O
that _ _ O
BASE _ _ O
Just _ _ O
divide _ _ O
by _ _ O
10 _ _ O
! _ _ O
10 _ _ O
10 _ _ O
10 _ _ O
2 _ _ O
R0 _ _ O
20 _ _ O
R2 _ _ O
202 _ _ O
R1 _ _ O
2 _ _ O
0 _ _ O
21 _ _ O
12 _ _ O

What _ _ O
happens _ _ O
when _ _ O
you _ _ O
divide _ _ O
by _ _ O
10 _ _ O
? _ _ O
• _ _ O
Turns _ _ O
out _ _ O
that _ _ O
dividing _ _ O
by _ _ O
10 _ _ O
in _ _ O
any _ _ O
base _ _ O
has _ _ O
the _ _ O
same _ _ O
outcome _ _ O
0b10 _ _ O
210 _ _ O
110012 _ _ O
1 _ _ O
R1 _ _ O
210 _ _ O
210 _ _ O
3 _ _ O
R0 _ _ O
6 _ _ O
210 _ _ O
12 _ _ O
R0 _ _ O
R1 _ _ O
210 _ _ O
25 _ _ O
13 _ _ O

Bits _ _ O
, _ _ O
bytes _ _ O
, _ _ O
nibbles _ _ O
, _ _ O
and _ _ O
words _ _ O
• _ _ O
A _ _ O
bit _ _ O
is _ _ O
one _ _ O
binary _ _ O
digit _ _ O
, _ _ O
and _ _ O
its _ _ O
unit _ _ O
is _ _ O
lowercase _ _ O
b. _ _ O
• _ _ O
A _ _ O
byte _ _ O
is _ _ O
an _ _ O
8-bit _ _ O
value _ _ O
, _ _ O
and _ _ O
its _ _ O
unit _ _ O
is _ _ O
UPPERCASE _ _ O
B. _ _ O
• _ _ O
This _ _ O
is _ _ O
( _ _ O
partially _ _ O
) _ _ O
why _ _ O
your _ _ O
30 _ _ O
megabit _ _ O
( _ _ O
Mbps _ _ O
) _ _ O
internet _ _ O
connection _ _ O
can _ _ O
only _ _ O
give _ _ O
you _ _ O
at _ _ O
most _ _ O
3.57 _ _ O
megabytes _ _ O
( _ _ O
MB _ _ O
) _ _ O
per _ _ O
second _ _ O
! _ _ O
• _ _ O
A _ _ O
nibble _ _ O
( _ _ O
also _ _ O
nybble _ _ O
) _ _ O
is _ _ O
4 _ _ O
bits _ _ O
– _ _ O
half _ _ O
of _ _ O
a _ _ O
byte _ _ O
• _ _ O
Corresponds _ _ O
nicely _ _ O
to _ _ O
a _ _ O
single _ _ O
hex _ _ O
digit _ _ O
. _ _ O
• _ _ O
A _ _ O
word _ _ O
is _ _ O
the _ _ O
" _ _ O
most _ _ O
comfortable _ _ O
size _ _ O
" _ _ O
of _ _ O
number _ _ O
for _ _ O
a _ _ O
CPU _ _ O
. _ _ O
• _ _ O
When _ _ O
we _ _ O
say _ _ O
" _ _ O
32-bit _ _ O
CPU _ _ O
, _ _ O
" _ _ O
we _ _ O
mean _ _ O
its _ _ O
word _ _ O
size _ _ O
is _ _ O
32 _ _ O
bits _ _ O
. _ _ O
• _ _ O
This _ _ O
means _ _ O
it _ _ O
can _ _ O
, _ _ O
for _ _ O
example _ _ O
, _ _ O
add _ _ O
two _ _ O
32-bit _ _ O
numbers _ _ O
at _ _ O
once _ _ O
. _ _ O
• _ _ O
BUT _ _ O
WATCH _ _ O
OUT _ _ O
: _ _ O
• _ _ O
Some _ _ O
things _ _ O
( _ _ O
Windows _ _ O
, _ _ O
x86 _ _ O
) _ _ O
use _ _ O
word _ _ O
to _ _ O
mean _ _ O
16 _ _ O
bits _ _ O
and _ _ O
double _ _ O
word _ _ O
( _ _ O
or _ _ O
dword _ _ O
) _ _ O
to _ _ O
mean _ _ O
32 _ _ O
bits _ _ O
. _ _ O
14 _ _ O

Why _ _ O
binary _ _ O
? _ _ O
Whynary _ _ O
? _ _ O
• _ _ O
Why _ _ O
indeed _ _ O
? _ _ O
0 _ _ O
1 _ _ O
2 _ _ O
3 _ _ O
4 _ _ O
5 _ _ O
6 _ _ O
7 _ _ O
8 _ _ O
9 _ _ O
• _ _ O
What _ _ O
color _ _ O
is _ _ O
this _ _ O
? _ _ O
15 _ _ O

Why _ _ O
binary _ _ O
? _ _ O
Whynary _ _ O
? _ _ O
• _ _ O
Why _ _ O
indeed _ _ O
? _ _ O
0 _ _ O
1 _ _ O
• _ _ O
What _ _ O
color _ _ O
is _ _ O
this _ _ O
? _ _ O
16 _ _ O

Binary _ _ O
Representation _ _ O
• _ _ O
Computers _ _ O
translate _ _ O
electrical _ _ O
signals _ _ O
to _ _ O
either _ _ O
0 _ _ O
or _ _ O
1 _ _ O
. _ _ O
• _ _ O
It _ _ O
is _ _ O
relatively _ _ O
easy _ _ O
to _ _ O
devise _ _ O
electronics _ _ O
that _ _ O
operate _ _ O
this _ _ O
way _ _ O
. _ _ O
• _ _ O
In _ _ O
reality _ _ O
, _ _ O
there _ _ O
is _ _ O
no _ _ O
such _ _ O
thing _ _ O
as _ _ O
“ _ _ O
binary _ _ O
” _ _ O
so _ _ O
we _ _ O
often _ _ O
have _ _ O
to _ _ O
approximate _ _ O
and _ _ O
mitigate _ _ O
error _ _ O
. _ _ O
Oscilloscope _ _ O
visualization _ _ O
of _ _ O
several _ _ O
digital _ _ O
wires _ _ O
. _ _ O
From _ _ O
@computerfact _ _ O
on _ _ O
Twitter _ _ O
. _ _ O
17 _ _ O

Everything _ _ O
in _ _ O
a _ _ O
computer _ _ O
is _ _ O
a _ _ O
number _ _ O
• _ _ O
So _ _ O
, _ _ O
everything _ _ O
on _ _ O
a _ _ O
computer _ _ O
is _ _ O
represented _ _ O
in _ _ O
binary _ _ O
. _ _ O
• _ _ O
everything _ _ O
. _ _ O
01100101 _ _ O
01110110 _ _ O
01100101 _ _ O
01110010 _ _ O
01111001 _ _ O
01110100 _ _ O
01101000 _ _ O
01101001 _ _ O
01101110 _ _ O
01100111 _ _ O
00001010 _ _ O
00000000 _ _ O
• _ _ O
Java _ _ O
strings _ _ O
are _ _ O
encoded _ _ O
using _ _ O
UTF-16 _ _ O
• _ _ O
Most _ _ O
letters _ _ O
and _ _ O
numbers _ _ O
in _ _ O
the _ _ O
English _ _ O
alphabet _ _ O
are _ _ O
< _ _ O
128 _ _ O
. _ _ O
• _ _ O
“ _ _ O
Strings _ _ O
are _ _ O
numbers _ _ O
” _ _ O
• _ _ O
83 _ _ O
116 _ _ O
114 _ _ O
105 _ _ O
110 _ _ O
103 _ _ O
115 _ _ O
32 _ _ O
97 _ _ O
114 _ _ O
101 _ _ O
32 _ _ O
110 _ _ O
117 _ _ O
109 _ _ O
98 _ _ O
101 _ _ O
114 _ _ O
115 _ _ O
0 _ _ O
• _ _ O
ASCII _ _ O
is _ _ O
also _ _ O
pretty _ _ O
common _ _ O
( _ _ O
the _ _ O
best _ _ O
kind _ _ O
of _ _ O
common _ _ O
) _ _ O
• _ _ O
That _ _ O
’s _ _ O
what _ _ O
we _ _ O
will _ _ O
be _ _ O
using _ _ O
→ _ _ O
8 _ _ O
bit _ _ O
numbers _ _ O
represent _ _ O
characters _ _ O
• _ _ O
Letters _ _ O
and _ _ O
numbers _ _ O
( _ _ O
and _ _ O
most _ _ O
/ _ _ O
all _ _ O
ascii _ _ O
characters _ _ O
) _ _ O
have _ _ O
the _ _ O
same _ _ O
value _ _ O
as _ _ O
UTF16 _ _ O
Do _ _ O
try _ _ O
this _ _ O
at _ _ O
home _ _ O
: _ _ O
what _ _ O
does _ _ O
this _ _ O
mean _ _ O
? _ _ O
• _ _ O
71 _ _ O
111 _ _ O
111 _ _ O
100 _ _ O
32 _ _ O
74 _ _ O
111 _ _ O
98 _ _ O
0 _ _ O
18 _ _ O

Hexadecimal _ _ O
– _ _ O
Base _ _ O
16 _ _ O
The _ _ O
binary _ _ O
shorthand _ _ O
19 _ _ O

Hexadecimal _ _ O
• _ _ O
Binary _ _ O
numbers _ _ O
can _ _ O
get _ _ O
really _ _ O
long _ _ O
, _ _ O
quickly _ _ O
. _ _ O
▪ _ _ O
3 _ _ O
, _ _ O
927 _ _ O
, _ _ O
66410 _ _ O
= _ _ O
11 _ _ O
1011 _ _ O
1110 _ _ O
1110 _ _ O
0111 _ _ O
00002 _ _ O
• _ _ O
But _ _ O
nice _ _ O
" _ _ O
round _ _ O
" _ _ O
numbers _ _ O
in _ _ O
binary _ _ O
look _ _ O
arbitrary _ _ O
in _ _ O
decimal _ _ O
. _ _ O
▪ _ _ O
10000000000000002 _ _ O
= _ _ O
32 _ _ O
, _ _ O
76810 _ _ O
• _ _ O
This _ _ O
is _ _ O
because _ _ O
10 _ _ O
is _ _ O
not _ _ O
a _ _ O
power _ _ O
of _ _ O
2 _ _ O
! _ _ O
• _ _ O
We _ _ O
could _ _ O
use _ _ O
base-4 _ _ O
, _ _ O
base-8 _ _ O
, _ _ O
base-16 _ _ O
, _ _ O
base-32 _ _ O
, _ _ O
etc _ _ O
. _ _ O
▪ _ _ O
Base-4 _ _ O
is _ _ O
not _ _ O
much _ _ O
denser _ _ O
than _ _ O
binary _ _ O
• _ _ O
e.g. _ _ O
3 _ _ O
, _ _ O
927 _ _ O
, _ _ O
66410 _ _ O
= _ _ O
120 _ _ O
3331 _ _ O
2323 _ _ O
00004 _ _ O
▪ _ _ O
Base-32 _ _ O
would _ _ O
require _ _ O
32 _ _ O
digit _ _ O
symbols _ _ O
. _ _ O
Yeesh _ _ O
. _ _ O
• _ _ O
They _ _ O
do _ _ O
, _ _ O
oddly _ _ O
, _ _ O
have _ _ O
their _ _ O
place _ _ O
… _ _ O
but _ _ O
not _ _ O
really _ _ O
in _ _ O
this _ _ O
context _ _ O
. _ _ O
▪ _ _ O
Base-8 _ _ O
and _ _ O
base-16 _ _ O
look _ _ O
promising _ _ O
! _ _ O
20 _ _ O

Hexadecimal _ _ O
or _ _ O
“ _ _ O
hex _ _ O
” _ _ O
( _ _ O
base-16 _ _ O
) _ _ O
• _ _ O
Digit _ _ O
symbols _ _ O
after _ _ O
9 _ _ O
are _ _ O
A-F _ _ O
, _ _ O
meaning _ _ O
10 _ _ O
- _ _ O
15 _ _ O
respectively _ _ O
. _ _ O
• _ _ O
Usually _ _ O
we _ _ O
call _ _ O
one _ _ O
hexadecimal _ _ O
digit _ _ O
a _ _ O
hex _ _ O
digit _ _ O
. _ _ O
No _ _ O
fancy _ _ O
name _ _ O
:( _ _ O
003B _ _ O
EE70 _ _ O
= _ _ O
167 _ _ O
166 _ _ O
165 _ _ O
164 _ _ O
163 _ _ O
162 _ _ O
161 _ _ O
160 _ _ O
To _ _ O
convert _ _ O
hex _ _ O
to _ _ O
decimal _ _ O
: _ _ O
use _ _ O
a _ _ O
dang _ _ O
calculator _ _ O
lol _ _ O
0 _ _ O
× _ _ O
167 _ _ O
+ _ _ O
0 _ _ O
× _ _ O
166 _ _ O
+ _ _ O
3 _ _ O
× _ _ O
165 _ _ O
+ _ _ O
11 _ _ O
× _ _ O
164 _ _ O
+ _ _ O
14 _ _ O
× _ _ O
163 _ _ O
+ _ _ O
14 _ _ O
× _ _ O
162 _ _ O
+ _ _ O
7 _ _ O
× _ _ O
161 _ _ O
+ _ _ O
0 _ _ O
× _ _ O
160 _ _ O
= _ _ O
3 _ _ O
, _ _ O
927 _ _ O
, _ _ O
66410 _ _ O
21 _ _ O

Binary _ _ O
to _ _ O
Hex _ _ O
( _ _ O
animated _ _ O
) _ _ O
0100 _ _ O
1100 _ _ O
1010 _ _ O
0010 _ _ O
0000 _ _ O
0010 _ _ O
0110 _ _ O
0001 _ _ O
4 _ _ O
C _ _ O
A _ _ O
2 _ _ O
0 _ _ O
2 _ _ O
6 _ _ O
1 _ _ O
0x4CA20261 _ _ O
32-bits _ _ O
! _ _ O
( _ _ O
Not _ _ O
so _ _ O
bad _ _ O
… _ _ O
) _ _ O
Q _ _ O
: _ _ O
Create _ _ O
a _ _ O
random _ _ O
binary _ _ O
string _ _ O
and _ _ O
practice _ _ O
! _ _ O
22 _ _ O

Let _ _ O
's _ _ O
make _ _ O
a _ _ O
base-16 _ _ O
number _ _ O
system _ _ O
Using _ _ O
base _ _ O
16 _ _ O
• _ _ O
A _ _ O
number _ _ O
represented _ _ O
by _ _ O
the _ _ O
digits _ _ O
• _ _ O
Has _ _ O
the _ _ O
value _ _ O
𝑑𝑛 _ _ O
𝑑𝑛−1 _ _ O
… _ _ O
𝑑1 _ _ O
𝑑0 _ _ O
𝑑𝑛 _ _ O
× _ _ O
16𝑛 _ _ O
+ _ _ O
𝑑𝑛−1 _ _ O
× _ _ O
16𝑛−1 _ _ O
+ _ _ O
⋯ _ _ O
+ _ _ O
𝑑1 _ _ O
× _ _ O
161 _ _ O
+ _ _ O
𝑑0 _ _ O
× _ _ O
160 _ _ O
• _ _ O
Using _ _ O
𝑛 _ _ O
digits _ _ O
we _ _ O
can _ _ O
represent _ _ O
𝟏𝟔𝑛 _ _ O
different _ _ O
numbers _ _ O
• _ _ O
The _ _ O
smallest _ _ O
non-negative _ _ O
number _ _ O
representable _ _ O
with _ _ O
𝑛 _ _ O
digits _ _ O
is _ _ O
0 _ _ O
• _ _ O
The _ _ O
largest _ _ O
number _ _ O
representable _ _ O
with _ _ O
𝑛 _ _ O
digits _ _ O
is _ _ O
16𝑛 _ _ O
− _ _ O
1 _ _ O
• _ _ O
Using _ _ O
16 _ _ O
symbols _ _ O
: _ _ O
0 _ _ O
, _ _ O
1 _ _ O
, _ _ O
2 _ _ O
, _ _ O
3 _ _ O
, _ _ O
4 _ _ O
, _ _ O
5 _ _ O
, _ _ O
6 _ _ O
, _ _ O
7 _ _ O
, _ _ O
8 _ _ O
, _ _ O
9 _ _ O
, _ _ O
A _ _ O
, _ _ O
B _ _ O
, _ _ O
C _ _ O
, _ _ O
D _ _ O
, _ _ O
E _ _ O
, _ _ O
F _ _ O
23 _ _ O

Why _ _ O
? _ _ O
1111 _ _ O
1111 _ _ O
1 _ _ O
× _ _ O
27 _ _ O
+ _ _ O
1 _ _ O
× _ _ O
26 _ _ O
+ _ _ O
1 _ _ O
× _ _ O
25 _ _ O
+ _ _ O
1 _ _ O
× _ _ O
24 _ _ O
+ _ _ O
1 _ _ O
× _ _ O
23 _ _ O
+ _ _ O
1 _ _ O
× _ _ O
22 _ _ O
+ _ _ O
1 _ _ O
× _ _ O
21 _ _ O
+ _ _ O
1 _ _ O
× _ _ O
20 _ _ O
1 _ _ O
× _ _ O
23 _ _ O
+ _ _ O
1 _ _ O
× _ _ O
22 _ _ O
+ _ _ O
1 _ _ O
× _ _ O
21 _ _ O
+ _ _ O
1 _ _ O
× _ _ O
20 _ _ O
= _ _ O
8+4+2+1= _ _ O
15 _ _ O
1 _ _ O
× _ _ O
23 _ _ O
+ _ _ O
1 _ _ O
× _ _ O
22 _ _ O
+ _ _ O
1 _ _ O
× _ _ O
21 _ _ O
+ _ _ O
1 _ _ O
× _ _ O
20 _ _ O
× _ _ O
24 _ _ O
+ _ _ O
15 _ _ O
This _ _ O
works _ _ O
with _ _ O
any _ _ O
base _ _ O
that _ _ O
is _ _ O
a _ _ O
power _ _ O
of _ _ O
2 _ _ O
15 _ _ O
× _ _ O
161 _ _ O
+ _ _ O
15 _ _ O
× _ _ O
160 _ _ O
E.g. _ _ O
Base _ _ O
4=22 _ _ O
Split _ _ O
into _ _ O
groups _ _ O
of _ _ O
2 _ _ O
bits _ _ O
F _ _ O
F _ _ O
Factoring _ _ O
24 _ _ O
= _ _ O
16 _ _ O
24 _ _ O

Integer _ _ O
Encoding _ _ O
Casting _ _ O
is _ _ O
Not _ _ O
Just _ _ O
a _ _ O
Witch _ _ O
or _ _ O
Wizard _ _ O
Thing _ _ O
25 _ _ O

Finite _ _ O
numbers _ _ O
• _ _ O
In _ _ O
computers _ _ O
, _ _ O
numbers _ _ O
are _ _ O
finite _ _ O
. _ _ O
• _ _ O
Let _ _ O
's _ _ O
say _ _ O
our _ _ O
4-digit _ _ O
display _ _ O
was _ _ O
counting _ _ O
up _ _ O
: _ _ O
9997 _ _ O
, _ _ O
9998 _ _ O
, _ _ O
9999 _ _ O
… _ _ O
• _ _ O
What _ _ O
comes _ _ O
" _ _ O
next _ _ O
" _ _ O
? _ _ O
• _ _ O
What _ _ O
does _ _ O
this _ _ O
" _ _ O
0000 _ _ O
" _ _ O
really _ _ O
mean _ _ O
? _ _ O
• _ _ O
It _ _ O
wrapped _ _ O
around _ _ O
. _ _ O
• _ _ O
This _ _ O
is _ _ O
overflow _ _ O
: _ _ O
the _ _ O
number _ _ O
you _ _ O
are _ _ O
trying _ _ O
to _ _ O
represent _ _ O
is _ _ O
too _ _ O
big _ _ O
to _ _ O
be _ _ O
represented _ _ O
. _ _ O
• _ _ O
Essentially _ _ O
, _ _ O
all _ _ O
arithmetic _ _ O
on _ _ O
the _ _ O
computer _ _ O
is _ _ O
modular _ _ O
arithmetic _ _ O
! _ _ O
• _ _ O
This _ _ O
causes _ _ O
a _ _ O
lot _ _ O
of _ _ O
software _ _ O
bugs _ _ O
. _ _ O
• _ _ O
https _ _ O
: _ _ O
/ _ _ O
/ _ _ O
en.wikipedia.org _ _ O
/ _ _ O
wiki _ _ O
/ _ _ O
Pac-Man#Level_256 _ _ O
26 _ _ O

Number _ _ O
carrousel _ _ O
• _ _ O
Computers _ _ O
perform _ _ O
modulus _ _ O
arithmetic _ _ O
• _ _ O
Meaning _ _ O
: _ _ O
it _ _ O
goes _ _ O
around _ _ O
! _ _ O
• _ _ O
E.g. _ _ O
in _ _ O
a _ _ O
4-bit _ _ O
computer _ _ O
15 _ _ O
0 _ _ O
14 _ _ O
1111 _ _ O
1110 _ _ O
13 _ _ O
1101 _ _ O
0000 _ _ O
1001 _ _ O
0001 _ _ O
0010 _ _ O
2 _ _ O
0011 _ _ O
12 _ _ O
1100 _ _ O
1011 _ _ O
11 _ _ O
1010 _ _ O
10 _ _ O
1 _ _ O
0100 _ _ O
0101 _ _ O
0110 _ _ O
0111 _ _ O
3 _ _ O
4 _ _ O
5 _ _ O
6 _ _ O
0000 _ _ O
8 _ _ O
7 _ _ O
-0001 _ _ O
what _ _ O
is _ _ O
0 _ _ O
- _ _ O
1 _ _ O
? _ _ O
1111 _ _ O
9 _ _ O
1000 _ _ O
27 _ _ O

What _ _ O
about _ _ O
negative _ _ O
carrousels _ _ O
? _ _ O
• _ _ O
How _ _ O
much _ _ O
is _ _ O
0 _ _ O
– _ _ O
1 _ _ O
? _ _ O
• _ _ O
-1 _ _ O
-1 _ _ O
0 _ _ O
-2 _ _ O
1111 _ _ O
1110 _ _ O
-3 _ _ O
1101 _ _ O
0000 _ _ O
1001 _ _ O
0001 _ _ O
0010 _ _ O
2 _ _ O
0011 _ _ O
-4 _ _ O
1100 _ _ O
1011 _ _ O
-5 _ _ O
1010 _ _ O
-6 _ _ O
1 _ _ O
0100 _ _ O
0101 _ _ O
0110 _ _ O
1000 _ _ O
0111 _ _ O
-7 _ _ O
-8 _ _ O
7 _ _ O
3 _ _ O
4 _ _ O
5 _ _ O
6 _ _ O
Why _ _ O
did _ _ O
we _ _ O
stop _ _ O
here _ _ O
? _ _ O
28 _ _ O

Signed _ _ O
Numbers _ _ O
( _ _ O
2 _ _ O
’s _ _ O
Complement _ _ O
) _ _ O
• _ _ O
Representing _ _ O
negative _ _ O
numbers _ _ O
. _ _ O
• _ _ O
But _ _ O
it _ _ O
’s _ _ O
a _ _ O
little _ _ O
strange _ _ O
! _ _ O
• _ _ O
Hmm _ _ O
, _ _ O
it _ _ O
’s _ _ O
a _ _ O
little _ _ O
lopsided _ _ O
: _ _ O
-4 _ _ O
does _ _ O
n’t _ _ O
have _ _ O
a _ _ O
valid _ _ O
positive _ _ O
number _ _ O
. _ _ O
100 _ _ O
101 _ _ O
110 _ _ O
000 _ _ O
010 _ _ O
111 _ _ O
001 _ _ O
011 _ _ O
-4 _ _ O
-3 _ _ O
-2 _ _ O
-1 _ _ O
0 _ _ O
+1 _ _ O
+2 _ _ O
+3 _ _ O
2 _ _ O
’s _ _ O
Complement _ _ O
• _ _ O
I _ _ O
can _ _ O
tell _ _ O
it _ _ O
’s _ _ O
negative _ _ O
if _ _ O
it _ _ O
starts _ _ O
with _ _ O
a _ _ O
1 _ _ O
☺ _ _ O
• _ _ O
And _ _ O
if _ _ O
it _ _ O
’s _ _ O
positive _ _ O
, _ _ O
then _ _ O
I _ _ O
can _ _ O
clearly _ _ O
see _ _ O
how _ _ O
much _ _ O
it _ _ O
’s _ _ O
worth _ _ O
! _ _ O
• _ _ O
But _ _ O
how _ _ O
exactly _ _ O
… _ _ O
can _ _ O
we _ _ O
tell _ _ O
the _ _ O
value _ _ O
of _ _ O
a _ _ O
negative _ _ O
number _ _ O
? _ _ O
• _ _ O
We _ _ O
need _ _ O
to _ _ O
negate _ _ O
( _ _ O
flip _ _ O
the _ _ O
sign _ _ O
) _ _ O
negative _ _ O
numbers _ _ O
• _ _ O
But _ _ O
HOW _ _ O
? _ _ O
? _ _ O
? _ _ O
? _ _ O
29 _ _ O

Two _ _ O
’s _ _ O
complement _ _ O
arithmetic _ _ O
• _ _ O
Negation _ _ O
- _ _ O
( _ _ O
3 _ _ O
) _ _ O
0011 _ _ O
- _ _ O
( _ _ O
-3 _ _ O
) _ _ O
1101 _ _ O
bit _ _ O
pattern _ _ O
for _ _ O
positive _ _ O
3 _ _ O
? _ _ O
bit _ _ O
pattern _ _ O
for _ _ O
negative _ _ O
3 _ _ O
? _ _ O
flip _ _ O
! _ _ O
flip _ _ O
! _ _ O
1100 _ _ O
0010 _ _ O
1101 _ _ O
Add _ _ O
1 _ _ O
! _ _ O
0011 _ _ O
Add _ _ O
1 _ _ O
! _ _ O
• _ _ O
You _ _ O
do _ _ O
n’t _ _ O
need _ _ O
to _ _ O
subtract _ _ O
! _ _ O
! _ _ O
• _ _ O
flip _ _ O
( _ _ O
k _ _ O
) _ _ O
+1 _ _ O
= _ _ O
= _ _ O
flip _ _ O
( _ _ O
k-1 _ _ O
) _ _ O
• _ _ O
If _ _ O
you _ _ O
ignore _ _ O
the _ _ O
carry _ _ O
! _ _ O
☺ _ _ O
30 _ _ O

Two _ _ O
's _ _ O
complement _ _ O
addition _ _ O
• _ _ O
the _ _ O
great _ _ O
thing _ _ O
is _ _ O
: _ _ O
you _ _ O
can _ _ O
add _ _ O
numbers _ _ O
of _ _ O
either _ _ O
sign _ _ O
without _ _ O
having _ _ O
to _ _ O
do _ _ O
anything _ _ O
special _ _ O
! _ _ O
to _ _ O
binary _ _ O
? _ _ O
0111 _ _ O
3 _ _ O
+ _ _ O
7 _ _ O
10 _ _ O
Ignore _ _ O
the _ _ O
carry _ _ O
bit _ _ O
pattern _ _ O
for _ _ O
-7 _ _ O
… _ _ O
positive _ _ O
7 _ _ O
? _ _ O
0011 _ _ O
3 _ _ O
+0111 _ _ O
+ _ _ O
-7 _ _ O
1010 _ _ O
-4 _ _ O
0011 _ _ O
0011 _ _ O
0111 _ _ O
4 _ _ O
flip _ _ O
! _ _ O
+1 _ _ O
+1001 _ _ O
to _ _ O
decimal _ _ O
? _ _ O
1000 _ _ O
1100 _ _ O
0100 _ _ O
this _ _ O
is _ _ O
negative _ _ O
, _ _ O
so _ _ O
what _ _ O
is _ _ O
it _ _ O
? _ _ O
flip _ _ O
! _ _ O
the _ _ O
actual _ _ O
patterns _ _ O
of _ _ O
bits _ _ O
are _ _ O
the _ _ O
same _ _ O
. _ _ O
so _ _ O
how _ _ O
does _ _ O
the _ _ O
computer _ _ O
" _ _ O
know _ _ O
" _ _ O
whether _ _ O
it _ _ O
's _ _ O
doing _ _ O
signed _ _ O
or _ _ O
unsigned _ _ O
addition _ _ O
? _ _ O
+1 _ _ O
0011 _ _ O
31 _ _ O

Signed _ _ O
Numbers _ _ O
( _ _ O
2 _ _ O
’s _ _ O
Complement _ _ O
) _ _ O
• _ _ O
Let _ _ O
’s _ _ O
look _ _ O
some _ _ O
examples _ _ O
: _ _ O
11010100➔- _ _ O
( _ _ O
00101011+1 _ _ O
) _ _ O
➔- _ _ O
( _ _ O
43+1 _ _ O
) _ _ O
=-44 _ _ O
00100110 _ _ O
= _ _ O
00100110 _ _ O
= _ _ O
38 _ _ O
00000000 _ _ O
= _ _ O
00000000= _ _ O
0 _ _ O
11111111= _ _ O
-00000000=- _ _ O
( _ _ O
0+1 _ _ O
) _ _ O
= _ _ O
-1 _ _ O
• _ _ O
If _ _ O
the _ _ O
MSB _ _ O
is _ _ O
1 _ _ O
: _ _ O
Flip _ _ O
! _ _ O
Add _ _ O
one _ _ O
! _ _ O
• _ _ O
Otherwise _ _ O
: _ _ O
Do _ _ O
nothing _ _ O
! _ _ O
It _ _ O
’s _ _ O
the _ _ O
same _ _ O
! _ _ O
32 _ _ O

Signed _ _ O
Numbers _ _ O
( _ _ O
2 _ _ O
’s _ _ O
Complement _ _ O
) _ _ O
• _ _ O
What _ _ O
happens _ _ O
when _ _ O
we _ _ O
add _ _ O
zeros _ _ O
to _ _ O
a _ _ O
positive _ _ O
number _ _ O
: _ _ O
10100110 _ _ O
= _ _ O
? _ _ O
00100110 _ _ O
= _ _ O
38 _ _ O
- _ _ O
( _ _ O
01011001+1 _ _ O
) _ _ O
= _ _ O
? _ _ O
0000000000100110 _ _ O
= _ _ O
38 _ _ O
? _ _ O
-01011010 _ _ O
= _ _ O
-90 _ _ O
? _ _ O
• _ _ O
What _ _ O
happens _ _ O
when _ _ O
we _ _ O
add _ _ O
ones _ _ O
to _ _ O
a _ _ O
negative _ _ O
number _ _ O
: _ _ O
10100110 _ _ O
= _ _ O
-90 _ _ O
? _ _ O
11111111110100110 _ _ O
= _ _ O
-00000000001011001 _ _ O
= _ _ O
-90 _ _ O
? _ _ O
33 _ _ O

Can _ _ O
I _ _ O
Get _ _ O
an _ _ O
Extension _ _ O
? _ _ O
• _ _ O
Sometimes _ _ O
you _ _ O
need _ _ O
to _ _ O
widen _ _ O
a _ _ O
number _ _ O
with _ _ O
fewer _ _ O
bits _ _ O
to _ _ O
more _ _ O
• _ _ O
zero _ _ O
extension _ _ O
is _ _ O
easy _ _ O
: _ _ O
put _ _ O
0s _ _ O
at _ _ O
the _ _ O
beginning _ _ O
. _ _ O
10012 _ _ O
➔ _ _ O
to _ _ O
8 _ _ O
bits _ _ O
➔ _ _ O
0000 _ _ O
10012 _ _ O
• _ _ O
But _ _ O
there _ _ O
are _ _ O
also _ _ O
signed _ _ O
numbers _ _ O
… _ _ O
what _ _ O
about _ _ O
those _ _ O
? _ _ O
• _ _ O
The _ _ O
top _ _ O
bit _ _ O
( _ _ O
MSB _ _ O
) _ _ O
of _ _ O
signed _ _ O
numbers _ _ O
determines _ _ O
the _ _ O
sign _ _ O
( _ _ O
+ _ _ O
/- _ _ O
) _ _ O
• _ _ O
sign _ _ O
extension _ _ O
puts _ _ O
copies _ _ O
of _ _ O
the _ _ O
sign _ _ O
bit _ _ O
at _ _ O
the _ _ O
beginning _ _ O
10012 _ _ O
➔ _ _ O
to _ _ O
8 _ _ O
bits _ _ O
➔ _ _ O
1111 _ _ O
10012 _ _ O
00102 _ _ O
➔ _ _ O
to _ _ O
8 _ _ O
bits _ _ O
➔ _ _ O
0000 _ _ O
00102 _ _ O
Q _ _ O
: _ _ O
What _ _ O
happens _ _ O
when _ _ O
you _ _ O
sign _ _ O
extend _ _ O
the _ _ O
largest _ _ O
unsigned _ _ O
value _ _ O
? _ _ O
34 _ _ O

Absolutely _ _ O
Bonkers _ _ O
Q _ _ O
: _ _ O
How _ _ O
many _ _ O
bits _ _ O
is _ _ O
a _ _ O
Java _ _ O
? _ _ O
What _ _ O
happened _ _ O
here _ _ O
? _ _ O
35 _ _ O

Integer _ _ O
Ranges _ _ O
• _ _ O
Recall _ _ O
: _ _ O
• _ _ O
The _ _ O
range _ _ O
of _ _ O
an _ _ O
unsigned _ _ O
integer _ _ O
is _ _ O
0 _ _ O
to _ _ O
2n _ _ O
– _ _ O
1 _ _ O
• _ _ O
Q _ _ O
: _ _ O
Why _ _ O
do _ _ O
we _ _ O
subtract _ _ O
1 _ _ O
? _ _ O
• _ _ O
What _ _ O
is _ _ O
the _ _ O
range _ _ O
of _ _ O
a _ _ O
2 _ _ O
’s _ _ O
complement _ _ O
number _ _ O
? _ _ O
• _ _ O
Consider _ _ O
the _ _ O
sign _ _ O
bit _ _ O
, _ _ O
how _ _ O
many _ _ O
negative _ _ O
integers _ _ O
? _ _ O
• _ _ O
Consider _ _ O
, _ _ O
now _ _ O
, _ _ O
the _ _ O
positive _ _ O
integers _ _ O
. _ _ O
• _ _ O
Remember _ _ O
0 _ _ O
. _ _ O
-2n-1 _ _ O
to _ _ O
2n-1 _ _ O
– _ _ O
1 _ _ O
Q _ _ O
: _ _ O
What _ _ O
if _ _ O
you _ _ O
needed _ _ O
CS _ _ O
/ _ _ O
COE _ _ O
a _ _ O
range _ _ O
with _ _ O
far _ _ O
more _ _ O
negatives _ _ O
than _ _ O
positives _ _ O
? _ _ O
36 _ _ O
0449 _ _ O
– _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O

Integers _ _ O
in _ _ O
Java _ _ O
C _ _ O
• _ _ O
C _ _ O
allows _ _ O
for _ _ O
variables _ _ O
to _ _ O
be _ _ O
declared _ _ O
as _ _ O
either _ _ O
signed _ _ O
or _ _ O
unsigned _ _ O
. _ _ O
• _ _ O
Remember _ _ O
: _ _ O
“ _ _ O
signed _ _ O
” _ _ O
does _ _ O
not _ _ O
mean _ _ O
“ _ _ O
negative _ _ O
” _ _ O
just _ _ O
that _ _ O
it _ _ O
can _ _ O
be _ _ O
negative _ _ O
. _ _ O
• _ _ O
An _ _ O
unsigned _ _ O
integer _ _ O
variable _ _ O
has _ _ O
a _ _ O
range _ _ O
from _ _ O
0 _ _ O
to _ _ O
2n _ _ O
– _ _ O
1 _ _ O
• _ _ O
And _ _ O
signed _ _ O
integers _ _ O
are _ _ O
usually _ _ O
2 _ _ O
’s _ _ O
complement _ _ O
: _ _ O
2n-1 _ _ O
to _ _ O
2n-1 _ _ O
– _ _ O
1 _ _ O
• _ _ O
Where _ _ O
“ _ _ O
n _ _ O
” _ _ O
is _ _ O
determined _ _ O
by _ _ O
the _ _ O
variable _ _ O
’s _ _ O
size _ _ O
in _ _ O
bits _ _ O
. _ _ O
• _ _ O
Integer _ _ O
Types _ _ O
: _ _ O
( _ _ O
signed _ _ O
by _ _ O
default _ _ O
, _ _ O
their _ _ O
sizes _ _ O
are _ _ O
arbitrary _ _ O
! _ _ O
! _ _ O
) _ _ O
• _ _ O
• _ _ O
• _ _ O
• _ _ O
• _ _ O
Usually _ _ O
no _ _ O
strong _ _ O
reason _ _ O
to _ _ O
use _ _ O
anything _ _ O
other _ _ O
than _ _ O
( _ _ O
un _ _ O
) _ _ O
signed _ _ O
int _ _ O
. _ _ O
Q _ _ O
: _ _ O
What _ _ O
is _ _ O
the _ _ O
range _ _ O
of _ _ O
a _ _ O
? _ _ O
37 _ _ O

Integers _ _ O
in _ _ O
C _ _ O
: _ _ O
Limits _ _ O
• _ _ O
Since _ _ O
sizes _ _ O
of _ _ O
integers _ _ O
are _ _ O
technically _ _ O
arbitrary _ _ O
… _ _ O
• _ _ O
They _ _ O
are _ _ O
usually _ _ O
based _ _ O
on _ _ O
the _ _ O
underlying _ _ O
architecture _ _ O
. _ _ O
• _ _ O
… _ _ O
C _ _ O
provides _ _ O
standard _ _ O
library _ _ O
constants _ _ O
defining _ _ O
the _ _ O
ranges _ _ O
. _ _ O
• _ _ O
https _ _ O
: _ _ O
/ _ _ O
/ _ _ O
pubs.opengroup.org _ _ O
/ _ _ O
onlinepubs _ _ O
/ _ _ O
009695399 _ _ O
/ _ _ O
basedefs _ _ O
/ _ _ O
limits.h.html _ _ O
Q _ _ O
: _ _ O
Experiment _ _ O
using _ _ O
CS _ _ O
/ _ _ O
COEwith _ _ O
0449 _ _ O
– _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O
for _ _ O
both _ _ O
. _ _ O
What _ _ O
is _ _ O
the _ _ O
result _ _ O
? _ _ O
38 _ _ O

Casting _ _ O
• _ _ O
C _ _ O
lets _ _ O
you _ _ O
move _ _ O
a _ _ O
value _ _ O
from _ _ O
an _ _ O
unsigned _ _ O
integer _ _ O
variable _ _ O
to _ _ O
a _ _ O
signed _ _ O
integer _ _ O
variable _ _ O
. _ _ O
( _ _ O
and _ _ O
vice _ _ O
versa _ _ O
) _ _ O
• _ _ O
However _ _ O
, _ _ O
this _ _ O
is _ _ O
not _ _ O
always _ _ O
valid _ _ O
! _ _ O
Yet _ _ O
, _ _ O
it _ _ O
will _ _ O
do _ _ O
it _ _ O
anyway _ _ O
. _ _ O
• _ _ O
The _ _ O
binary _ _ O
value _ _ O
is _ _ O
the _ _ O
same _ _ O
, _ _ O
its _ _ O
interpretation _ _ O
is _ _ O
not _ _ O
! _ _ O
• _ _ O
This _ _ O
is _ _ O
called _ _ O
coercion _ _ O
, _ _ O
and _ _ O
this _ _ O
is _ _ O
a _ _ O
relatively _ _ O
simple _ _ O
case _ _ O
of _ _ O
it _ _ O
. _ _ O
• _ _ O
Since _ _ O
it _ _ O
ignores _ _ O
obvious _ _ O
invalid _ _ O
operations _ _ O
this _ _ O
is _ _ O
sometimes _ _ O
referred _ _ O
to _ _ O
as _ _ O
“ _ _ O
weak _ _ O
” _ _ O
typing _ _ O
. _ _ O
• _ _ O
The _ _ O
strong _ _ O
/ _ _ O
weak _ _ O
terminology _ _ O
has _ _ O
had _ _ O
very _ _ O
fragile _ _ O
definitions _ _ O
over _ _ O
the _ _ O
years _ _ O
and _ _ O
are _ _ O
arguably _ _ O
useless _ _ O
in _ _ O
our _ _ O
context _ _ O
. _ _ O
Let _ _ O
’s _ _ O
ignore _ _ O
them _ _ O
. _ _ O
• _ _ O
Moving _ _ O
values _ _ O
between _ _ O
different _ _ O
types _ _ O
is _ _ O
called _ _ O
casting _ _ O
• _ _ O
Which _ _ O
sounds _ _ O
magical _ _ O
and _ _ O
it _ _ O
sometimes _ _ O
is _ _ O
. _ _ O
Q _ _ O
: _ _ O
What _ _ O
is _ _ O
true _ _ O
of _ _ O
the _ _ O
result _ _ O
the _ _ O
value _ _ O
-1 _ _ O
to _ _ O
an _ _ O
unsigned _ _ O
type _ _ O
? _ _ O
39 _ _ O
CS _ _ O
/ _ _ O
COE _ _ O
of _ _ O
0449casting _ _ O
– _ _ O
Spring _ _ O
2019 _ _ O
/ _ _ O
2020 _ _ O

Fractional _ _ O
Binary _ _ O
40 _ _ O

Fractional _ _ O
numbers _ _ O
• _ _ O
Up _ _ O
to _ _ O
this _ _ O
point _ _ O
we _ _ O
have _ _ O
been _ _ O
working _ _ O
with _ _ O
integer _ _ O
numbers _ _ O
. _ _ O
2019 _ _ O
2 _ _ O
0 _ _ O
1 _ _ O
9.320 _ _ O
• _ _ O
Unsigned _ _ O
and _ _ O
signed _ _ O
! _ _ O
• _ _ O
However _ _ O
, _ _ O
Real _ _ O
world _ _ O
numbers _ _ O
are _ _ O
… _ _ O
Real _ _ O
numbers _ _ O
. _ _ O
Like _ _ O
so _ _ O
: _ _ O
• _ _ O
That _ _ O
create _ _ O
new _ _ O
challenges _ _ O
! _ _ O
• _ _ O
Let _ _ O
’s _ _ O
start _ _ O
by _ _ O
taking _ _ O
a _ _ O
look _ _ O
at _ _ O
them _ _ O
. _ _ O
41 _ _ O

Just _ _ O
a _ _ O
fraction _ _ O
of _ _ O
a _ _ O
number _ _ O
• _ _ O
The _ _ O
numbers _ _ O
we _ _ O
use _ _ O
are _ _ O
written _ _ O
positionally _ _ O
: _ _ O
the _ _ O
position _ _ O
of _ _ O
a _ _ O
digit _ _ O
within _ _ O
the _ _ O
number _ _ O
has _ _ O
a _ _ O
meaning _ _ O
. _ _ O
• _ _ O
What _ _ O
about _ _ O
when _ _ O
the _ _ O
numbers _ _ O
go _ _ O
over _ _ O
the _ _ O
decimal _ _ O
point _ _ O
? _ _ O
? _ _ O
2 _ _ O
0 _ _ O
1 _ _ O
9 _ _ O
. _ _ O
3 _ _ O
2 _ _ O
0 _ _ O
1000s _ _ O
100s _ _ O
10s _ _ O
1s _ _ O
10ths _ _ O
100ths _ _ O
1000ths _ _ O
103 _ _ O
102 _ _ O
101 _ _ O
100 _ _ O
10 _ _ O
- _ _ O
1 _ _ O
10 _ _ O
- _ _ O
2 _ _ O
10 _ _ O
- _ _ O
3 _ _ O
42 _ _ O

A _ _ O
fraction _ _ O
of _ _ O
a _ _ O
bit _ _ O
? _ _ O
• _ _ O
Binary _ _ O
is _ _ O
the _ _ O
same _ _ O
! _ _ O
• _ _ O
Just _ _ O
replace _ _ O
10s _ _ O
with _ _ O
2s _ _ O
. _ _ O
0 _ _ O
1 _ _ O
1 _ _ O
0 _ _ O
.1 _ _ O
1 _ _ O
0 _ _ O
1 _ _ O
23 _ _ O
8s _ _ O
22 _ _ O
4s _ _ O
21 _ _ O
2s _ _ O
20 _ _ O
1s _ _ O
2 _ _ O
- _ _ O
1 _ _ O
2ths _ _ O
? _ _ O
2 _ _ O
- _ _ O
2 _ _ O
4ths _ _ O
2 _ _ O
- _ _ O
3 _ _ O
8ths _ _ O
2 _ _ O
- _ _ O
4 _ _ O
16ths _ _ O
43 _ _ O

To _ _ O
convert _ _ O
into _ _ O
decimal _ _ O
, _ _ O
just _ _ O
add _ _ O
stuff _ _ O
0 _ _ O
1 _ _ O
1 _ _ O
0 _ _ O
.1 _ _ O
1 _ _ O
0 _ _ O
1= _ _ O
23 _ _ O
22 _ _ O
21 _ _ O
20 _ _ O
0×8 _ _ O
+ _ _ O
1×4 _ _ O
+ _ _ O
1×2 _ _ O
+ _ _ O
0×1 _ _ O
+ _ _ O
1 _ _ O
× _ _ O
.5 _ _ O
+ _ _ O
1 _ _ O
× _ _ O
.25 _ _ O
+ _ _ O
0 _ _ O
× _ _ O
.125 _ _ O
+ _ _ O
1 _ _ O
× _ _ O
.0625 _ _ O
2 _ _ O
- _ _ O
1 _ _ O
2 _ _ O
- _ _ O
2 _ _ O
2 _ _ O
- _ _ O
3 _ _ O
2 _ _ O
- _ _ O
4 _ _ O
= _ _ O
6.812510 _ _ O
44 _ _ O

From _ _ O
decimal _ _ O
to _ _ O
binary _ _ O
? _ _ O
Tricky _ _ O
? _ _ O
6.8125 _ _ O
10 _ _ O
6÷210 _ _ O
= _ _ O
3R0 _ _ O
3÷210 _ _ O
= _ _ O
1R1 _ _ O
1 _ _ O
1 _ _ O
0.1101 _ _ O
0.812510 _ _ O
x _ _ O
2 _ _ O
1.6250 _ _ O
MSB _ _ O
0.625010 _ _ O
x _ _ O
2 _ _ O
1.2500 _ _ O
0.250010 _ _ O
x _ _ O
2 _ _ O
0.5000 _ _ O
0.500010 _ _ O
x _ _ O
2 _ _ O
1.0000 _ _ O
LSB _ _ O
45 _ _ O

So _ _ O
, _ _ O
it _ _ O
’s _ _ O
easy _ _ O
right _ _ O
? _ _ O
Well _ _ O
… _ _ O
What _ _ O
about _ _ O
: _ _ O
0.1 _ _ O
10 _ _ O
0.110 _ _ O
x _ _ O
2 _ _ O
0.2 _ _ O
0.210 _ _ O
x2 _ _ O
0.4 _ _ O
0.0001 _ _ O
0.410 _ _ O
x _ _ O
2 _ _ O
0.8 _ _ O
0.810 _ _ O
x _ _ O
2 _ _ O
1.6 _ _ O
46 _ _ O

So _ _ O
, _ _ O
it _ _ O
’s _ _ O
easy _ _ O
right _ _ O
? _ _ O
Well _ _ O
…… _ _ O
What _ _ O
about _ _ O
: _ _ O
0.1 _ _ O
10 _ _ O
0.0001 _ _ O
1001 _ _ O
0.610 _ _ O
x _ _ O
2 _ _ O
1.2 _ _ O
0.110 _ _ O
x _ _ O
2 _ _ O
0.2 _ _ O
0.210 _ _ O
x2 _ _ O
0.4 _ _ O
0.210 _ _ O
x2 _ _ O
0.4 _ _ O
0.410 _ _ O
x _ _ O
2 _ _ O
0.8 _ _ O
0.410 _ _ O
x _ _ O
2 _ _ O
0.8 _ _ O
0.810 _ _ O
x _ _ O
2 _ _ O
1.6 _ _ O
0.810 _ _ O
x _ _ O
2 _ _ O
1.6 _ _ O
47 _ _ O

So _ _ O
, _ _ O
it _ _ O
’s _ _ O
easy _ _ O
right _ _ O
? _ _ O
Well _ _ O
… _ _ O
…… _ _ O
What _ _ O
about _ _ O
: _ _ O
0.1 _ _ O
10 _ _ O
0.0001 _ _ O
1001 _ _ O
10 _ _ O
0 _ _ O
1 _ _ O
... _ _ O
0.610 _ _ O
x _ _ O
2 _ _ O
1.2 _ _ O
0.610 _ _ O
x _ _ O
2 _ _ O
1.2 _ _ O
0.110 _ _ O
x _ _ O
2 _ _ O
0.2 _ _ O
0.210 _ _ O
x2 _ _ O
0.4 _ _ O
0.210 _ _ O
x2 _ _ O
0.4 _ _ O
0.210 _ _ O
x2 _ _ O
0.4 _ _ O
0.410 _ _ O
x _ _ O
2 _ _ O
0.8 _ _ O
0.410 _ _ O
x _ _ O
2 _ _ O
0.8 _ _ O
0.410 _ _ O
x _ _ O
2 _ _ O
0.8 _ _ O
0.810 _ _ O
x _ _ O
2 _ _ O
1.6 _ _ O
0.810 _ _ O
x _ _ O
2 _ _ O
1.6 _ _ O
0.810 _ _ O
x _ _ O
2 _ _ O
1.6 _ _ O
48 _ _ O

How _ _ O
much _ _ O
is _ _ O
it _ _ O
worth _ _ O
? _ _ O
•Well _ _ O
, _ _ O
it _ _ O
depends _ _ O
on _ _ O
where _ _ O
you _ _ O
stop _ _ O
! _ _ O
0.0001 _ _ O
2 _ _ O
= _ _ O
0.0625 _ _ O
0.00011001 _ _ O
2 _ _ O
= _ _ O
0.0976 _ _ O
… _ _ O
0.000110011001 _ _ O
2 _ _ O
= _ _ O
0.0998 _ _ O
… _ _ O
49 _ _ O

Limited _ _ O
space _ _ O
! _ _ O
• _ _ O
How _ _ O
much _ _ O
should _ _ O
we _ _ O
store _ _ O
? _ _ O
• _ _ O
We _ _ O
have _ _ O
32-bit _ _ O
registers _ _ O
, _ _ O
so _ _ O
32-bits _ _ O
? _ _ O
• _ _ O
Let _ _ O
’s _ _ O
say _ _ O
we _ _ O
do _ _ O
! _ _ O
• _ _ O
How _ _ O
many _ _ O
bits _ _ O
are _ _ O
used _ _ O
to _ _ O
store _ _ O
the _ _ O
integer _ _ O
part _ _ O
? _ _ O
• _ _ O
How _ _ O
many _ _ O
bits _ _ O
are _ _ O
used _ _ O
to _ _ O
store _ _ O
the _ _ O
fractional _ _ O
part _ _ O
? _ _ O
• _ _ O
What _ _ O
are _ _ O
the _ _ O
tradeoffs _ _ O
? _ _ O
50 _ _ O



