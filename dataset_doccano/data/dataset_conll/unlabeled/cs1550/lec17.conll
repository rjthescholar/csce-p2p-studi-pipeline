unlabeled|cs1550|lec17
-DOCSTART- -X- -X- O

Introduction _ _ O
to _ _ O
Operating _ _ O
Systems _ _ O
CS _ _ O
1550 _ _ O
Spring _ _ O
2022 _ _ O
Sherif _ _ O
Khattab _ _ O
ksm73@pitt.edu _ _ O
( _ _ O
Some _ _ O
slides _ _ O
are _ _ O
from _ _ O
Silberschatz _ _ O
, _ _ O
Galvin _ _ O
and _ _ O
Gagne _ _ O
© _ _ O
2013 _ _ O
) _ _ O

Announcements _ _ O
• _ _ O
Upcoming _ _ O
deadlines _ _ O
: _ _ O
• _ _ O
Quiz _ _ O
2 _ _ O
: _ _ O
due _ _ O
on _ _ O
3 _ _ O
/ _ _ O
25 _ _ O
• _ _ O
Homework _ _ O
9 _ _ O
: _ _ O
due _ _ O
on _ _ O
3 _ _ O
/ _ _ O
28 _ _ O
• _ _ O
Lab _ _ O
3 _ _ O
: _ _ O
due _ _ O
on _ _ O
4 _ _ O
/ _ _ O
1 _ _ O
• _ _ O
Project _ _ O
3 _ _ O
: _ _ O
due _ _ O
on _ _ O
4 _ _ O
/ _ _ O
11 _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
2 _ _ O

Previous _ _ O
lecture _ _ O
… _ _ O
• _ _ O
Page _ _ O
replacement _ _ O
algorithms _ _ O
Algorithm _ _ O
Comment _ _ O
OPT _ _ O
( _ _ O
Optimal _ _ O
) _ _ O
Not _ _ O
implementable _ _ O
, _ _ O
but _ _ O
useful _ _ O
as _ _ O
a _ _ O
benchmark _ _ O
NRU _ _ O
( _ _ O
Not _ _ O
Recently _ _ O
Used _ _ O
) _ _ O
Crude _ _ O
FIFO _ _ O
( _ _ O
First-In _ _ O
, _ _ O
First _ _ O
Out _ _ O
) _ _ O
Might _ _ O
throw _ _ O
out _ _ O
useful _ _ O
pages _ _ O
Second _ _ O
chance _ _ O
Big _ _ O
improvement _ _ O
over _ _ O
FIFO _ _ O
Clock _ _ O
Better _ _ O
implementation _ _ O
of _ _ O
second _ _ O
chance _ _ O
LRU _ _ O
( _ _ O
Least _ _ O
Recently _ _ O
Used _ _ O
) _ _ O
Excellent _ _ O
, _ _ O
but _ _ O
hard _ _ O
to _ _ O
implement _ _ O
exactly _ _ O
NFU _ _ O
( _ _ O
Not _ _ O
Frequently _ _ O
Used _ _ O
) _ _ O
Poor _ _ O
approximation _ _ O
to _ _ O
LRU _ _ O
Aging _ _ O
Good _ _ O
approximation _ _ O
to _ _ O
LRU _ _ O
, _ _ O
efficient _ _ O
to _ _ O
implement _ _ O
Working _ _ O
Set _ _ O
Somewhat _ _ O
expensive _ _ O
to _ _ O
implement _ _ O
WSClock _ _ O
Implementable _ _ O
version _ _ O
of _ _ O
Working _ _ O
Set _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
3 _ _ O

Muddiest _ _ O
Points _ _ O
( _ _ O
Memory _ _ O
) _ _ O
• _ _ O
Difference _ _ O
between _ _ O
NRU _ _ O
and _ _ O
NFU _ _ O
• _ _ O
For _ _ O
NRU _ _ O
, _ _ O
what _ _ O
is _ _ O
the _ _ O
way _ _ O
in _ _ O
which _ _ O
it _ _ O
separates _ _ O
the _ _ O
pages _ _ O
into _ _ O
classes _ _ O
in _ _ O
order _ _ O
to _ _ O
pick _ _ O
a _ _ O
victim _ _ O
from _ _ O
a _ _ O
group _ _ O
of _ _ O
the _ _ O
lowest _ _ O
nonempty _ _ O
class _ _ O
• _ _ O
On _ _ O
the _ _ O
clock _ _ O
for _ _ O
the _ _ O
clock _ _ O
algorithm _ _ O
, _ _ O
what _ _ O
is _ _ O
t _ _ O
and _ _ O
why _ _ O
does _ _ O
it _ _ O
change _ _ O
to _ _ O
32 _ _ O
on _ _ O
the _ _ O
referenced _ _ O
pages _ _ O
? _ _ O
• _ _ O
What _ _ O
are _ _ O
we _ _ O
adding _ _ O
to _ _ O
the _ _ O
shift _ _ O
register _ _ O
in _ _ O
the _ _ O
working _ _ O
set _ _ O
replacement _ _ O
algorithm _ _ O
? _ _ O
• _ _ O
Why _ _ O
is _ _ O
the _ _ O
tracking _ _ O
of _ _ O
a _ _ O
process _ _ O
’ _ _ O
working _ _ O
set _ _ O
necessary _ _ O
? _ _ O
• _ _ O
Which _ _ O
page _ _ O
replacement _ _ O
algorithm _ _ O
is _ _ O
the _ _ O
best _ _ O
( _ _ O
generally _ _ O
) _ _ O
? _ _ O
• _ _ O
The _ _ O
question _ _ O
on _ _ O
the _ _ O
homework _ _ O
that _ _ O
has _ _ O
the _ _ O
numerical _ _ O
entry _ _ O
answer _ _ O
. _ _ O
I _ _ O
'm _ _ O
not _ _ O
quite _ _ O
sure _ _ O
how _ _ O
to _ _ O
adapt _ _ O
what _ _ O
we _ _ O
discussed _ _ O
in _ _ O
class _ _ O
to _ _ O
that _ _ O
question _ _ O
. _ _ O
• _ _ O
How _ _ O
the _ _ O
eviction _ _ O
happens _ _ O
in _ _ O
the _ _ O
pages _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
4 _ _ O

Muddiest _ _ O
Points _ _ O
( _ _ O
Memory _ _ O
) _ _ O
• _ _ O
How _ _ O
do _ _ O
we _ _ O
determine _ _ O
tau _ _ O
again _ _ O
? _ _ O
• _ _ O
On _ _ O
the _ _ O
last _ _ O
slide _ _ O
about _ _ O
working _ _ O
set _ _ O
page _ _ O
, _ _ O
does _ _ O
the _ _ O
page _ _ O
table _ _ O
get _ _ O
updated _ _ O
every _ _ O
clock _ _ O
tick _ _ O
? _ _ O
Or _ _ O
do _ _ O
we _ _ O
only _ _ O
care _ _ O
about _ _ O
evey _ _ O
clock _ _ O
interrupt _ _ O
here _ _ O
? _ _ O
I _ _ O
am _ _ O
a _ _ O
little _ _ O
confused _ _ O
about _ _ O
how _ _ O
is _ _ O
the _ _ O
clock _ _ O
interrupt _ _ O
concept _ _ O
applied _ _ O
to _ _ O
the _ _ O
working _ _ O
set _ _ O
page _ _ O
replacement _ _ O
algorithm _ _ O
. _ _ O
• _ _ O
What _ _ O
is _ _ O
k _ _ O
in _ _ O
the _ _ O
working _ _ O
set _ _ O
graph _ _ O
? _ _ O
• _ _ O
in _ _ O
second _ _ O
chance _ _ O
and _ _ O
clock _ _ O
replacement _ _ O
, _ _ O
why _ _ O
do _ _ O
referenced _ _ O
pages _ _ O
have _ _ O
their _ _ O
ref _ _ O
bit _ _ O
set _ _ O
back _ _ O
to _ _ O
0 _ _ O
? _ _ O
• _ _ O
Do _ _ O
most _ _ O
algorithms _ _ O
need _ _ O
to _ _ O
iterate _ _ O
through _ _ O
all _ _ O
pages _ _ O
( _ _ O
O _ _ O
( _ _ O
N _ _ O
) _ _ O
runtime _ _ O
) _ _ O
? _ _ O
• _ _ O
I _ _ O
am _ _ O
confused _ _ O
on _ _ O
the _ _ O
details _ _ O
of _ _ O
thrashing _ _ O
• _ _ O
LRU _ _ O
page _ _ O
replacement _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
5 _ _ O

Muddiest _ _ O
Points _ _ O
( _ _ O
Misc _ _ O
. _ _ O
) _ _ O
• _ _ O
i _ _ O
had _ _ O
a _ _ O
bit _ _ O
of _ _ O
a _ _ O
hard _ _ O
time _ _ O
keeping _ _ O
up _ _ O
with _ _ O
pretty _ _ O
much _ _ O
everything _ _ O
but _ _ O
i _ _ O
think _ _ O
that _ _ O
's _ _ O
just _ _ O
a _ _ O
side _ _ O
effect _ _ O
of _ _ O
coming _ _ O
back _ _ O
from _ _ O
break _ _ O
• _ _ O
what _ _ O
is _ _ O
it _ _ O
that _ _ O
makes _ _ O
the _ _ O
TLB _ _ O
access _ _ O
fast _ _ O
while _ _ O
being _ _ O
slower _ _ O
for _ _ O
memory _ _ O
PTE _ _ O
access _ _ O
• _ _ O
when _ _ O
is _ _ O
the _ _ O
midterm _ _ O
grades _ _ O
posted _ _ O
also _ _ O
will _ _ O
there _ _ O
be _ _ O
makeup _ _ O
to _ _ O
get _ _ O
up _ _ O
to _ _ O
30 _ _ O
% _ _ O
back _ _ O
? _ _ O
• _ _ O
When _ _ O
are _ _ O
TLB _ _ O
entries _ _ O
replaced _ _ O
• _ _ O
Is _ _ O
" _ _ O
Frame _ _ O
" _ _ O
the _ _ O
same _ _ O
thing _ _ O
as _ _ O
a _ _ O
physical _ _ O
page _ _ O
? _ _ O
• _ _ O
How _ _ O
is _ _ O
the _ _ O
page _ _ O
table _ _ O
indexed _ _ O
? _ _ O
• _ _ O
redo _ _ O
a _ _ O
walk _ _ O
through _ _ O
the _ _ O
address _ _ O
translation _ _ O
process _ _ O
with _ _ O
the _ _ O
CPU _ _ O
, _ _ O
MMU _ _ O
, _ _ O
& _ _ O
TLB _ _ O
caching _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
6 _ _ O

Problem _ _ O
of _ _ O
the _ _ O
Day _ _ O
• _ _ O
How _ _ O
to _ _ O
simulate _ _ O
page _ _ O
replacement _ _ O
algorithms _ _ O
• _ _ O
FIFO _ _ O
/ _ _ O
Clock _ _ O
• _ _ O
LRU _ _ O
, _ _ O
OPT _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
7 _ _ O

• _ _ O
• _ _ O
How _ _ O
is _ _ O
modeling _ _ O
done _ _ O
? _ _ O
Generate _ _ O
a _ _ O
list _ _ O
of _ _ O
references _ _ O
• _ _ O
Artificial _ _ O
( _ _ O
made _ _ O
up _ _ O
) _ _ O
• _ _ O
Trace _ _ O
a _ _ O
real _ _ O
workload _ _ O
( _ _ O
set _ _ O
of _ _ O
processes _ _ O
) _ _ O
Use _ _ O
an _ _ O
array _ _ O
( _ _ O
or _ _ O
other _ _ O
structure _ _ O
) _ _ O
to _ _ O
track _ _ O
the _ _ O
pages _ _ O
in _ _ O
physical _ _ O
memory _ _ O
at _ _ O
any _ _ O
given _ _ O
time _ _ O
• _ _ O
May _ _ O
keep _ _ O
other _ _ O
information _ _ O
per _ _ O
page _ _ O
to _ _ O
help _ _ O
simulate _ _ O
the _ _ O
algorithm _ _ O
( _ _ O
modification _ _ O
time _ _ O
, _ _ O
time _ _ O
when _ _ O
paged _ _ O
in _ _ O
, _ _ O
etc _ _ O
. _ _ O
) _ _ O
• _ _ O
Run _ _ O
through _ _ O
references _ _ O
, _ _ O
applying _ _ O
the _ _ O
replacement _ _ O
algorithm _ _ O
• _ _ O
Example _ _ O
: _ _ O
FIFO _ _ O
replacement _ _ O
on _ _ O
reference _ _ O
string _ _ O
0 _ _ O
1 _ _ O
2 _ _ O
3 _ _ O
0 _ _ O
1 _ _ O
4 _ _ O
0 _ _ O
1 _ _ O
2 _ _ O
3 _ _ O
4 _ _ O
• _ _ O
Page _ _ O
replacements _ _ O
highlighted _ _ O
in _ _ O
yellow _ _ O
Page _ _ O
referenced _ _ O
0 _ _ O
1 _ _ O
2 _ _ O
3 _ _ O
0 _ _ O
1 _ _ O
4 _ _ O
0 _ _ O
1 _ _ O
2 _ _ O
3 _ _ O
4 _ _ O
Youngest _ _ O
page _ _ O
0 _ _ O
1 _ _ O
2 _ _ O
3 _ _ O
0 _ _ O
1 _ _ O
4 _ _ O
4 _ _ O
4 _ _ O
2 _ _ O
3 _ _ O
3 _ _ O
0 _ _ O
1 _ _ O
2 _ _ O
3 _ _ O
0 _ _ O
1 _ _ O
1 _ _ O
1 _ _ O
4 _ _ O
2 _ _ O
2 _ _ O
Oldest _ _ O
page _ _ O
0 _ _ O
1 _ _ O
2 _ _ O
3 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
1 _ _ O
4 _ _ O
4 _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
8 _ _ O

Interactive _ _ O
Simulation _ _ O
Tool _ _ O
• _ _ O
https _ _ O
: _ _ O
/ _ _ O
/ _ _ O
sim-50.github.io _ _ O
/ _ _ O
cs-tools _ _ O
/ _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
9 _ _ O

FIFO _ _ O
with _ _ O
3 _ _ O
frames _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
10 _ _ O

FIFO _ _ O
Example _ _ O
1 _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
11 _ _ O

FIFO _ _ O
with _ _ O
4 _ _ O
frames _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
12 _ _ O

• _ _ O
• _ _ O
• _ _ O
Belady _ _ O
’s _ _ O
anomaly _ _ O
Reduce _ _ O
the _ _ O
number _ _ O
of _ _ O
page _ _ O
faults _ _ O
by _ _ O
supplying _ _ O
more _ _ O
memory _ _ O
• _ _ O
Use _ _ O
previous _ _ O
reference _ _ O
string _ _ O
and _ _ O
FIFO _ _ O
algorithm _ _ O
• _ _ O
Add _ _ O
another _ _ O
page _ _ O
to _ _ O
physical _ _ O
memory _ _ O
( _ _ O
total _ _ O
4 _ _ O
pages _ _ O
) _ _ O
More _ _ O
page _ _ O
faults _ _ O
( _ _ O
10 _ _ O
vs. _ _ O
9 _ _ O
) _ _ O
, _ _ O
not _ _ O
fewer _ _ O
! _ _ O
• _ _ O
This _ _ O
is _ _ O
called _ _ O
Belady _ _ O
’s _ _ O
anomaly _ _ O
• _ _ O
Adding _ _ O
more _ _ O
pages _ _ O
should _ _ O
n’t _ _ O
result _ _ O
in _ _ O
worse _ _ O
performance _ _ O
! _ _ O
Motivated _ _ O
the _ _ O
study _ _ O
of _ _ O
paging _ _ O
algorithms _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
13 _ _ O

CLOCK _ _ O
Simulation _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
14 _ _ O

Modeling _ _ O
more _ _ O
replacement _ _ O
algorithms _ _ O
• _ _ O
Paging _ _ O
system _ _ O
characterized _ _ O
by _ _ O
: _ _ O
• _ _ O
Reference _ _ O
string _ _ O
of _ _ O
executing _ _ O
process _ _ O
• _ _ O
Page _ _ O
replacement _ _ O
algorithm _ _ O
• _ _ O
Number _ _ O
of _ _ O
page _ _ O
frames _ _ O
available _ _ O
in _ _ O
physical _ _ O
memory _ _ O
( _ _ O
m _ _ O
) _ _ O
• _ _ O
Model _ _ O
this _ _ O
by _ _ O
keeping _ _ O
track _ _ O
of _ _ O
all _ _ O
n _ _ O
pages _ _ O
referenced _ _ O
in _ _ O
array _ _ O
M _ _ O
• _ _ O
Top _ _ O
part _ _ O
of _ _ O
M _ _ O
has _ _ O
m _ _ O
pages _ _ O
in _ _ O
memory _ _ O
• _ _ O
Bottom _ _ O
part _ _ O
of _ _ O
M _ _ O
has _ _ O
n-m _ _ O
pages _ _ O
stored _ _ O
on _ _ O
disk _ _ O
• _ _ O
Page _ _ O
replacement _ _ O
occurs _ _ O
when _ _ O
page _ _ O
moves _ _ O
from _ _ O
top _ _ O
to _ _ O
bottom _ _ O
• _ _ O
Top _ _ O
and _ _ O
bottom _ _ O
parts _ _ O
may _ _ O
be _ _ O
rearranged _ _ O
without _ _ O
causing _ _ O
movement _ _ O
between _ _ O
memory _ _ O
and _ _ O
disk _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
15 _ _ O

• _ _ O
Example _ _ O
: _ _ O
LRU _ _ O
Model _ _ O
LRU _ _ O
replacement _ _ O
with _ _ O
• _ _ O
8 _ _ O
unique _ _ O
references _ _ O
in _ _ O
the _ _ O
reference _ _ O
string _ _ O
• _ _ O
4 _ _ O
pages _ _ O
of _ _ O
physical _ _ O
memory _ _ O
• _ _ O
Array _ _ O
state _ _ O
over _ _ O
time _ _ O
shown _ _ O
below _ _ O
• _ _ O
LRU _ _ O
treats _ _ O
list _ _ O
of _ _ O
pages _ _ O
like _ _ O
a _ _ O
stack _ _ O
0 _ _ O
2 _ _ O
1 _ _ O
3 _ _ O
5 _ _ O
4 _ _ O
6 _ _ O
3 _ _ O
7 _ _ O
4 _ _ O
7 _ _ O
3 _ _ O
3 _ _ O
5 _ _ O
5 _ _ O
3 _ _ O
1 _ _ O
1 _ _ O
1 _ _ O
7 _ _ O
1 _ _ O
3 _ _ O
4 _ _ O
1 _ _ O
0 _ _ O
2 _ _ O
1 _ _ O
3 _ _ O
5 _ _ O
4 _ _ O
6 _ _ O
3 _ _ O
7 _ _ O
4 _ _ O
7 _ _ O
3 _ _ O
3 _ _ O
5 _ _ O
5 _ _ O
3 _ _ O
1 _ _ O
1 _ _ O
1 _ _ O
7 _ _ O
1 _ _ O
3 _ _ O
4 _ _ O
1 _ _ O
0 _ _ O
2 _ _ O
1 _ _ O
3 _ _ O
5 _ _ O
4 _ _ O
6 _ _ O
3 _ _ O
7 _ _ O
4 _ _ O
7 _ _ O
7 _ _ O
3 _ _ O
3 _ _ O
5 _ _ O
3 _ _ O
3 _ _ O
3 _ _ O
1 _ _ O
7 _ _ O
1 _ _ O
3 _ _ O
4 _ _ O
0 _ _ O
2 _ _ O
1 _ _ O
3 _ _ O
5 _ _ O
4 _ _ O
6 _ _ O
3 _ _ O
3 _ _ O
4 _ _ O
4 _ _ O
7 _ _ O
7 _ _ O
7 _ _ O
5 _ _ O
5 _ _ O
5 _ _ O
3 _ _ O
3 _ _ O
7 _ _ O
1 _ _ O
3 _ _ O
0 _ _ O
2 _ _ O
1 _ _ O
3 _ _ O
5 _ _ O
4 _ _ O
6 _ _ O
6 _ _ O
6 _ _ O
6 _ _ O
4 _ _ O
4 _ _ O
4 _ _ O
7 _ _ O
7 _ _ O
7 _ _ O
5 _ _ O
5 _ _ O
5 _ _ O
7 _ _ O
7 _ _ O
0 _ _ O
2 _ _ O
1 _ _ O
1 _ _ O
5 _ _ O
5 _ _ O
5 _ _ O
5 _ _ O
5 _ _ O
6 _ _ O
6 _ _ O
6 _ _ O
4 _ _ O
4 _ _ O
4 _ _ O
4 _ _ O
4 _ _ O
4 _ _ O
5 _ _ O
5 _ _ O
0 _ _ O
2 _ _ O
2 _ _ O
1 _ _ O
1 _ _ O
1 _ _ O
1 _ _ O
1 _ _ O
1 _ _ O
1 _ _ O
1 _ _ O
6 _ _ O
6 _ _ O
6 _ _ O
6 _ _ O
6 _ _ O
6 _ _ O
6 _ _ O
6 _ _ O
0 _ _ O
0 _ _ O
2 _ _ O
2 _ _ O
2 _ _ O
2 _ _ O
2 _ _ O
2 _ _ O
2 _ _ O
2 _ _ O
2 _ _ O
2 _ _ O
2 _ _ O
2 _ _ O
2 _ _ O
2 _ _ O
2 _ _ O
2 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
0 _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
16 _ _ O

Stack _ _ O
algorithms _ _ O
• _ _ O
LRU _ _ O
is _ _ O
an _ _ O
example _ _ O
of _ _ O
a _ _ O
stack _ _ O
algorithm _ _ O
• _ _ O
For _ _ O
stack _ _ O
algorithms _ _ O
• _ _ O
Any _ _ O
page _ _ O
in _ _ O
memory _ _ O
with _ _ O
m _ _ O
physical _ _ O
pages _ _ O
is _ _ O
also _ _ O
in _ _ O
memory _ _ O
with _ _ O
m+1 _ _ O
physical _ _ O
pages _ _ O
• _ _ O
Increasing _ _ O
memory _ _ O
size _ _ O
is _ _ O
guaranteed _ _ O
to _ _ O
reduce _ _ O
( _ _ O
or _ _ O
at _ _ O
least _ _ O
not _ _ O
increase _ _ O
) _ _ O
the _ _ O
number _ _ O
of _ _ O
page _ _ O
faults _ _ O
• _ _ O
Stack _ _ O
algorithms _ _ O
do _ _ O
not _ _ O
suffer _ _ O
from _ _ O
Belady _ _ O
’s _ _ O
anomaly _ _ O
• _ _ O
Distance _ _ O
of _ _ O
a _ _ O
reference _ _ O
= _ _ O
= _ _ O
position _ _ O
of _ _ O
the _ _ O
page _ _ O
in _ _ O
the _ _ O
stack _ _ O
before _ _ O
the _ _ O
reference _ _ O
was _ _ O
made _ _ O
• _ _ O
Distance _ _ O
is _ _ O
 _ _ O
if _ _ O
no _ _ O
reference _ _ O
had _ _ O
been _ _ O
made _ _ O
before _ _ O
• _ _ O
Distance _ _ O
depends _ _ O
on _ _ O
reference _ _ O
string _ _ O
and _ _ O
paging _ _ O
algorithm _ _ O
: _ _ O
might _ _ O
be _ _ O
different _ _ O
for _ _ O
LRU _ _ O
and _ _ O
optimal _ _ O
( _ _ O
both _ _ O
stack _ _ O
algorithms _ _ O
) _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
17 _ _ O

Predicting _ _ O
page _ _ O
fault _ _ O
rates _ _ O
using _ _ O
distance _ _ O
• _ _ O
Distance _ _ O
can _ _ O
be _ _ O
used _ _ O
to _ _ O
predict _ _ O
page _ _ O
fault _ _ O
rates _ _ O
• _ _ O
Make _ _ O
a _ _ O
single _ _ O
pass _ _ O
over _ _ O
the _ _ O
reference _ _ O
string _ _ O
to _ _ O
generate _ _ O
the _ _ O
distance _ _ O
string _ _ O
on-the-fly _ _ O
• _ _ O
Keep _ _ O
an _ _ O
array _ _ O
of _ _ O
counts _ _ O
• _ _ O
Entry _ _ O
j _ _ O
counts _ _ O
the _ _ O
number _ _ O
of _ _ O
times _ _ O
distance _ _ O
j _ _ O
occurs _ _ O
in _ _ O
the _ _ O
distance _ _ O
string _ _ O
• _ _ O
The _ _ O
number _ _ O
of _ _ O
page _ _ O
faults _ _ O
for _ _ O
a _ _ O
memory _ _ O
of _ _ O
size _ _ O
m _ _ O
is _ _ O
the _ _ O
sum _ _ O
of _ _ O
the _ _ O
counts _ _ O
for _ _ O
j _ _ O
> _ _ O
m _ _ O
• _ _ O
This _ _ O
can _ _ O
be _ _ O
done _ _ O
in _ _ O
a _ _ O
single _ _ O
pass _ _ O
! _ _ O
• _ _ O
Makes _ _ O
for _ _ O
fast _ _ O
simulations _ _ O
of _ _ O
page _ _ O
replacement _ _ O
algorithms _ _ O
• _ _ O
This _ _ O
is _ _ O
why _ _ O
virtual _ _ O
memory _ _ O
theorists _ _ O
like _ _ O
stack _ _ O
algorithms _ _ O
! _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
18 _ _ O

LRU _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
19 _ _ O

OPT _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
20 _ _ O



