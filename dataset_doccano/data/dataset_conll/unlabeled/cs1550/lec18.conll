unlabeled|cs1550|lec18
-DOCSTART- -X- -X- O

Introduction _ _ O
to _ _ O
Operating _ _ O
Systems _ _ O
CS _ _ O
1550 _ _ O
Spring _ _ O
2022 _ _ O
Sherif _ _ O
Khattab _ _ O
ksm73@pitt.edu _ _ O
( _ _ O
Some _ _ O
slides _ _ O
are _ _ O
from _ _ O
Silberschatz _ _ O
, _ _ O
Galvin _ _ O
and _ _ O
Gagne _ _ O
© _ _ O
2013 _ _ O
) _ _ O

Announcements _ _ O
• _ _ O
Upcoming _ _ O
deadlines _ _ O
: _ _ O
• _ _ O
Quiz _ _ O
2 _ _ O
: _ _ O
due _ _ O
on _ _ O
3 _ _ O
/ _ _ O
25 _ _ O
• _ _ O
Homework _ _ O
9 _ _ O
: _ _ O
due _ _ O
on _ _ O
3 _ _ O
/ _ _ O
28 _ _ O
• _ _ O
Lab _ _ O
3 _ _ O
: _ _ O
due _ _ O
on _ _ O
4 _ _ O
/ _ _ O
1 _ _ O
• _ _ O
Project _ _ O
3 _ _ O
: _ _ O
due _ _ O
on _ _ O
4 _ _ O
/ _ _ O
11 _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
2 _ _ O

Previous _ _ O
Lecture _ _ O
… _ _ O
• _ _ O
Tracing _ _ O
page _ _ O
replacement _ _ O
algorithms _ _ O
• _ _ O
FIFO _ _ O
and _ _ O
CLOCK _ _ O
• _ _ O
LRU _ _ O
and _ _ O
OPT _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
3 _ _ O

Muddiest _ _ O
Points _ _ O
• _ _ O
Do _ _ O
page _ _ O
evictions _ _ O
happen _ _ O
across _ _ O
processes _ _ O
? _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
4 _ _ O

Local _ _ O
vs. _ _ O
global _ _ O
allocation _ _ O
policies _ _ O
◼ _ _ O
What _ _ O
is _ _ O
the _ _ O
pool _ _ O
of _ _ O
pages _ _ O
eligible _ _ O
to _ _ O
be _ _ O
replaced _ _ O
? _ _ O
Pages _ _ O
belonging _ _ O
to _ _ O
the _ _ O
process _ _ O
needing _ _ O
a _ _ O
new _ _ O
page _ _ O
◼ _ _ O
All _ _ O
pages _ _ O
in _ _ O
the _ _ O
system _ _ O
◼ _ _ O
◼ _ _ O
Local _ _ O
allocation _ _ O
: _ _ O
replace _ _ O
a _ _ O
page _ _ O
from _ _ O
this _ _ O
process _ _ O
May _ _ O
be _ _ O
more _ _ O
“ _ _ O
fair _ _ O
” _ _ O
: _ _ O
penalize _ _ O
processes _ _ O
that _ _ O
replace _ _ O
many _ _ O
pages _ _ O
◼ _ _ O
Can _ _ O
lead _ _ O
to _ _ O
poor _ _ O
performance _ _ O
: _ _ O
some _ _ O
processes _ _ O
need _ _ O
more _ _ O
pages _ _ O
than _ _ O
others _ _ O
◼ _ _ O
◼ _ _ O
Global _ _ O
allocation _ _ O
: _ _ O
replace _ _ O
a _ _ O
page _ _ O
from _ _ O
any _ _ O
process _ _ O
Last _ _ O
access _ _ O
time _ _ O
Page _ _ O
A0 _ _ O
A1 _ _ O
A2 _ _ O
A3 _ _ O
A4 _ _ O
B0 _ _ O
B1 _ _ O
A4 _ _ O
B2 _ _ O
C0 _ _ O
C1 _ _ O
C2 _ _ O
C3 _ _ O
C4 _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
14 _ _ O
12 _ _ O
8 _ _ O
5 _ _ O
10 _ _ O
9 _ _ O
3 _ _ O
16 _ _ O
12 _ _ O
8 _ _ O
5 _ _ O
4 _ _ O
Local _ _ O
allocation _ _ O
A4 _ _ O
Global _ _ O
allocation _ _ O
5 _ _ O

Muddiest _ _ O
Points _ _ O
◼ _ _ O
what _ _ O
measures _ _ O
do _ _ O
modern _ _ O
operating _ _ O
systems _ _ O
take _ _ O
in _ _ O
order _ _ O
to _ _ O
minimize _ _ O
thrashing _ _ O
? _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
6 _ _ O

Page _ _ O
fault _ _ O
rate _ _ O
vs. _ _ O
allocated _ _ O
frames _ _ O
◼ _ _ O
Local _ _ O
allocation _ _ O
may _ _ O
be _ _ O
more _ _ O
“ _ _ O
fair _ _ O
” _ _ O
◼ _ _ O
◼ _ _ O
Do _ _ O
n’t _ _ O
penalize _ _ O
other _ _ O
processes _ _ O
for _ _ O
high _ _ O
page _ _ O
fault _ _ O
rate _ _ O
Global _ _ O
allocation _ _ O
is _ _ O
better _ _ O
for _ _ O
overall _ _ O
system _ _ O
performance _ _ O
Take _ _ O
page _ _ O
frames _ _ O
from _ _ O
processes _ _ O
that _ _ O
do _ _ O
n’t _ _ O
need _ _ O
them _ _ O
as _ _ O
much _ _ O
◼ _ _ O
Reduce _ _ O
the _ _ O
overall _ _ O
page _ _ O
fault _ _ O
rate _ _ O
( _ _ O
even _ _ O
though _ _ O
rate _ _ O
for _ _ O
a _ _ O
single _ _ O
process _ _ O
may _ _ O
go _ _ O
up _ _ O
) _ _ O
◼ _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
7 _ _ O

Control _ _ O
overall _ _ O
page _ _ O
fault _ _ O
rate _ _ O
Despite _ _ O
good _ _ O
designs _ _ O
, _ _ O
system _ _ O
may _ _ O
still _ _ O
thrash _ _ O
◼ _ _ O
Most _ _ O
( _ _ O
or _ _ O
all _ _ O
) _ _ O
processes _ _ O
have _ _ O
high _ _ O
page _ _ O
fault _ _ O
rate _ _ O
◼ _ _ O
Some _ _ O
processes _ _ O
need _ _ O
more _ _ O
memory _ _ O
, _ _ O
… _ _ O
◼ _ _ O
but _ _ O
no _ _ O
processes _ _ O
need _ _ O
less _ _ O
memory _ _ O
( _ _ O
and _ _ O
could _ _ O
give _ _ O
some _ _ O
up _ _ O
) _ _ O
◼ _ _ O
Problem _ _ O
: _ _ O
no _ _ O
way _ _ O
to _ _ O
reduce _ _ O
page _ _ O
fault _ _ O
rate _ _ O
◼ _ _ O
Solution _ _ O
: _ _ O
Reduce _ _ O
number _ _ O
of _ _ O
processes _ _ O
competing _ _ O
for _ _ O
memory _ _ O
◼ _ _ O
Swap _ _ O
one _ _ O
or _ _ O
more _ _ O
to _ _ O
disk _ _ O
, _ _ O
divide _ _ O
up _ _ O
pages _ _ O
they _ _ O
held _ _ O
◼ _ _ O
Reconsider _ _ O
degree _ _ O
of _ _ O
multiprogramming _ _ O
◼ _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
8 _ _ O

Backing _ _ O
up _ _ O
an _ _ O
instruction _ _ O
◼ _ _ O
Problem _ _ O
: _ _ O
page _ _ O
fault _ _ O
happens _ _ O
in _ _ O
the _ _ O
middle _ _ O
of _ _ O
instruction _ _ O
execution _ _ O
Some _ _ O
changes _ _ O
may _ _ O
have _ _ O
already _ _ O
happened _ _ O
◼ _ _ O
Others _ _ O
may _ _ O
be _ _ O
waiting _ _ O
for _ _ O
VM _ _ O
to _ _ O
be _ _ O
fixed _ _ O
◼ _ _ O
◼ _ _ O
Solution _ _ O
: _ _ O
undo _ _ O
all _ _ O
of _ _ O
the _ _ O
changes _ _ O
made _ _ O
by _ _ O
the _ _ O
instruction _ _ O
Restart _ _ O
instruction _ _ O
from _ _ O
the _ _ O
beginning _ _ O
◼ _ _ O
This _ _ O
is _ _ O
easier _ _ O
on _ _ O
some _ _ O
architectures _ _ O
than _ _ O
others _ _ O
◼ _ _ O
◼ _ _ O
Example _ _ O
: _ _ O
LW _ _ O
R1 _ _ O
, _ _ O
12 _ _ O
( _ _ O
R2 _ _ O
) _ _ O
Page _ _ O
fault _ _ O
in _ _ O
fetching _ _ O
instruction _ _ O
: _ _ O
nothing _ _ O
to _ _ O
undo _ _ O
◼ _ _ O
Page _ _ O
fault _ _ O
in _ _ O
getting _ _ O
value _ _ O
at _ _ O
12 _ _ O
( _ _ O
R2 _ _ O
) _ _ O
: _ _ O
restart _ _ O
instruction _ _ O
◼ _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
9 _ _ O

Minimum _ _ O
memory _ _ O
allocation _ _ O
to _ _ O
a _ _ O
process _ _ O
◼ _ _ O
Example _ _ O
: _ _ O
ADD _ _ O
( _ _ O
Rd _ _ O
) _ _ O
+ _ _ O
, _ _ O
( _ _ O
Rs1 _ _ O
) _ _ O
+ _ _ O
, _ _ O
( _ _ O
Rs2 _ _ O
) _ _ O
+ _ _ O
◼ _ _ O
Page _ _ O
fault _ _ O
in _ _ O
writing _ _ O
to _ _ O
( _ _ O
Rd _ _ O
) _ _ O
: _ _ O
may _ _ O
have _ _ O
to _ _ O
undo _ _ O
an _ _ O
awful _ _ O
lot _ _ O
… _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
10 _ _ O

Muddiest _ _ O
Points _ _ O
• _ _ O
What _ _ O
is _ _ O
disk _ _ O
write _ _ O
? _ _ O
• _ _ O
What _ _ O
does _ _ O
the _ _ O
* _ _ O
mean _ _ O
? _ _ O
• _ _ O
CLOCK _ _ O
• _ _ O
When _ _ O
does _ _ O
the _ _ O
orbit _ _ O
( _ _ O
or _ _ O
bit _ _ O
? _ _ O
) _ _ O
change _ _ O
in _ _ O
the _ _ O
clock _ _ O
simulation _ _ O
( _ _ O
FIFO _ _ O
/ _ _ O
slide _ _ O
14 _ _ O
) _ _ O
• _ _ O
how _ _ O
does _ _ O
the _ _ O
clock _ _ O
iterate _ _ O
in _ _ O
the _ _ O
example _ _ O
from _ _ O
class _ _ O
? _ _ O
• _ _ O
LRU _ _ O
• _ _ O
Determining _ _ O
page _ _ O
faults _ _ O
in _ _ O
LRU _ _ O
modelling _ _ O
• _ _ O
How _ _ O
to _ _ O
calculate _ _ O
the _ _ O
distance _ _ O
• _ _ O
Is _ _ O
there _ _ O
a _ _ O
way _ _ O
to _ _ O
easily _ _ O
determine _ _ O
the _ _ O
disk _ _ O
writes _ _ O
using _ _ O
the _ _ O
LRU _ _ O
stack _ _ O
algorithm _ _ O
? _ _ O
• _ _ O
Would _ _ O
you _ _ O
please _ _ O
solve _ _ O
some _ _ O
example _ _ O
for _ _ O
LRU _ _ O
and _ _ O
OPT _ _ O
? _ _ O
Thank _ _ O
you _ _ O
so _ _ O
much _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
11 _ _ O

Muddiest _ _ O
Points _ _ O
• _ _ O
How _ _ O
the _ _ O
tracing _ _ O
changes _ _ O
between _ _ O
different _ _ O
types _ _ O
of _ _ O
scheduling _ _ O
• _ _ O
FIFO _ _ O
• _ _ O
why _ _ O
does _ _ O
FIFO _ _ O
have _ _ O
more _ _ O
page _ _ O
faults _ _ O
with _ _ O
more _ _ O
memory _ _ O
( _ _ O
small _ _ O
explanation _ _ O
? _ _ O
) _ _ O
? _ _ O
• _ _ O
How _ _ O
to _ _ O
implement _ _ O
stack _ _ O
algorithm _ _ O
in _ _ O
code _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
12 _ _ O

Muddiest _ _ O
Points _ _ O
• _ _ O
how _ _ O
to _ _ O
keep _ _ O
track _ _ O
of _ _ O
larger _ _ O
tables _ _ O
that _ _ O
can _ _ O
store _ _ O
more _ _ O
pages _ _ O
. _ _ O
• _ _ O
Problem _ _ O
of _ _ O
the _ _ O
Day _ _ O
! _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
13 _ _ O

Separating _ _ O
policy _ _ O
and _ _ O
mechanism _ _ O
◼ _ _ O
Mechanism _ _ O
for _ _ O
page _ _ O
replacement _ _ O
has _ _ O
to _ _ O
be _ _ O
in _ _ O
kernel _ _ O
Modifying _ _ O
page _ _ O
tables _ _ O
◼ _ _ O
Reading _ _ O
and _ _ O
writing _ _ O
page _ _ O
table _ _ O
entries _ _ O
◼ _ _ O
◼ _ _ O
Policy _ _ O
for _ _ O
deciding _ _ O
which _ _ O
pages _ _ O
to _ _ O
replace _ _ O
could _ _ O
be _ _ O
in _ _ O
user _ _ O
space _ _ O
◼ _ _ O
More _ _ O
flexibility _ _ O
3 _ _ O
. _ _ O
Request _ _ O
page _ _ O
User _ _ O
space _ _ O
Kernel _ _ O
space _ _ O
User _ _ O
process _ _ O
2 _ _ O
. _ _ O
Page _ _ O
needed _ _ O
4 _ _ O
. _ _ O
Page _ _ O
arrives _ _ O
External _ _ O
pager _ _ O
5 _ _ O
. _ _ O
Here _ _ O
is _ _ O
page _ _ O
! _ _ O
1 _ _ O
. _ _ O
Page _ _ O
fault _ _ O
Fault _ _ O
handler _ _ O
6 _ _ O
. _ _ O
Map _ _ O
in _ _ O
page _ _ O
MMU _ _ O
handler _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
14 _ _ O

Separating _ _ O
Policy _ _ O
and _ _ O
Mechanism _ _ O
for _ _ O
Page _ _ O
Replacement _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
15 _ _ O

Project _ _ O
3 _ _ O
: _ _ O
OPT _ _ O
Simulation _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
16 _ _ O

OPT _ _ O
Implementation _ _ O
Example _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
17 _ _ O

Project _ _ O
3 _ _ O
: _ _ O
LRU _ _ O
and _ _ O
miscellaneous _ _ O
hints _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
18 _ _ O

Project _ _ O
3 _ _ O
: _ _ O
Writeup _ _ O
hints _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
19 _ _ O

Problem _ _ O
of _ _ O
the _ _ O
Day _ _ O
• _ _ O
How _ _ O
to _ _ O
keep _ _ O
track _ _ O
of _ _ O
larger _ _ O
page _ _ O
tables _ _ O
that _ _ O
can _ _ O
store _ _ O
more _ _ O
pages _ _ O
• _ _ O
How _ _ O
big _ _ O
can _ _ O
a _ _ O
page _ _ O
table _ _ O
be _ _ O
? _ _ O
• _ _ O
64-bit _ _ O
machine _ _ O
• _ _ O
4 _ _ O
KB _ _ O
page _ _ O
size _ _ O
• _ _ O
How _ _ O
many _ _ O
pages _ _ O
? _ _ O
• _ _ O
How _ _ O
many _ _ O
PTE _ _ O
? _ _ O
• _ _ O
How _ _ O
big _ _ O
is _ _ O
a _ _ O
PTE _ _ O
? _ _ O
• _ _ O
How _ _ O
big _ _ O
is _ _ O
the _ _ O
page _ _ O
table _ _ O
of _ _ O
one _ _ O
process _ _ O
? _ _ O
CS _ _ O
1550 _ _ O
– _ _ O
Operating _ _ O
Systems _ _ O
– _ _ O
Sherif _ _ O
Khattab _ _ O
20 _ _ O



