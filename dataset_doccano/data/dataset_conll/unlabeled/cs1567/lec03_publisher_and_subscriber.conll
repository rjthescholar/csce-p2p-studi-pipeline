unlabeled|cs1567|lec03_publisher_and_subscriber
-DOCSTART- -X- -X- O

Publisher _ _ O
and _ _ O
Subscriber _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
Publisher _ _ O
and _ _ O
Subscriber _ _ O

Publisher _ _ O
A _ _ O
publisher _ _ O
publishes _ _ O
data _ _ O
to _ _ O
topics _ _ O
A _ _ O
publisher _ _ O
has _ _ O
to _ _ O
have _ _ O
a _ _ O
name _ _ O
( _ _ O
for _ _ O
debugging _ _ O
purpose _ _ O
) _ _ O
A _ _ O
topic _ _ O
is _ _ O
a _ _ O
named _ _ O
bus _ _ O
( _ _ O
need _ _ O
a _ _ O
name _ _ O
as _ _ O
well _ _ O
) _ _ O
A _ _ O
topic _ _ O
must _ _ O
have _ _ O
a _ _ O
type _ _ O
associated _ _ O
with _ _ O
it _ _ O
( _ _ O
strongly _ _ O
typed _ _ O
) _ _ O
Do _ _ O
not _ _ O
need _ _ O
to _ _ O
care _ _ O
who _ _ O
are _ _ O
subscribers _ _ O
( _ _ O
anonymous _ _ O
) _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
Publisher _ _ O
and _ _ O
Subscriber _ _ O

talker.py _ _ O
# _ _ O
! _ _ O
/usr _ _ O
/ _ _ O
bin _ _ O
/ _ _ O
env _ _ O
python _ _ O
import _ _ O
rospy _ _ O
from _ _ O
std_msgs.msg _ _ O
import _ _ O
String _ _ O
def _ _ O
talker _ _ O
( _ _ O
) _ _ O
: _ _ O
pub _ _ O
= _ _ O
rospy.Publisher _ _ O
( _ _ O
' _ _ O
chatter _ _ O
' _ _ O
, _ _ O
String _ _ O
, _ _ O
queue_size=1 _ _ O
) _ _ O
rospy.init_node _ _ O
( _ _ O
' _ _ O
talker _ _ O
' _ _ O
, _ _ O
anonymous=True _ _ O
) _ _ O
rate _ _ O
= _ _ O
rospy.Rate _ _ O
( _ _ O
10 _ _ O
) _ _ O
# _ _ O
10hz _ _ O
while _ _ O
not _ _ O
rospy.is_shutdown _ _ O
( _ _ O
) _ _ O
: _ _ O
hello_str _ _ O
= _ _ O
" _ _ O
hello _ _ O
world _ _ O
% _ _ O
s _ _ O
" _ _ O
% _ _ O
rospy.get_time _ _ O
( _ _ O
) _ _ O
rospy.loginfo _ _ O
( _ _ O
hello_str _ _ O
) _ _ O
pub.publish _ _ O
( _ _ O
hello_str _ _ O
) _ _ O
rate.sleep _ _ O
( _ _ O
) _ _ O
if _ _ O
_ _ _ O
_ _ _ O
name _ _ O
_ _ _ O
_ _ _ O
= _ _ O
= _ _ O
' _ _ O
_ _ _ O
_ _ _ O
main _ _ O
_ _ _ O
_ _ _ O
' _ _ O
: _ _ O
try _ _ O
: _ _ O
talker _ _ O
( _ _ O
) _ _ O
except _ _ O
rospy.ROSInterruptException _ _ O
: _ _ O
pass _ _ O
Do _ _ O
not _ _ O
forget _ _ O
to _ _ O
make _ _ O
this _ _ O
file _ _ O
executable _ _ O
( _ _ O
chmod _ _ O
+ _ _ O
x _ _ O
talker.py _ _ O
) _ _ O
You _ _ O
only _ _ O
need _ _ O
to _ _ O
set _ _ O
it _ _ O
once _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
Publisher _ _ O
and _ _ O
Subscriber _ _ O

talker.py _ _ O
# _ _ O
! _ _ O
/usr _ _ O
/ _ _ O
bin _ _ O
/ _ _ O
env _ _ O
python _ _ O
If _ _ O
you _ _ O
try _ _ O
to _ _ O
create _ _ O
a _ _ O
node _ _ O
using _ _ O
Python _ _ O
, _ _ O
the _ _ O
above _ _ O
line _ _ O
must _ _ O
be _ _ O
at _ _ O
the _ _ O
top _ _ O
It _ _ O
let _ _ O
the _ _ O
OS _ _ O
knows _ _ O
that _ _ O
this _ _ O
program _ _ O
should _ _ O
be _ _ O
passed _ _ O
to _ _ O
the _ _ O
Python _ _ O
interpreter _ _ O
import _ _ O
rospy _ _ O
This _ _ O
line _ _ O
should _ _ O
be _ _ O
in _ _ O
all _ _ O
Pyhton _ _ O
node _ _ O
It _ _ O
imports _ _ O
all _ _ O
of _ _ O
the _ _ O
basic _ _ O
functionality _ _ O
that _ _ O
we _ _ O
will _ _ O
need _ _ O
from _ _ O
std_msgs.msg _ _ O
import _ _ O
String _ _ O
We _ _ O
are _ _ O
going _ _ O
to _ _ O
publish _ _ O
messages _ _ O
of _ _ O
type _ _ O
String _ _ O
We _ _ O
need _ _ O
to _ _ O
import _ _ O
String _ _ O
from _ _ O
the _ _ O
standard _ _ O
message _ _ O
std _ _ O
msg.msg _ _ O
. _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
Publisher _ _ O
and _ _ O
Subscriber _ _ O

talker.py _ _ O
pub _ _ O
= _ _ O
rospy.Publisher _ _ O
( _ _ O
' _ _ O
chatter _ _ O
' _ _ O
, _ _ O
String _ _ O
, _ _ O
queue_size=1 _ _ O
) _ _ O
This _ _ O
create _ _ O
an _ _ O
object _ _ O
of _ _ O
type _ _ O
Publisher _ _ O
and _ _ O
can _ _ O
be _ _ O
referred _ _ O
to _ _ O
by _ _ O
the _ _ O
variable _ _ O
named _ _ O
pub _ _ O
rospy.Publisher _ _ O
( _ _ O
) _ _ O
is _ _ O
a _ _ O
constructor _ _ O
: _ _ O
First _ _ O
Argument _ _ O
: _ _ O
The _ _ O
topic _ _ O
name _ _ O
( _ _ O
chatter _ _ O
) _ _ O
Second _ _ O
Argument _ _ O
: _ _ O
The _ _ O
type _ _ O
of _ _ O
message _ _ O
( _ _ O
String _ _ O
) _ _ O
Third _ _ O
Argument _ _ O
: _ _ O
The _ _ O
maximum _ _ O
number _ _ O
of _ _ O
message _ _ O
that _ _ O
will _ _ O
be _ _ O
stored _ _ O
in _ _ O
case _ _ O
any _ _ O
subscriber _ _ O
is _ _ O
not _ _ O
receiving _ _ O
them _ _ O
fast _ _ O
enough _ _ O
rospy.init_node _ _ O
( _ _ O
' _ _ O
talker _ _ O
' _ _ O
, _ _ O
anonymous=True _ _ O
) _ _ O
Initialize _ _ O
this _ _ O
node _ _ O
with _ _ O
the _ _ O
name _ _ O
talker _ _ O
Should _ _ O
be _ _ O
anonymous _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
Publisher _ _ O
and _ _ O
Subscriber _ _ O

talker.py _ _ O
rate _ _ O
= _ _ O
rospy.Rate _ _ O
( _ _ O
10 _ _ O
) _ _ O
# _ _ O
10hz _ _ O
Create _ _ O
an _ _ O
object _ _ O
of _ _ O
type _ _ O
Rate _ _ O
and _ _ O
can _ _ O
be _ _ O
referred _ _ O
to _ _ O
by _ _ O
the _ _ O
variable _ _ O
named _ _ O
rate _ _ O
rospy.Rate _ _ O
( _ _ O
) _ _ O
is _ _ O
a _ _ O
constructor _ _ O
The _ _ O
argument _ _ O
10 _ _ O
specifies _ _ O
the _ _ O
frequency _ _ O
in _ _ O
Hertz _ _ O
rate.sleep _ _ O
( _ _ O
) _ _ O
will _ _ O
be _ _ O
used _ _ O
later _ _ O
which _ _ O
will _ _ O
put _ _ O
this _ _ O
node _ _ O
to _ _ O
sleep _ _ O
for _ _ O
1 _ _ O
/ _ _ O
frequency _ _ O
second _ _ O
( _ _ O
0.1 _ _ O
second _ _ O
in _ _ O
this _ _ O
case _ _ O
) _ _ O
. _ _ O
while _ _ O
not _ _ O
rospy.is_shutdown _ _ O
( _ _ O
) _ _ O
: _ _ O
A _ _ O
loop _ _ O
is _ _ O
a _ _ O
fairly _ _ O
standard _ _ O
rospy _ _ O
construct _ _ O
. _ _ O
This _ _ O
node _ _ O
should _ _ O
stop _ _ O
if _ _ O
it _ _ O
gets _ _ O
a _ _ O
signal _ _ O
to _ _ O
shutdown _ _ O
. _ _ O
rospy.is _ _ O
shutdown _ _ O
( _ _ O
) _ _ O
return _ _ O
True _ _ O
if _ _ O
this _ _ O
node _ _ O
gets _ _ O
the _ _ O
signal _ _ O
to _ _ O
shutdown _ _ O
. _ _ O
The _ _ O
other _ _ O
way _ _ O
to _ _ O
simply _ _ O
shut _ _ O
this _ _ O
node _ _ O
down _ _ O
is _ _ O
by _ _ O
pressing _ _ O
Ctrl-c _ _ O
on _ _ O
the _ _ O
console _ _ O
that _ _ O
this _ _ O
node _ _ O
is _ _ O
executing _ _ O
. _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
Publisher _ _ O
and _ _ O
Subscriber _ _ O

talker.py _ _ O
hello_str _ _ O
= _ _ O
" _ _ O
hello _ _ O
world _ _ O
% _ _ O
s _ _ O
" _ _ O
% _ _ O
rospy.get_time _ _ O
( _ _ O
) _ _ O
Create _ _ O
a _ _ O
string _ _ O
named _ _ O
hello _ _ O
str _ _ O
. _ _ O
rospy.get _ _ O
time _ _ O
( _ _ O
) _ _ O
returns _ _ O
the _ _ O
current _ _ O
time _ _ O
. _ _ O
rospy.loginfo _ _ O
( _ _ O
hello_str _ _ O
) _ _ O
Print _ _ O
the _ _ O
message _ _ O
on _ _ O
the _ _ O
console _ _ O
screen _ _ O
that _ _ O
this _ _ O
node _ _ O
is _ _ O
executing _ _ O
. _ _ O
Store _ _ O
the _ _ O
message _ _ O
into _ _ O
node _ _ O
â€™s _ _ O
log _ _ O
file _ _ O
Can _ _ O
also _ _ O
be _ _ O
viewed _ _ O
from _ _ O
any _ _ O
console _ _ O
using _ _ O
rqt _ _ O
console _ _ O
command _ _ O
. _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
Publisher _ _ O
and _ _ O
Subscriber _ _ O

talker.py _ _ O
pub.publish _ _ O
( _ _ O
hello_str _ _ O
) _ _ O
Publish _ _ O
the _ _ O
message _ _ O
rate.sleep _ _ O
( _ _ O
) _ _ O
Put _ _ O
this _ _ O
node _ _ O
to _ _ O
sleep _ _ O
for _ _ O
0.1 _ _ O
second _ _ O
( _ _ O
10hz _ _ O
) _ _ O
. _ _ O
if _ _ O
_ _ _ O
_ _ _ O
name _ _ O
_ _ _ O
_ _ _ O
= _ _ O
= _ _ O
' _ _ O
_ _ _ O
_ _ _ O
main _ _ O
_ _ _ O
_ _ _ O
' _ _ O
: _ _ O
try _ _ O
: _ _ O
talker _ _ O
( _ _ O
) _ _ O
except _ _ O
rospy.ROSInterruptException _ _ O
: _ _ O
pass _ _ O
Interrupt _ _ O
may _ _ O
be _ _ O
generated _ _ O
by _ _ O
rospy.Rate.sleep _ _ O
( _ _ O
) _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
Publisher _ _ O
and _ _ O
Subscriber _ _ O

Subscriber _ _ O
A _ _ O
subscriber _ _ O
subscribes _ _ O
to _ _ O
receive _ _ O
data _ _ O
from _ _ O
topics _ _ O
A _ _ O
subscriber _ _ O
has _ _ O
to _ _ O
have _ _ O
a _ _ O
name _ _ O
( _ _ O
for _ _ O
debugging _ _ O
purpose _ _ O
) _ _ O
A _ _ O
topic _ _ O
is _ _ O
a _ _ O
named _ _ O
bus _ _ O
( _ _ O
need _ _ O
a _ _ O
name _ _ O
as _ _ O
well _ _ O
) _ _ O
A _ _ O
topic _ _ O
must _ _ O
have _ _ O
a _ _ O
type _ _ O
associated _ _ O
with _ _ O
it _ _ O
( _ _ O
strongly _ _ O
typed _ _ O
) _ _ O
Do _ _ O
not _ _ O
need _ _ O
to _ _ O
care _ _ O
who _ _ O
are _ _ O
publishers _ _ O
( _ _ O
anonymous _ _ O
) _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
Publisher _ _ O
and _ _ O
Subscriber _ _ O

listener.py _ _ O
# _ _ O
! _ _ O
/usr _ _ O
/ _ _ O
bin _ _ O
/ _ _ O
env _ _ O
python _ _ O
import _ _ O
rospy _ _ O
from _ _ O
std_msgs.msg _ _ O
import _ _ O
String _ _ O
def _ _ O
callback _ _ O
( _ _ O
data _ _ O
) _ _ O
: _ _ O
rospy.loginfo _ _ O
( _ _ O
rospy.get_caller_id _ _ O
( _ _ O
) _ _ O
+ _ _ O
" _ _ O
I _ _ O
heard _ _ O
% _ _ O
s _ _ O
" _ _ O
, _ _ O
data.data _ _ O
) _ _ O
def _ _ O
listener _ _ O
( _ _ O
) _ _ O
: _ _ O
rospy.init_node _ _ O
( _ _ O
' _ _ O
listener _ _ O
' _ _ O
, _ _ O
anonymous=True _ _ O
) _ _ O
rospy.Subscriber _ _ O
( _ _ O
"chatter _ _ O
" _ _ O
, _ _ O
String _ _ O
, _ _ O
callback _ _ O
) _ _ O
rospy.spin _ _ O
( _ _ O
) _ _ O
if _ _ O
_ _ _ O
_ _ _ O
name _ _ O
_ _ _ O
_ _ _ O
= _ _ O
= _ _ O
' _ _ O
_ _ _ O
_ _ _ O
main _ _ O
_ _ _ O
_ _ _ O
' _ _ O
: _ _ O
listener _ _ O
( _ _ O
) _ _ O
Do _ _ O
not _ _ O
forget _ _ O
to _ _ O
make _ _ O
this _ _ O
file _ _ O
executable _ _ O
( _ _ O
chmod _ _ O
+ _ _ O
x _ _ O
talker.py _ _ O
) _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
Publisher _ _ O
and _ _ O
Subscriber _ _ O

listener.py _ _ O
rospy.init_node _ _ O
( _ _ O
' _ _ O
listener _ _ O
' _ _ O
, _ _ O
anonymous=True _ _ O
) _ _ O
Initialize _ _ O
this _ _ O
node _ _ O
with _ _ O
the _ _ O
name _ _ O
listener _ _ O
Should _ _ O
be _ _ O
anonymous _ _ O
rospy.Subscriber _ _ O
( _ _ O
"chatter _ _ O
" _ _ O
, _ _ O
String _ _ O
, _ _ O
callback _ _ O
) _ _ O
Subscribes _ _ O
to _ _ O
the _ _ O
topic _ _ O
named _ _ O
chatter _ _ O
. _ _ O
The _ _ O
type _ _ O
of _ _ O
message _ _ O
is _ _ O
String _ _ O
( _ _ O
must _ _ O
be _ _ O
the _ _ O
same _ _ O
as _ _ O
the _ _ O
publisher _ _ O
) _ _ O
Every _ _ O
time _ _ O
a _ _ O
message _ _ O
is _ _ O
received _ _ O
, _ _ O
call _ _ O
the _ _ O
function _ _ O
callback _ _ O
( _ _ O
) _ _ O
rospy.spin _ _ O
( _ _ O
) _ _ O
Keeps _ _ O
the _ _ O
node _ _ O
from _ _ O
exiting _ _ O
until _ _ O
the _ _ O
node _ _ O
has _ _ O
been _ _ O
shutdown _ _ O
. _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
Publisher _ _ O
and _ _ O
Subscriber _ _ O

The _ _ O
callback _ _ O
( _ _ O
) _ _ O
Function _ _ O
This _ _ O
callback _ _ O
( _ _ O
) _ _ O
function _ _ O
will _ _ O
be _ _ O
called _ _ O
every _ _ O
time _ _ O
it _ _ O
receives _ _ O
a _ _ O
message _ _ O
on _ _ O
the _ _ O
topic _ _ O
chatter _ _ O
: _ _ O
def _ _ O
callback _ _ O
( _ _ O
data _ _ O
) _ _ O
: _ _ O
rospy.loginfo _ _ O
( _ _ O
rospy.get_caller_id _ _ O
( _ _ O
) _ _ O
+ _ _ O
" _ _ O
I _ _ O
heard _ _ O
% _ _ O
s _ _ O
" _ _ O
, _ _ O
data.data _ _ O
) _ _ O
The _ _ O
argument _ _ O
data _ _ O
has _ _ O
type _ _ O
std _ _ O
msgs _ _ O
/ _ _ O
String _ _ O
A _ _ O
data _ _ O
of _ _ O
this _ _ O
type _ _ O
consists _ _ O
of _ _ O
one _ _ O
component _ _ O
of _ _ O
type _ _ O
string _ _ O
named _ _ O
data _ _ O
To _ _ O
access _ _ O
the _ _ O
actual _ _ O
string _ _ O
, _ _ O
we _ _ O
use _ _ O
data.data _ _ O
like _ _ O
C _ _ O
structure _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
Publisher _ _ O
and _ _ O
Subscriber _ _ O

messenger.py _ _ O
Sometimes _ _ O
your _ _ O
ROS _ _ O
node _ _ O
may _ _ O
behave _ _ O
like _ _ O
a _ _ O
middle _ _ O
man _ _ O
Subscribes _ _ O
to _ _ O
a _ _ O
topic _ _ O
to _ _ O
receive _ _ O
data _ _ O
Processes _ _ O
data _ _ O
Publishes _ _ O
new _ _ O
data _ _ O
to _ _ O
a _ _ O
new _ _ O
topic _ _ O
Example _ _ O
: _ _ O
Blob _ _ O
Detection _ _ O
Subscribes _ _ O
to _ _ O
a _ _ O
topic _ _ O
to _ _ O
receive _ _ O
a _ _ O
series _ _ O
of _ _ O
image _ _ O
For _ _ O
each _ _ O
image _ _ O
received _ _ O
, _ _ O
find _ _ O
blobs _ _ O
of _ _ O
a _ _ O
specific _ _ O
color _ _ O
, _ _ O
and _ _ O
calculate _ _ O
the _ _ O
middle _ _ O
point _ _ O
of _ _ O
each _ _ O
blob _ _ O
Publishes _ _ O
an _ _ O
array _ _ O
of _ _ O
coordinates _ _ O
of _ _ O
blobs _ _ O
This _ _ O
type _ _ O
of _ _ O
node _ _ O
subscribes _ _ O
as _ _ O
well _ _ O
as _ _ O
publishes _ _ O
data _ _ O
Example _ _ O
: _ _ O
messenger _ _ O
node _ _ O
subscribe _ _ O
to _ _ O
the _ _ O
topic _ _ O
chatter1 _ _ O
and _ _ O
publish _ _ O
the _ _ O
modified _ _ O
message _ _ O
to _ _ O
the _ _ O
topic _ _ O
chatter2 _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
Publisher _ _ O
and _ _ O
Subscriber _ _ O

messenger.py _ _ O
# _ _ O
! _ _ O
/usr _ _ O
/ _ _ O
bin _ _ O
/ _ _ O
env _ _ O
python _ _ O
import _ _ O
rospy _ _ O
from _ _ O
std_msgs.msg _ _ O
import _ _ O
String _ _ O
pub _ _ O
= _ _ O
rospy.Publisher _ _ O
( _ _ O
' _ _ O
chatter2 _ _ O
' _ _ O
, _ _ O
String _ _ O
, _ _ O
queue_size=10 _ _ O
) _ _ O
def _ _ O
chatterCallback _ _ O
( _ _ O
data _ _ O
) _ _ O
: _ _ O
global _ _ O
pub _ _ O
messenger_str _ _ O
= _ _ O
" _ _ O
Messenger _ _ O
heard _ _ O
% _ _ O
s _ _ O
" _ _ O
% _ _ O
data.data _ _ O
pub.publish _ _ O
( _ _ O
messenger_str _ _ O
) _ _ O
; _ _ O
def _ _ O
messenger _ _ O
( _ _ O
) _ _ O
: _ _ O
rospy.init_node _ _ O
( _ _ O
' _ _ O
messenger _ _ O
' _ _ O
, _ _ O
anonymous=True _ _ O
) _ _ O
rospy.Subscriber _ _ O
( _ _ O
"chatter1 _ _ O
" _ _ O
, _ _ O
String _ _ O
, _ _ O
chatterCallback _ _ O
) _ _ O
rospy.spin _ _ O
( _ _ O
) _ _ O
if _ _ O
_ _ _ O
_ _ _ O
name _ _ O
_ _ _ O
_ _ _ O
= _ _ O
= _ _ O
' _ _ O
_ _ _ O
_ _ _ O
main _ _ O
_ _ _ O
_ _ _ O
' _ _ O
: _ _ O
messenger _ _ O
( _ _ O
) _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
Publisher _ _ O
and _ _ O
Subscriber _ _ O

Notes _ _ O
about _ _ O
Distributed _ _ O
Computing _ _ O
ROS _ _ O
environment _ _ O
is _ _ O
similar _ _ O
to _ _ O
distributed _ _ O
environment _ _ O
. _ _ O
Requires _ _ O
a _ _ O
number _ _ O
of _ _ O
processes _ _ O
to _ _ O
work _ _ O
together _ _ O
to _ _ O
finish _ _ O
a _ _ O
job _ _ O
. _ _ O
If _ _ O
a _ _ O
process _ _ O
dies _ _ O
, _ _ O
the _ _ O
whole _ _ O
thing _ _ O
will _ _ O
not _ _ O
work _ _ O
properly _ _ O
. _ _ O
We _ _ O
need _ _ O
to _ _ O
make _ _ O
sure _ _ O
that _ _ O
each _ _ O
process _ _ O
is _ _ O
alive _ _ O
until _ _ O
the _ _ O
job _ _ O
is _ _ O
done _ _ O
. _ _ O
Generally _ _ O
, _ _ O
if _ _ O
a _ _ O
program _ _ O
finish _ _ O
, _ _ O
its _ _ O
process _ _ O
dies _ _ O
( _ _ O
exit _ _ O
) _ _ O
. _ _ O
In _ _ O
ROS _ _ O
, _ _ O
there _ _ O
are _ _ O
two _ _ O
main _ _ O
methods _ _ O
to _ _ O
keep _ _ O
a _ _ O
process _ _ O
alive _ _ O
. _ _ O
Loop _ _ O
until _ _ O
a _ _ O
job _ _ O
is _ _ O
done _ _ O
. _ _ O
while _ _ O
not _ _ O
rospy.is_shutdown _ _ O
( _ _ O
) _ _ O
: _ _ O
: _ _ O
Use _ _ O
rospy.spin _ _ O
( _ _ O
) _ _ O
which _ _ O
is _ _ O
almost _ _ O
the _ _ O
same _ _ O
as _ _ O
while _ _ O
not _ _ O
rospy.is_shutdown _ _ O
( _ _ O
) _ _ O
: _ _ O
pass _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
Publisher _ _ O
and _ _ O
Subscriber _ _ O

Loop _ _ O
vs _ _ O
rospy.spin _ _ O
( _ _ O
) _ _ O
You _ _ O
should _ _ O
use _ _ O
either _ _ O
loop _ _ O
or _ _ O
rospy.spin _ _ O
( _ _ O
) _ _ O
but _ _ O
not _ _ O
both _ _ O
in _ _ O
the _ _ O
same _ _ O
program _ _ O
. _ _ O
Use _ _ O
loop _ _ O
when _ _ O
your _ _ O
program _ _ O
has _ _ O
to _ _ O
continuously _ _ O
checking _ _ O
and _ _ O
doing _ _ O
something _ _ O
. _ _ O
Continuously _ _ O
publishes _ _ O
messages _ _ O
. _ _ O
Continuously _ _ O
monitors _ _ O
variable _ _ O
values _ _ O
. _ _ O
Use _ _ O
rospy.spin _ _ O
( _ _ O
) _ _ O
when _ _ O
you _ _ O
program _ _ O
can _ _ O
go _ _ O
to _ _ O
sleep _ _ O
until _ _ O
something _ _ O
happen _ _ O
. _ _ O
Process _ _ O
an _ _ O
image _ _ O
or _ _ O
data _ _ O
whenever _ _ O
it _ _ O
is _ _ O
available _ _ O
( _ _ O
subscriber _ _ O
) _ _ O
, _ _ O
publish _ _ O
just _ _ O
one _ _ O
message _ _ O
, _ _ O
and _ _ O
go _ _ O
back _ _ O
to _ _ O
sleep _ _ O
. _ _ O
Often _ _ O
time _ _ O
, _ _ O
the _ _ O
choice _ _ O
of _ _ O
loop _ _ O
vs _ _ O
rospy.spin _ _ O
( _ _ O
) _ _ O
is _ _ O
not _ _ O
clear _ _ O
. _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
Publisher _ _ O
and _ _ O
Subscriber _ _ O

Cleanup _ _ O
A _ _ O
process _ _ O
( _ _ O
node _ _ O
) _ _ O
can _ _ O
be _ _ O
killed _ _ O
by _ _ O
pressing _ _ O
Ctrl-c _ _ O
or _ _ O
receiving _ _ O
the _ _ O
kill _ _ O
signal _ _ O
from _ _ O
ROS _ _ O
master _ _ O
Sometime _ _ O
, _ _ O
a _ _ O
process _ _ O
needs _ _ O
to _ _ O
clean _ _ O
up _ _ O
before _ _ O
exit _ _ O
. _ _ O
If _ _ O
robot _ _ O
is _ _ O
currently _ _ O
moving _ _ O
, _ _ O
stop _ _ O
it _ _ O
first _ _ O
and _ _ O
exit _ _ O
Otherwise _ _ O
, _ _ O
robot _ _ O
may _ _ O
keep _ _ O
moving _ _ O
non-stop _ _ O
Cleanup _ _ O
can _ _ O
be _ _ O
done _ _ O
by _ _ O
registering _ _ O
shutdown _ _ O
hooks _ _ O
: _ _ O
def _ _ O
cleanup _ _ O
( _ _ O
) _ _ O
: _ _ O
# _ _ O
stop _ _ O
the _ _ O
robot _ _ O
rospy.on_shutdown _ _ O
( _ _ O
cleanup _ _ O
) _ _ O
When _ _ O
the _ _ O
program _ _ O
receive _ _ O
the _ _ O
kill _ _ O
signal _ _ O
, _ _ O
it _ _ O
will _ _ O
call _ _ O
the _ _ O
function _ _ O
cleanup _ _ O
( _ _ O
) _ _ O
first _ _ O
and _ _ O
then _ _ O
exit _ _ O
A _ _ O
node _ _ O
can _ _ O
manually _ _ O
shut _ _ O
itself _ _ O
down _ _ O
. _ _ O
rospy.signal_shutdown _ _ O
( _ _ O
"I _ _ O
am _ _ O
done _ _ O
. _ _ O
" _ _ O
) _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
Publisher _ _ O
and _ _ O
Subscriber _ _ O

About _ _ O
Callback _ _ O
Functions _ _ O
Recall _ _ O
the _ _ O
listener _ _ O
node _ _ O
. _ _ O
# _ _ O
! _ _ O
/usr _ _ O
/ _ _ O
bin _ _ O
/ _ _ O
env _ _ O
python _ _ O
import _ _ O
rospy _ _ O
from _ _ O
std_msgs.msg _ _ O
import _ _ O
String _ _ O
def _ _ O
callback _ _ O
( _ _ O
data _ _ O
) _ _ O
: _ _ O
rospy.loginfo _ _ O
( _ _ O
rospy.get_caller_id _ _ O
( _ _ O
) _ _ O
+ _ _ O
" _ _ O
I _ _ O
heard _ _ O
% _ _ O
s _ _ O
" _ _ O
, _ _ O
data.data _ _ O
) _ _ O
def _ _ O
listener _ _ O
( _ _ O
) _ _ O
: _ _ O
rospy.init_node _ _ O
( _ _ O
' _ _ O
listener _ _ O
' _ _ O
, _ _ O
anonymous=True _ _ O
) _ _ O
rospy.Subscriber _ _ O
( _ _ O
"chatter _ _ O
" _ _ O
, _ _ O
String _ _ O
, _ _ O
callback _ _ O
) _ _ O
rospy.spin _ _ O
( _ _ O
) _ _ O
if _ _ O
_ _ _ O
_ _ _ O
name _ _ O
_ _ _ O
_ _ _ O
= _ _ O
= _ _ O
' _ _ O
_ _ _ O
_ _ _ O
main _ _ O
_ _ _ O
_ _ _ O
' _ _ O
: _ _ O
listener _ _ O
( _ _ O
) _ _ O
The _ _ O
function _ _ O
callback _ _ O
( _ _ O
) _ _ O
will _ _ O
be _ _ O
called _ _ O
every _ _ O
time _ _ O
a _ _ O
message _ _ O
from _ _ O
the _ _ O
topic _ _ O
chatter _ _ O
is _ _ O
received _ _ O
. _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
Publisher _ _ O
and _ _ O
Subscriber _ _ O

About _ _ O
Callback _ _ O
Functions _ _ O
Rule _ _ O
of _ _ O
Thumb _ _ O
: _ _ O
A _ _ O
callback _ _ O
function _ _ O
should _ _ O
be _ _ O
as _ _ O
short _ _ O
as _ _ O
possible _ _ O
If _ _ O
you _ _ O
need _ _ O
to _ _ O
process _ _ O
a _ _ O
large _ _ O
data _ _ O
( _ _ O
e.g. _ _ O
, _ _ O
image _ _ O
) _ _ O
, _ _ O
the _ _ O
processing _ _ O
part _ _ O
should _ _ O
not _ _ O
be _ _ O
in _ _ O
the _ _ O
callback _ _ O
function _ _ O
The _ _ O
callback _ _ O
should _ _ O
simply _ _ O
update _ _ O
global _ _ O
variables _ _ O
and _ _ O
let _ _ O
the _ _ O
program _ _ O
process _ _ O
it _ _ O
when _ _ O
it _ _ O
is _ _ O
ready _ _ O
to _ _ O
process _ _ O
. _ _ O
: _ _ O
from _ _ O
copy _ _ O
import _ _ O
deepcopy _ _ O
image _ _ O
= _ _ O
None _ _ O
def _ _ O
aCallback _ _ O
( _ _ O
data _ _ O
) _ _ O
: _ _ O
image _ _ O
= _ _ O
data _ _ O
def _ _ O
mainProgram _ _ O
( _ _ O
) _ _ O
: _ _ O
: _ _ O
while _ _ O
not _ _ O
rospy.is_shutdown _ _ O
( _ _ O
) _ _ O
: _ _ O
: _ _ O
copyImage _ _ O
= _ _ O
deepcopy _ _ O
( _ _ O
image _ _ O
) _ _ O
# _ _ O
process _ _ O
copyImage _ _ O
: _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
Publisher _ _ O
and _ _ O
Subscriber _ _ O

rostopic _ _ O
rostopic _ _ O
is _ _ O
a _ _ O
tool _ _ O
related _ _ O
to _ _ O
topics _ _ O
in _ _ O
ROS _ _ O
environment _ _ O
It _ _ O
allows _ _ O
us _ _ O
to _ _ O
perform _ _ O
the _ _ O
following _ _ O
: _ _ O
List _ _ O
the _ _ O
current _ _ O
active _ _ O
topics _ _ O
Show _ _ O
messages _ _ O
publish _ _ O
to _ _ O
a _ _ O
specific _ _ O
topic _ _ O
on _ _ O
screen _ _ O
Publish _ _ O
a _ _ O
message _ _ O
to _ _ O
a _ _ O
specific _ _ O
topic _ _ O
Show _ _ O
information _ _ O
about _ _ O
a _ _ O
specific _ _ O
topic _ _ O
Show _ _ O
type _ _ O
of _ _ O
a _ _ O
specific _ _ O
topic _ _ O
Suppose _ _ O
we _ _ O
run _ _ O
the _ _ O
talker _ _ O
and _ _ O
listener _ _ O
node _ _ O
using _ _ O
the _ _ O
following _ _ O
commands _ _ O
in _ _ O
three _ _ O
separate _ _ O
console _ _ O
screen _ _ O
: _ _ O
roscore _ _ O
rosrun _ _ O
mypackage _ _ O
talker.py _ _ O
rosrun _ _ O
mypackage _ _ O
listener.py _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
Publisher _ _ O
and _ _ O
Subscriber _ _ O

rostopic _ _ O
Use _ _ O
rostopic _ _ O
list _ _ O
to _ _ O
list _ _ O
the _ _ O
active _ _ O
topics _ _ O
on _ _ O
the _ _ O
console _ _ O
screen _ _ O
. _ _ O
/chatter _ _ O
/rosout _ _ O
/rosout_agg _ _ O
Use _ _ O
rostopic _ _ O
echo _ _ O
chatter _ _ O
to _ _ O
show _ _ O
messages _ _ O
published _ _ O
to _ _ O
the _ _ O
topic _ _ O
chatter _ _ O
data _ _ O
: _ _ O
hello _ _ O
from _ _ O
talker _ _ O
1463668746.93 _ _ O
--data _ _ O
: _ _ O
hello _ _ O
from _ _ O
talker _ _ O
1463668747.03 _ _ O
--data _ _ O
: _ _ O
hello _ _ O
from _ _ O
talker _ _ O
1463668747.23 _ _ O
--data _ _ O
: _ _ O
hello _ _ O
from _ _ O
talker _ _ O
1463668747.33 _ _ O
-- _ _ O
: _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
Publisher _ _ O
and _ _ O
Subscriber _ _ O

rostopic _ _ O
Use _ _ O
rostopic _ _ O
info _ _ O
chatter _ _ O
to _ _ O
show _ _ O
information _ _ O
about _ _ O
the _ _ O
topic _ _ O
chatter _ _ O
Type _ _ O
: _ _ O
std_msgs _ _ O
/ _ _ O
String _ _ O
Publishers _ _ O
: _ _ O
* _ _ O
/talker_4544_1463668570440 _ _ O
( _ _ O
http _ _ O
: _ _ O
/ _ _ O
/ _ _ O
r2-d2 _ _ O
: _ _ O
56659 _ _ O
/ _ _ O
) _ _ O
Subscribers _ _ O
: _ _ O
* _ _ O
/listener_4723_1463668575785 _ _ O
( _ _ O
http _ _ O
: _ _ O
/ _ _ O
/ _ _ O
r2-d2 _ _ O
: _ _ O
35408 _ _ O
) _ _ O
Use _ _ O
rostopic _ _ O
type _ _ O
chatter _ _ O
to _ _ O
show _ _ O
the _ _ O
type _ _ O
of _ _ O
the _ _ O
topic _ _ O
chatter _ _ O
std_msgs _ _ O
/ _ _ O
String _ _ O
To _ _ O
publish _ _ O
the _ _ O
string _ _ O
" _ _ O
Blah _ _ O
Blah _ _ O
Blah _ _ O
" _ _ O
to _ _ O
the _ _ O
topic _ _ O
chatter _ _ O
rostopic _ _ O
pub _ _ O
/chatter _ _ O
std_msgs _ _ O
/ _ _ O
String _ _ O
" _ _ O
Blah _ _ O
Blah _ _ O
Blah _ _ O
" _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
Publisher _ _ O
and _ _ O
Subscriber _ _ O

Workspace _ _ O
Directory _ _ O
Your _ _ O
workspace _ _ O
directory _ _ O
is _ _ O
/home _ _ O
/ _ _ O
[ _ _ O
username _ _ O
] _ _ O
/ _ _ O
cs1567 _ _ O
/ _ _ O
src _ _ O
/ _ _ O
mypackage _ _ O
All _ _ O
Python _ _ O
program _ _ O
should _ _ O
be _ _ O
in _ _ O
/home _ _ O
/ _ _ O
[ _ _ O
username _ _ O
] _ _ O
/ _ _ O
cs1567 _ _ O
/ _ _ O
src _ _ O
/ _ _ O
mypackage _ _ O
/ _ _ O
scripts _ _ O
or _ _ O
any _ _ O
subdirectory _ _ O
under _ _ O
the _ _ O
above _ _ O
directory _ _ O
. _ _ O
To _ _ O
quickly _ _ O
change _ _ O
to _ _ O
.. _ _ O
/mypackage _ _ O
directory _ _ O
, _ _ O
you _ _ O
can _ _ O
simply _ _ O
type _ _ O
roscd _ _ O
my _ _ O
[ _ _ O
Tab _ _ O
] _ _ O
where _ _ O
[ _ _ O
Tab _ _ O
] _ _ O
is _ _ O
the _ _ O
Tab _ _ O
button _ _ O
on _ _ O
your _ _ O
keyboard _ _ O
. _ _ O
Thumrongsak _ _ O
Kosiyatrakul _ _ O
Publisher _ _ O
and _ _ O
Subscriber _ _ O



